Failing to create an algorithm for a probabilistic simulation
<p>Let's say I have 4 different kinds of letters (<code>A</code> <code>B</code> <code>C</code> <code>D</code>), they are randomly sorted and repeating 100 times. As in:</p> <pre><code>ACBABDAABDCBDCCBDACDBADB... </code></pre> <p>The thing is, they can transform into one another and we know the probabilities for each of them. Like: </p> <ul> <li><p><code>A</code> to <code>A</code> it's <code>0.7</code>;</p></li> <li><p><code>A</code> to <code>B</code> it's <code>0.1</code>;</p></li> <li><p><code>A</code> to <code>C</code> it's <code>0.1</code>;</p></li> <li><p><code>A</code> to <code>D</code> it's <code>0.1</code>;</p></li> </ul> <p>and so on.</p> <p>What I need to do is create a random number (<code>RN</code>) between <code>0</code> and <code>1</code> for each site, for example for the first letter A:</p> <ul> <li><p>if <code>RN&gt;= 0</code> and <code>RN&lt;0.7</code>, set the letter as an <code>A</code> on a new line,</p></li> <li><p>if <code>RN&gt;=0.7</code> and <code>RN&lt;0.8</code>, set the letter as a <code>B</code> on the new line,</p></li> <li><p>if <code>RN&gt;=0.8</code> and <code>RN&lt;0.9</code>, set the letter as a <code>C</code> on the new line,</p></li> <li><p>else, set the letter as a <code>D</code> on the new line.</p></li> </ul> <p>and creating a new sequence of 100 letters by repeating it all along the line. Finally, repeat the whole process 1000 times to come up with a new sequence (because of the fact that each time we will create the numbers randomly, if I want to start from the first sequence and apply the process for another 1000 times, the probability of me getting the same sequence should be very low).</p>
<p>The sequence you are trying to generate is called a <em>Markov chain</em> and you can generate one with the help of a <em>transition matrix</em>. The transition matrix is an NxN matrix (where N is the number of possible states, four in your case) where the i-th row and j-th column tells you the probability of going from state i to state j. Naturally, the rows of the transition matrix must sum to one. For example, a transition matrix might be</p> <pre><code>&gt;&gt; transitionMatrix = [0.9 0.1; 0.1 0.9]; </code></pre> <p>which describes a sequence with two states, where the probability of staying in the same state is 0.9 and the probability of moving to the other state is 0.1.</p> <p>If you specify a transition matrix, an initial state and a length to generate, then you can use this function to give you random sequences with the properties you want -</p> <pre><code>function states = markov(transitionMatrix, initialState, n) states = [initialState; zeros(n-1, 1)]; cdfMatrix = cumsum(transitionMatrix, 2); rands = rand(n-1,1); for i = 1:n-1 states(i+1) = find(rands(i) &lt; cdfMatrix(states(i), :), 1); end end </code></pre> <p>For example, with the transition matrix above I can generate</p> <pre><code>&gt;&gt; states = markov(transitionMatrix, 1, 100); &gt;&gt; plot(states, '-b.') </code></pre> <p><img src="https://i.stack.imgur.com/EbHwH.png" alt="enter image description here"></p> <p>In your case you want letters A to D instead of numbers, but in that case just generate the sequence with the numbers 1-4 and then replace the numbers with letters afterward.</p>