OpenMP problems with Matlab mex
<p>I'm trying to parallelize my C++ mex code using OpenMP. However, it seems like I'm creating a race condition somewhere and my code exits with glibc() detected. What's more interesting is that my code does not exit all the times. Sometimes, it passes through all the iterations of the loop but it fails sometimes (and Matlab crashes). I really couldn't figure out where the code fails. Does anyone have any inputs? </p> <p>Here is my code:</p> <pre><code>#include "mex.h" #include &lt;stdlib.h&gt; #include &lt;omp.h&gt; using namespace std; void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) { mwIndex *jcUq31; double *const1; const1 = mxGetPr(prhs[0]); jcUq31 = mxGetJc(prhs[2]); /*Assign the constants*/ int nq, npol; nq=const1[0]; npol=const1[1]; #pragma omp parallel { #pragma omp for for(int q1=nq/2+1;q1&lt;=nq;q1++){ int *Uome2, *q2, *pol2, *pol3, *Uq3, *q3, *index2, *index3; int num_interactions, q11,j,index1,index; int pol1=1; Uome2 = (int*)mxMalloc(1*sizeof(int)); //Initialize with just one memory block - will update with mxRealloc q2 = (int*)mxMalloc(1*sizeof(int)); q11=q1-nq/2; j=((pol1-1)+(q11-1)*npol)+1; //Column in the interaction matrix - given k(p) index1=(pol1-1)*nq+q1; num_interactions=jcUq31[j]-jcUq31[j-1]; mexPrintf("num_interactions %d thread number %d q1 %d \n", num_interactions,omp_get_thread_num(),q1); Uome2 = (int*)mxRealloc(Uome2, num_interactions*sizeof(int)); q2 = (int*)mxRealloc(q2, num_interactions*sizeof(int)); } } } </code></pre> <p>Thanks for the help!</p>