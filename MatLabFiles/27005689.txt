Replacing only specific column values in an array in Matlab
<p>I have an array that has about 70,000 rows that look like the following:</p> <pre><code>A = [ 1 2 3 4 5 6 0 723 1 22 1 2 3 4 5 7 0 NaN 2 10 etc.. ] </code></pre> <p>I would like to replace all NaN values in my array with the preceding value in the same column as the NaN value so that I would have something like this:</p> <pre><code>B = [ 1 2 3 4 5 6 0 723 1 22 1 2 3 4 5 7 0 723 2 10 etc.. ] </code></pre> <p>Since the array has about 70,000 rows, I am guessing some sort of loop would be the best way to achieve this. Using the following:</p> <pre><code>for ii = 1:size(A,2) I = A(1,ii); for jj = 2:size(A,1) if isnan(A(jj,ii)) A(jj,ii) = I; else I = A(jj,ii); end end end </code></pre> <p>I have been able to make a loop that replaces the whole row with the preceding row, but I am unsure how to modify it to target only NaN values. Any help would be greatly appreciated! </p>
<p>As long as there are now <code>NaN</code>'s in the first row, you can just replace the values directly:</p> <pre><code>for ii = 1:size(A,2) for jj = 2:size(A,1) if isnan(A(jj,ii)) A(jj,ii) = A(jj-1,ii); end end end </code></pre> <p>Which avoids creating a second matrix <code>B</code>.</p> <p>I think you're right, an you do need to use <code>for</code>-loops since your matrix is so large, but here is a non-<code>for</code> loop version anyway:</p> <pre><code>while(any(isnan(A(:)))) A(find(isnan(A)))=A(find(isnan(A))-1) end </code></pre>
<p>Not sure why the <code>I = A(1, ii);</code> or the <code>else</code> branch is needed. If a <code>NaN</code> is found, just replace it with the value from the previous row:</p> <pre><code>for ii = 1:size(A,2) for jj = 2:size(A,1) if (isnan(A(jj,ii))) A(jj,ii) = A(jj-1, ii); %jj-1 is the previous row end end end </code></pre>