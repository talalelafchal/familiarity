Matlab R2014a - datevec() neglects (partially) the given date format
<p>I'm trying to extract a date's components from a given string and I've discovered that <strong>datevec()</strong> suits my needs perfectly. However I have two problems that I'll discuss based on the following example:</p> <pre><code>dateString = '12.03.09 17:18'; % This is some random date as a string dateFormat = 'dd.mm.yy HH:SS'; % This is the format of the date date = datevec( dateString, dateFormat) % Create a vector with each component being part of a date (year,month,day etc.) </code></pre> <p>Executing this example revealed to me two issues:</p> <ol> <li><strong>datevec()</strong> scrambles my day-month-year part of the date and spins it around so it becomes year-month-date. This does NOT correspond to my <strong>dateFormat</strong>. It makes sense though since time-wise year > month > day > hour > minute > second > ... but the question is "Is this always happening or is it something that I did wrong?"</li> <li><p><strong>datevec()</strong> produces a 1x6 vector with the last component being the seconds in my date. I have discovered this completely by accident since my final goal is to have</p> <pre><code>[year,moth,day,hour,minute] = datevec(...) </code></pre> <p>but my initial experiments (see code at the beginning) showed me that the seconds are ALWAYS stored no matter what my format is. If seconds for example are not present in my <strong>dateString</strong>, the value is simply set to 0. The question here is again as in issue 1: "Am I doing something wrong or is this how datevec() always (mis)bihaves?"</p></li> </ol> <p>The <a href="http://de.mathworks.com/help/matlab/ref/datevec.html" rel="nofollow">documentation</a> is somewhat unclear here. It does say that <strong>datevec()</strong> supports up to milliseconds (as a fraction of seconds like 'HH:SS:MM.FFF' with FFF being the milliseconds part) however it does not tell (at least I was unable to find it) anything about the order in the resulting vector.</p> <p>The order is not too much of a big deal as long as this sort of behaviour is constant. I'd like however to be able to tell <strong>datevec()</strong> to store only those components of a date that I have chosen. For those of you who are going to say "It's just one more number, what's the big deal?" I can simply reply "It becomes a great deal memory-wise if you have millions of dates that you have to work with." (in my case - data mining).</p> <p>Thanks!</p>