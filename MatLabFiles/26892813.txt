Matlab: trying to fix the &quot;RGB color data not yet supported in Painter's mode&quot; warning
<p>I'm trying to use the <a href="http://www.mathworks.com/matlabcentral/fileexchange/23629-export-fig" rel="nofollow">export_fig</a> matlab tool to export matlab figures in vector format (pdf or eps). </p> <p>When trying do that, I get "Warning: RGB color data not yet supported in Painter's mode" and none of the colored parts are shown.</p> <p>The author has addressed this issue in the README.md (in the package) with</p> <pre><code>**RGB color data not yet supported in Painter's mode** - you will see this as a warning if you try to export a figure which contains patch objects whose face or vertex colors are specified as a an RGB colour, rather than an index into the colormap, using the painters renderer (the default renderer for vector output). This problem can arise if you use `pcolor`, for example. This is a problem with MATLAB's painters renderer, which also affects `print`; there is currently no fix available in export_fig (other than to export to bitmap). The suggested workaround is to avoid colouring patches using RGB. First, try to use colours in the figure's colourmap (instructions [here](http://www.mathworks.co.uk/support/solutions/en/data/1-6OTPQE/)) - change the colourmap, if necessary. If you are using `pcolor`, try using [uimagesc](http://www.mathworks.com/matlabcentral/fileexchange/11368) (on the file exchange) instead. </code></pre> <p>And in <a href="http://www.mathworks.co.uk/support/solutions/en/data/1-6OTPQE/" rel="nofollow">http://www.mathworks.co.uk/support/solutions/en/data/1-6OTPQE/</a> we have the accepted solution as </p> <pre><code>s = surf(peaks(50), 'CData', cat(3, 0.8*ones(50), ones(50), 0.65*ones(50))); rgb_colors = get(s, 'CData'); [i, map] = rgb2ind(rgb_colors, 64); set(s, 'CData', double(i)); colormap(map); </code></pre> <p>Now I have a figure which has some contour lines and the problem might be the way I'm accessing their handles, because by trying this:</p> <pre><code>&gt;&gt; h = findobj(gca, 'Type', 'Line') h = Empty matrix: 0-by-1 </code></pre> <p>i.e. no lines are found. So I'm currently using this:</p> <pre><code>&gt;&gt; h = get(gca, 'children') </code></pre> <p>And then, to convert the colors, I'll use the subsequent lines from the forum post, which give an error:</p> <pre><code>&gt;&gt; [i, map] = rgb2ind(rgb_colors, 64) Error using cq First input must be a uint8 array. Error in rgb2ind (line 89) [map,X] = cq(RGB,m); </code></pre> <p>I'll also output the contents of rgb_colors:</p> <pre><code>&gt;&gt; rgb_colors rgb_colors = [2x451x3 double] [2x480x3 double] [2x359x3 double] [2x311x3 double] [2x279x3 double] [2x263x3 double] [2x259x3 double] [2x253x3 double] [2x261x3 double] [2x269x3 double] [2x260x3 double] [2x261x3 double] [2x261x3 double] [2x259x3 double] [2x263x3 double] [2x259x3 double] [2x259x3 double] [2x253x3 double] [2x255x3 double] [2x255x3 double] [2x255x3 double] [3x34577x3 double] [] </code></pre> <p>And I'm sorry if this is very basic, I don't have much experience in matlab.</p>