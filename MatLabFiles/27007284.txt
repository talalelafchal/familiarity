matlab symbolic solver: how to include the dot operator in the answer
<p>I am solving a the det of a matrix which contains the unknown variable <code>d</code>. The variables <code>a b c p q B C</code> are my known variables, where lower/uppercase corresponds to distances/angles. Below its the code:</p> <pre><code>syms a b c p q B C positive; d = sym('d','positive'); det_eqn = det([... %cayley_menger_mat 0 a^2 p^2 d^2 1;... a^2 0 b^2 q^2 1;... p^2 b^2 0 c^2 1;... d^2 q^2 c^2 0 1;... 1 1 1 1 0]); det_ans = solve(det_eqn,d,'Real',true); </code></pre> <p>Upon solving, matlab returns:</p> <pre><code>det_ans = ((((a + b + p)*(b + c + q)*(a + b - p)*(a - b + p)*(b - a + p)*(b + c - q)*(b - c + q)*(c - b + q))^(1/2) - b^4 + a^2*b^2 + a^2*c^2 + b^2*c^2 - a^2*q^2 + b^2*p^2 + b^2*q^2 - c^2*p^2 + p^2*q^2)/(2*b^2))^(1/2) ((a^2*b^2 - b^4 - ((a + b + p)*(b + c + q)*(a + b - p)*(a - b + p)*(b - a + p)*(b + c - q)*(b - c + q)*(c - b + q))^(1/2) + a^2*c^2 + b^2*c^2 - a^2*q^2 + b^2*p^2 + b^2*q^2 - c^2*p^2 + p^2*q^2)/(2*b^2))^(1/2) </code></pre> <p>My question is: is there an option to have matlab output the dot operator in its answer, so it looks like this?</p> <pre><code>((((a + b + p).*(b + c + q).*(a + b - p).*(a - b + p).*(b - a + p).*(b + c - q).*(b - c + q).*(c - b + q)).^(1/2) - b.^4 + a.^2.*b.^2 + a.^2.*c.^2 + b.^2.*c.^2 - a.^2.*q.^2 + b.^2.*p.^2 + b.^2.*q.^2 - c.^2.*p.^2 + p.^2.*q.^2)./(2.*b.^2)).^(1/2) </code></pre> <p>My initial symbolic expressions are actually numerical column vectors, so my idea is to use <code>eval</code> on <code>det_ans</code> and have it output the correct column vector (doing all operations element by element). I would appreciate any other answers that accomplish my end goal without using for loops as well.</p>
<p>I think what you are looking for is <a href="http://au.mathworks.com/help/symbolic/matlabfunction.html" rel="nofollow"><code>matlabFunction</code></a>:</p> <pre><code>det_ans_func=matlabFunction(det_ans) </code></pre> <p>should give you a function that will accept vector inputs (as long as they are all the right size etc.). You just have to check the order of inputs.</p>
<p>Never mind, evaluating <code>det_ans</code> as is does result in elementwise operations. Just have to select which equation to choose (i.e. <code>eval(det_ans(1))</code>).</p>