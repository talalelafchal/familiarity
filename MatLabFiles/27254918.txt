Double-side threshold in a truncated Gabor function
<p>I'm doing a extraction of blood vessels in the retina and for that I'm following the paper where now i have to do a Double-side threshold in a truncated Gabor function. The part of the paper that explains that is:</p> <p>Double-sided thresholding Let <code>r(x)</code> denote the peak of the truncated Gabor function. The threshold value <code>T</code> is defined at the points <code>x = (x + d)</code> and <code>(x d)</code> as in the following inequalities:</p> <pre><code>R(x) - r(x-d) &gt; T R(x) - r(x+d) &lt; T </code></pre> <p>Now, <code>d</code> is obtained by multiplying <code>r</code> by a constant <code>cd</code></p> <pre><code>T = ct * t </code></pre> <p>where <code>ct</code> is a constant obtained empirically</p> <pre><code>t = r(x) - r(x-d)= r(x) - r(x+d) T = -exp(d^2/2*sigm)*cos(2*pi*d/lambda) </code></pre> <p>Note that for the extraction of the smaller vessels the threshold value <code>T</code> is multiplied by 0.5 (empirical). Since each convolution result (from each direction) yields in maximum intensity pixels representing vessels in that direction, we compare the pixel values for all the images and choose the maximum intensity value to form the vessel map representing the vessels in all the chosen orientations</p> <p>I donÂ´t know how to do the Double-side threshold to aply to my gabor function This is the code that i use to the gabor functiion:</p> <pre><code>thetas=0:pi/12:pi; lambda=3.5; sigmalow=1.3; sigmahigh=5.8; %%Small Blood-vessels sigma_x = sigmalow; sigma_y = sigmalow; for theta=1:numel(thetas) nstds = 5; xmax = max(abs(nstds*sigma_x*cos(theta)),abs(nstds*sigma_y*sin(theta))); xmax = ceil(max(1,xmax)); ymax = max(abs(nstds*sigma_x*sin(theta)),abs(nstds*sigma_y*cos(theta))); ymax = ceil(max(1,ymax)); xmin = -xmax; ymin = -ymax; [x,y] = meshgrid(xmin:xmax,ymin:ymax); x_theta=x*cos(theta)+y*sin(theta); y_theta=-x*sin(theta)+y*cos(theta); gb= exp(-(x_theta.^2/sigma_x^2+y_theta.^2/sigma_y^2)).*cos(2*pi*x_theta/lambda); filtered = conv2(Bhigh,gb); filtered2 = conv2(Blow,gb); end figure(6),imshow(filtered,[]); figure(7),imshow(filtered2,[]); </code></pre>