Matlab - Issue with evaluating anonymous function using arrayfun
<p>I'm encountering the following Matlab error:</p> <pre><code>??? Input argument "Va4" is undefined. Error in ==&gt; sym.matlabFunction&gt;makeFhandle/@(Va1,Va4,Vm1,Vm4)reshape([cos(conj(Va1)-conj(Va4)).*conj(Vm1).*conj(Vm4).*(6.25e2./7.2e1)+Vm1.*Vm4.*cos(Va1-Va4).*(6.25e2./7.2e1),sin(conj(Va1)-conj(Va4)).*conj(Vm1).*conj(Vm4).*(6.25e2./7.2e1)+Vm1.*Vm4.*sin(Va1-Va4).*(6.25e2./7.2e1),Vm4.*sin(Va1-Va4).*(6.25e2./7.2e1)+sin(conj(Va1)-conj(Va4)).*conj(Vm4).*(6.25e2./7.2e1),Vm1.*(6.25e2./3.6e1)+conj(Vm1).*(6.25e2./3.6e1)-Vm4.*cos(Va1-Va4).*(6.25e2./7.2e1)-cos(conj(Va1)-conj(Va4)).*conj(Vm4).*(6.25e2./7.2e1)],[2,2]) </code></pre> <p>I'm trying to evaluate an anonymous function, a 2x2 matrix, at a point as follows</p> <pre><code>J = @(Va1,Va4,Vm1,Vm4) reshape( ... [cos(conj(Va1)-conj(Va4)).*conj(Vm1).*conj(Vm4).*(6.25e2./7.2e1)+Vm1.*Vm4.*cos(Va1-Va4).*(6.25e2./7.2e1),... sin(conj(Va1)-conj(Va4)).*conj(Vm1).*conj(Vm4).*(6.25e2./7.2e1)+Vm1.*Vm4.*sin(Va1-Va4).*(6.25e2./7.2e1),... Vm4.*sin(Va1-Va4).*(6.25e2./7.2e1)+sin(conj(Va1)-conj(Va4)).*conj(Vm4).*(6.25e2./7.2e1),... Vm1.*(6.25e2./3.6e1)+conj(Vm1).*(6.25e2./3.6e1)-Vm4.*cos(Va1-Va4).*(6.25e2./7.2e1)-cos(conj(Va1)-conj(Va4)).*conj(Vm4).*(6.25e2./7.2e1)],... [2,2]); arrayfun(J, [0,0,1,1] , 'UniformOutput', false) </code></pre> <p>Any idea what's going wrong? </p> <hr> <p>EDIT: I should have mentioned that the function J is defined from some other function, so I am unable to provide the inputs as separate arguments. I have attempted to pass the input as a cell as: arrayfun(J, {0,0,1,1} , 'UniformOutput', false); but I run into the following error</p> <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>??? Undefined function or method 'conj' for input arguments of type 'cell'.</code></pre> </div> </div> </p> <hr> <p>EDIT #2: Solved by Nemesis below, we need to pass the cell input, A = {0,0,1,1} into arrayfun using A{:}.</p>
<p>Check the documentation of <a href="http://de.mathworks.com/help/matlab/ref/arrayfun.html" rel="nofollow">arrayfun.</a></p> <pre><code>[B1,...,Bm] = arrayfun(func,A1,...,An,Name,Value) </code></pre> <p>Each input parameter is a single argument. Since you pass your four input parameters as array</p> <pre><code>[0,0,1,1] </code></pre> <p>this is only treated as one argument. Just rewrite your call to the anonymous function to</p> <pre><code>arrayfun(J, 0, 0, 1, 1, 'UniformOutput', false) </code></pre> <p>resolves the issue. You can now make your code more parallel using e.g.</p> <pre><code>arrayfun(J, [0 1 1],[0 0 1],[1 0 1],[1 1 1] , 'UniformOutput', false) ans = [2x2 double] [2x2 double] [2x2 double] </code></pre> <p>which will use the function <code>J</code> on all <code>[0,0,1,1]</code>, <code>[1,0,0,1]</code> and <code>[1,1,1,1]</code>.</p>