Matlab function that returns gradient
<p>I'm trying to create a function, that has two output arguments: 1. The calculated f(x) value 2. The gradient</p> <p>But it's calling itself recursively all the time. What am I doing wrong?</p> <pre><code>function [y, gra] = f1(x) y = x^2 syms z gra = gradient(f1(z)) </code></pre> <p>Thanks.</p> <p>edit: Now I have this:</p> <pre><code>function [y, gra] = f1(x) y = x^2 if nargout == 2 syms x gra = gradient(f1(x)) end </code></pre> <p>edit 2:</p> <p>I'm trying to use the function in the following:</p> <pre><code>[y, grad] = f1(5); y_derived = grad(10); </code></pre>
<p>I think this is what you want to do:</p> <pre><code>function [y, gra] = f1(x) f=@(x) x^2; y=f(x); %// calculate y syms z %// initialise symbolic variable gra=gradient(f(z),z); %// symbolic differentiation </code></pre> <p>This will return <code>g</code> as a symbolic function. To calculate a value, you can use <code>subs(gra,z,123)</code>, or, if you are going to evaluate it many times, do <code>gradFunc=matlabFunction(gra)</code> then <code>gradFunc(v)</code> where <code>v</code> is a vector or matrix of points you want to evaluate.</p>
<p>That's because the argument into <code>gradient</code> is your function name <code>f1(z)</code>. As such, it keeps calling <code>f1</code> when your original function is also called <code>f1</code>, and so the function keeps calling itself until you hit a recursion limit. </p> <p>I think you meant to put <code>gradient(y)</code> instead. Try replacing your <code>gradient</code> call so that it is doing:</p> <pre><code>gra = gradient(y); </code></pre>