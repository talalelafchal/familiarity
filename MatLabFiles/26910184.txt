Compare colour variations for an image using MATLAB
<p>I intended to choose one point of the image and compare other points' RGB　values with this point's, and then change the similar points' colors, but I failed. Following is my code:</p> <pre><code>function exchangecolor() I1=imread('F:\28.jpg'); I2=imread('F:\29.jpg'); [m1,n1,x1]=(size(I1)); [m2,n2,x2]=size(I2); //[399,400,3]=size(I1)=size（I2) r1=I1(200,200,1); r2=I2(200,200,1); g1=I1(200,200,2); g2=I2(200,200,2); b1=I1(200,200,3); b2=I2(200,200,3); for i=1:m1 for j=1:n1 if abs(I1(i,j,1)-r1)&lt;=10 if abs(I1(i,j,2)-g1)&lt;=10 if abs(I1(i,j,3)-b1)&lt;=10 I1(i,j,1)=r2; I1(i,j,2)=g2; I1(i,j,3)=b2; end end end end end imwrite(I1,'F:\89.jpg','jpg'); </code></pre>
<p>I'm not sure about the correctness of your code, but nested loops and if clauses is not the Matlab-ish way of doing stuff.</p> <p>Have you considered this approach:</p> <pre><code>rgb1 = I1(200,200,:); rgb2 = I2(200,200,:); sel = all( abs( bsxfun(@minus, I1, rgb1) ) &lt;= 10, 3 );%//need care when subtracting `uint` type! % replace for ci=1:3 tmp = I1(:,:,ci); tmp(sel) = rgb2(ci); I1(:,:,ci) = tmp; end </code></pre> <p>The only thing I can think of that might be problematic here is that <code>I1</code> is probably of type <code>uint8</code> and for some reason Matlab is having hard time subtracting <code>rgb1</code> from <code>I1</code>. Try casting <code>I1</code> to <code>double</code> and see if it helps.</p> <hr> <p>PS,<br> It is best <a href="http://stackoverflow.com/questions/14790740/using-i-and-j-as-variables-in-matlab">not to use <code>i</code> and <code>j</code> as variable names in Matlab</a>.</p>