Python's Scikit-like Text Vectorization in Matlab
<p>I have been using Scikit's text vectorizer in Python for a long time:</p> <pre><code>from sklearn.feature_extraction.text import CountVectorizer vectorizer = CountVectorizer(binary=False,stop_words='english',ngram_range=(1, 2)) X1= vectorizer.fit_transform(X1_corpus) X2 = vectorizer.transform(X2_corpus) </code></pre> <p>This code generates a bag of words representation: it takes a list of strings where each string contains some English text (X1_corpus in the example), finds the unique set of words in all strings, and assigns an ID to each word. Then, it returns a sparse matrix where in each row we have the a representation of the corresponding string in the corpus. And each column stands for an individual word. </p> <p>The entry (i,j) in the returned sparse matrix is equal to the number occurrences of the "j"th word in the "i"th entry of the original list.</p> <p>Now here is my question: Is it possible to do this "text vectorization" in Matlab as efficiently?</p> <p>Thanks!</p>