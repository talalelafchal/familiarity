Matlab: Array of random integers with no direct repetition
<p>For my experiment I have 20 categories which contain 9 pictures each. I want to show these pictures in a pseudo-random sequence where the only constraint to randomness is that one image may not be followed directly by one of the same category. So I need something similar to</p> <p><code>r = randi([1 20],1,180);</code></p> <p>just with an added constraint of two numbers not directly following each other. E.g.</p> <p>14 8 15 15 7 16 6 4 1 8 is not legitimate, whereas</p> <p>14 8 15 7 15 16 6 4 1 8 would be.</p> <p>An alternative way I was thinking of was naming the categories A,B,C,...T, have them repeat 9 times and then shuffle the bunch. But there you run into the same problem I think? I am an absolute Matlab beginner, so any guidance will be welcome.</p>
<p>The following uses <strong>modulo operations</strong> to make sure each value is different from the previous one:</p> <pre><code>m = 20; %// number of categories n = 180; %// desired number of samples x = [randi(m)-1 randi(m-1, [1 n-1])]; x = mod(cumsum(x), m) + 1; </code></pre> <p><strong>How the code works</strong></p> <ul> <li>In the third line, the first entry of <code>x</code> is a random <em>value</em> between <code>0</code> and <code>m-1</code>. Each subsequent entry represents the <em>change</em> that, modulo <code>m</code>, will give the next value (this is done in the fourth line).</li> <li>The key is to choose that change between <code>1</code> and <code>m-1</code> (not between <code>0</code> and <code>m-1</code>), to assure consecutive values will be different. In other words, given a value, there are <code>m-1</code> (not <code>m</code>) choices for the next value.</li> <li>After the modulo operation, <code>1</code> is added to to transform the range of resulting values from <code>0</code>,...,<code>m-1</code> to <code>1</code>,...,<code>m</code>.</li> </ul> <p><strong>Test</strong></p> <p>Take all (<code>n-1</code>) pairs of consecutive entries in the generated <code>x</code> vector and count occurrences of all (<code>m^2</code>) possible combinations of values:</p> <pre><code>count = accumarray([x(1:end-1); x(2:end)].', 1, [m m]); imagesc(count) axis square colorbar </code></pre> <p>The following image has been obtained for <code>m=20; n=1e6;</code>. It is seen that all combinations are (more or less) equally likely, except for pairs with repeated values, which never occur.</p> <p><img src="https://i.stack.imgur.com/N4IE2.png" alt="enter image description here"></p>
<p>You could look for the repetitions in an iterative manner and put new set of integers from the same group <code>[1 20]</code> only into those places where repetitions have occurred. We continue to do so until there are no repetitions left -</p> <pre><code>interval = [1 20]; %// interval from where the random integers are to be chosen r = randi(interval,1,180); %// create the first batch of numbers idx = diff(r)==0; %// logical array, where 1s denote repetitions for first batch while nnz(idx)~=0 idx = diff(r)==0; %// logical array, where 1s denote repetitions for %// subsequent batches rN = randi(interval,1,nnz(idx)); %// new set of random integers to be placed %// at the positions where repetitions have occured r(find(idx)+1) = rN; %// place ramdom integers at their respective positions end </code></pre>