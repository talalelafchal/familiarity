Recursive function is only generating half the desired outputs
<p>This is related to <a href="http://stackoverflow.com/questions/21895335/generate-a-matrix-containing-all-combinations-of-elements-taken-from-n-vectors">Generate a matrix containing all combinations of elements taken from n vectors</a></p> <p>My solution uses recursion, but is missing half of the desired outputs. This is how I call it</p> <pre><code>allinputs = {[1 2] [3 4] [5 6] [7 8]} inputArray = inputBuilder([],allinputs,1) </code></pre> <p>I can get this done without recursion but I like this way because it's more extensible for my purposes.</p> <pre><code>function inputArray = inputBuilder(currBuild, allInputs, currIdx) inputArray = []; if currIdx &lt;= length(allInputs) for i = 1:length(allInputs{currIdx}) mybuild = [currBuild allInputs{currIdx}(i)]; inputArray = [inputArray inputBuilder(mybuild,allInputs,currIdx + 1)]; end if currIdx == length(allInputs) inputArray = {inputArray mybuild}; end end end </code></pre> <p>I should be getting a vector 16 1x4 arrays but I'm missing all the combinations that end with 7</p> <p>*1 3 5 7</p> <p>1 3 5 8</p> <p>*1 3 6 7</p> <p>1 3 6 8</p> <p>etc etc... The * indicates what I'm missing in the output, it just comes out as []</p>
<p>Solved it</p> <pre><code>function inputArray = inputBuilder(currBuild, allInputs, currIdx) inputArray = []; if currIdx &lt;= length(allInputs) for i = 1:length(allInputs{currIdx}) mybuild = [currBuild allInputs{currIdx}(i)]; inputArray = [inputArray inputBuilder(mybuild,allInputs,currIdx + 1)]; end else if isempty(inputArray) inputArray = {currBuild}; else inputArray = {inputArray currBuild}; end end end </code></pre>