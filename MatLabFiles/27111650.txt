Matlab continue graph for second loop
<pre><code> %free fall of a ball clc clear all close all v0=5; % initial velocity up g=9.8; %free fall acceleration v1=(0.7/0.9)*v0 % time of fly tup=v0/9; nsteps=10; %number of frames dt=tup/nsteps; %time step Hmax=v0*tup+(-g)*tup*tup/2; % maximum altitude altitude(1:nsteps+1)=0; %define array for position Y time=0:dt:tup;% define time array %initilaise plot figure(1) axis([0,2*tup,0,2*Hmax]); hold on % loop for i=1:nsteps altitude(i)=v0*time(i)+(-g)*time(i)*time(i); plot(time(i),altitude(i), 'ro') grid on; M(i)=getframe; end %loop bouncing for i=1:nsteps altitude(i)=v1*time(i)+(-g)*time(i)*time(i); plot(time(i),altitude(i), 'ro') grid on; M(i)=getframe; end %make movie movie(M); movie2avi(M, 'C:\Users\Mehmet\Desktop\avi\mm','compression','none'); %extra plots figure(2) plot(time(1:nsteps),altitude(1:nsteps)) figure(3) plot(time(1:nsteps),altitude(1:nsteps),'ro') </code></pre> <p>We have this ball bouncing simulation. What we want to do is, to continue loop 2 after loop 1 in graph.So, it will be continious bouncing simulation.2 bouncings are shown from 1:10 steps but we want second loop to be shown after 10 steps.</p>
<p>There are a couple of approaches, depending upon what effect you're going for. The simplest is to simply add <code>hold on</code> as a separate command after each of your plot commands. This will keep accumulating new lines/dots without erasing the old ones. To stop this effect, add a <code>hold off</code> command. The next <code>plot</code> command will then erase everything and plot on a clean graph.</p> <p>Alternatively, if you only want to show a fixed number of the previous steps (and not <em>all</em> of them, as the <code>hold on</code> will do), you'll have to explicitly hold onto the previous values. Something like this:</p> <pre><code>% loop max_history = 10; %plot this many symbols for i=1:nsteps altitude(i)=v0*time(i)+(-g)*time(i)*time(i); %get the historical and current data points to plot start_ind = i-max_history+1; %here's the oldest point that you'd like start_ind = max([start_ind, 1]) %but you can't plot negative indices inds = [start_ind:i]; %here are the ones to plot %update the plot plot(time(inds),altitude(inds), 'ro'); grid on; %you might need a "drawnow" here M(i)=getframe; end </code></pre> <p>Copy this same idea into your other <code>for</code> loops and you should be good-to-go!</p>