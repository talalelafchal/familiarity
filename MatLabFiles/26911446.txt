Error while passing arguments to events function
<p>I have a function called <code>initial</code> which takes an argument <code>funname</code> and performs some integration. I wanted to pass multiple arguments to events function. So I did this:</p> <pre><code>odeopt=odeset('RelTol',1e-5,'AbsTol',1e-5,'Events',@(t,y) events(t,y,prm,funname)); fun=str2func(funname); [t,y]=ode15s(fun,[0 3600],z,odeopt,prm); </code></pre> <p><code>prm</code> is a structure and <code>funname</code> is a string.</p> <p>This is the events function:</p> <pre><code>function [value,isterminal,direction] = events(t,y,prm,funname) isterminal=1; direction=0; v=feval(funname,1,y,prm); value=~all(v&lt;1e-10); </code></pre> <p>funname is basically the ode function.</p> <p>It still says too many input arguments.:</p> <pre><code>??? Error using ==&gt; initial&gt;@(t,y)events(t,y,prm,funname) Too many input arguments. Error in ==&gt; odeevents at 29 eventValue = feval(eventFcn,t0,y0,eventArgs{:}); Error in ==&gt; ode15s at 263 [haveEventFcn,eventFcn,eventArgs,valt,teout,yeout,ieout] = ... Error in ==&gt; initial at 10 [t,y]=ode15s(fun,[0 3600],z,odeopt,prm); </code></pre> <p>Can't be a problem of version (was using 7.6) because this <a href="http://in.mathworks.com/matlabcentral/newsreader/view_thread/123482" rel="nofollow">post</a> which addresses this issue was on 2006. </p> <p>Any Idea?</p>
<p>Since <code>prm</code> is passed as the last argument in <code>ode15s</code>, it will result in the <code>eventArgs</code> cell passing the value to the event handle. In other words, the line</p> <pre><code>eventValue = feval(eventFcn,t0,y0,eventArgs{:}); </code></pre> <p>is really doing</p> <pre><code>eventValue = eventFcn(t,y,prm); </code></pre> <p>So if <code>prm</code> is needed as an extra parameter in the ODE system, just make <code>prm</code> an input in the event handle:</p> <pre><code>odeopt=odeset(..., @(t,y,prm) events(t,y,prm,funname)); </code></pre> <hr> <p>Also, since the events function is design to locate solutions passing through zeros, the <code>value</code> should be a double such that MATLAB's <code>sign</code> function works properly.</p>