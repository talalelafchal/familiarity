Theoretical speedup not achieved - kernel separability
<p>I am seeing how to improve the time it takes for convolution using kernel separability. Below is a piece of code demonstrating this:</p> <pre><code>test = randn(3000); kx = [1 2 3 4 5 6 7 8 9]; ky = kx'; kernel = ky*kx; tic; b = conv2(test,kernel,'same'); toc; tic; bx=conv2(test,kx, 'same'); by=conv2(bx,ky, 'same'); toc; </code></pre> <p>Running the above code yields these results:</p> <p>Elapsed time is 0.564579 seconds. Elapsed time is 0.333260 seconds.</p> <p>As can be seen, this is not the theoretical speedup that I am expecting, which is supposed to be 81/18 = 4.5. </p> <p>Can anyone explain why?</p>
<p>This is not answering your question (kmac's answer covers that), but if you're looking for a performance improvement, then you may be better off getting away from the <code>conv</code> function. Doing an FFT/IFFT to achieve the same result is much faster in Matlab. There are several tradeoffs in going from a traditional convolution to the Fourier approach, but it might be helpful in your application. There are some great thoughts on the topic here:<br> <a href="http://blogs.mathworks.com/steve/2009/11/03/the-conv-function-and-implementation-tradeoffs/" rel="nofollow">http://blogs.mathworks.com/steve/2009/11/03/the-conv-function-and-implementation-tradeoffs/</a></p>
<p>Your kernel is not big enough to really see any gains. The improvement should become more apparent as you make the kernel larger:</p> <pre><code>test = randn(3000); kx = 1:100; ky = kx'; kernel = ky*kx; tic; b = conv2(test,kernel,'same'); toc; tic; bx=conv2(test,kx, 'same'); by=conv2(bx,ky, 'same'); toc; </code></pre> <p>When I run it with this 100x100 kernel size, I see:</p> <pre><code>Elapsed time is 6.961222 seconds. Elapsed time is 0.252186 seconds. </code></pre> <p>With a 200x200 kernel I get:</p> <pre><code>Elapsed time is 28.894932 seconds. Elapsed time is 0.639125 seconds. </code></pre> <p>When we double the kernel size, the 2D kernel time increases by a factor of ~4.15, and the 1D time increases by a factor of ~2.5. Not far off from the theoretical increase of 4x and 2x respectively.</p>