What is a good way to take fractional powers of a matrix in MATLAB?
<p>I am working on a problem that involves taking fractional powers of particular matrices.</p> <p>For the matrix A with 2 on the main diagonal and -1 on the sub and super diagonal (the finite difference matrix for the Dirichlet Laplacian in 1D), there was basically no difference between using MATLAB's <code>sqrtm(A)</code> function and diagonalizing the matrix (<code>A = V\D*V</code>) and computing <code>V\D^(1/2)*V</code> even if the matrix was as large as 1000x1000. This made me think I could compute other fractional powers <code>V\D^(1/n)*V</code> that MATLAB does not have built in functions for.</p> <p>However when I consider the matrix A for the Dirichlet Laplacian in 2D, there is a significant difference between MATLAB's sqrtm function and the diagonalization procedure I used above even if the matrix was as small as 100x100. In particular, MATLAB's sqrtm function is better and my results don't make any sense if I do it the other way.</p> <p>I am wondering if anyone can explain why this happens and if there is a way to fix it so that I can compute fractional powers of a large matrix in MATLAB.</p> <p><strong>Edit: I made a big mistake since <code>A = V*D/V</code>, not <code>V\D*V</code> as I wrote above (and in my code). It turns out that MATLAB uses this algorithm for computing <code>A^(1/n)</code> by doing <code>V*D^(1/n)/V</code>. This was pointed out to me in the answer</strong> <a href="http://scicomp.stackexchange.com/questions/16219/what-is-a-good-way-to-take-fractional-powers-of-a-matrix-in-matlab/16226#16226">here</a></p>
<p>If you're not talking about specific algorithms for the sparse matrices, it's just</p> <pre><code>expm(1.0/n*logm(A)) </code></pre>