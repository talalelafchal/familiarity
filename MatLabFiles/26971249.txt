How do I use Weka's MLP output prediction model in Matlab?
<p>I'm trying to do prediction in Matlab using the output of Weka's single layer MLP. In my case I have a single layer with 100 nodes and 200 features. I'm running Weka 3.7.10, and the options for weka.classifiers.functions.MultilayerPerceptron is -L 0.3 -M 0.2 -N 500 -V 0 -S 0 -E 20 -H a</p> <p>Node 0 is Linear in my case, not Sigmoid. Node 1-100 are all Sigmoid. I didn't use the -C or -I option, so by default Weka normalizes the data.</p> <p>When I try to compute the predicted value in Matlab, I don't get the same value as on Weka. In the following code:</p> <ul><li>featvals is my feature vector (stored as 200 rows) <li>featweightsall is the 200 feature weights from each of the 100 nodes that Weka provides. <li>nodeweights is the 100 nodeweights that Weka provides. <li>nodethresh is the 101 thresholds that Weka provides (rows 2-101 contain the threshold for Nodes 1-100, and row 1 contains the threshold for Node 0). </ul> <pre><code>featvalsnorm = interp1([min(featvals) max(featvals)],[-1 1],featvals,'linear'); featvalsnorm2 = (featvals - min(featvals))/(max(featvals)-min(featvals)); for j = 1:100 featweights = featweightsall( ((j-1)*200+1):(j*200)); x = sum(featvalsnorm.*featweights) + nodethresh(j+1); nodenorm(j) = 1/(1+exp(-x)); end predvalnorm = sum(nodenorm.*nodeweights)+nodethresh(1); predval = interp1([-1 1],[min(featvals) max(featvals)],predvalnorm,'linear'); </code></pre> <p>What's wrong with the code? Am I supposed to un-normalize in the loop, or apply the sigmoid to Node 0? I've tried many of these combinations, and nothing's working. Any help would be appreciated!</p>