Best way to move values from array without for loop in MATLab?
<p>So I'm trying to separate an array based on the value in one of the columns... the problem is that the for loop I'm using works, but is ridiculously slow. I can get up and have a cup of coffee and eat a sandwich by the time it finishes on my machine.</p> <pre><code>w = waitbar(0,'Separating Velocity values based on processor address'); for i = 1:length(timeDEC); if paddrDEC(i) == 0 timeU(i) = timeDEC(i); velU(i) = Velocity(i); end if paddrDEC(i) == 1 timeV(i) = timeDEC(i); velV(i) = Velocity(i); end waitbar(i/length(timeDEC),w); end close(w); </code></pre> <p>The processor address is binary, so there are only 2 options (U and V) and I need the appropriate time value to go with them. </p>
<p>Try logical indexing, like this:</p> <pre><code>timeU = timeDEC(paddrDEC==0); velU = Velocity(paddrDEC==0); timeV = timeDEC(paddrDEC==1); velV = Velocity(paddrDEC==1); </code></pre>
<p>You can use lookup splitting. It is very fast.</p> <p>Here is an example using it in C#:</p> <pre><code>IList&lt;int&gt; list = new List&lt;int&gt; { 1, 2, 3, 4, 5, 6 }; var lookup = list.ToLookup(num =&gt; num % 2 == 0); IEnumerable&lt;int&gt; trueList = lookup[true]; IEnumerable&lt;int&gt; falseList = lookup[false]; </code></pre> <p>The idea is that you can split a list based on a predicate (true and false scenario).</p>