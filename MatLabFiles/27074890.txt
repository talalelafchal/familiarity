How to access particular matrix element for all blocks in entire image?
<p>I have a 512x512 image , which i made 4x4 block for entire image, then i want access the (3rd row , 3rd element) of the all indivial 4x4 matrices and add it to the index values, which i obtained. Please help me on below code.</p> <pre><code> [row col] = size(a); m = zeros(row,col); count = [(row-4)*(col-4)]/4; outMat = zeros(4,4,count); l = 0; for i=2:4:row-4 for j=2:4:col-4 l = l + 1; outMat(:,:,l) = double(a(i-1:i+2,j-1:j+2));% for each matrix i have to find(3rd row,3rd element of each matrix. end; end; </code></pre> <p>Adding the (3rd row,3rd element):</p> <pre><code> m(i,j) = sum(sum(a .* w)); %index value of each 4x4 matrix % w = 4x4 matrix. LUT = m(i,j)+ outMat(3,3);%(3rd row,3rd element each matrix should be added to all m(i,j) values. In which i fail to add all(3rd row,3rd element) of all 4x4 matrices. </code></pre>
<p>I think you can do just</p> <pre><code>LUT = sum( sum( a(3:4:row,3:4,col) * w(3,3) ) ); </code></pre>
<p>I am going to reword your question so that it's easier to understand, as well as allowing it to be easy for me to write an answer.</p> <p>From your comments in Kostya's post, you have two images <code>img1</code> and <code>img2</code> where they are decomposed into 4 x 4 blocks. <code>outMat</code> would be a 3D matrix where each slice contains a 4 x 4 block extracted from <code>img1</code>. From this, you have a matrix <code>m</code> that stores a weighted sum of 4 x 4 blocks stored <code>outMat</code>. </p> <p>Next, you'll have another matrix, let's call this <code>outMat2</code>, which also is a 3D matrix where each slice is a 4 x 4 block extracted from <code>img2</code>. From this 3D matrix, you wish to extract the third row and third column of each block, add this to the corresponding position of <code>m</code> and store the output into a variable called <code>LUT</code>.</p> <p>All you have to do is extract a single vector that slices through all of the slices located at the third row and third column. You would then have to reshape this into a matrix that is the same size as <code>m</code> then add this on top of <code>m</code> and store it into a variable called <code>LUT</code>. Bear in mind that if we reshape this into a matrix, the reshaping will be done in <strong>column major</strong> format, and so you would stack the values by columns. Because your blocks were created <strong>row-wise</strong>, what we need to do reshape this matrix so that it has <code>size(m,2)</code> rows and <code>size(m,1)</code> columns then transpose it. </p> <p>Therefore:</p> <pre><code>vec = outMat2(3,3,:); vec = vec(:); %// Make sure it's a 1D vector m2 = reshape(vec, size(m,2), size(m,1)).'; LUT = m + m2; </code></pre> <p><code>LUT</code> will contain a 2D matrix where each element contains the weighted sum of the 4 x 4 blocks from <code>img1</code> with the corresponding third row, third column of each block in <code>img2</code>.</p> <hr> <p>Next time, please update your question so that you have all of the information. We shouldn't have to dig through your comments to figure out what you want.</p>