Matlab: get the number of lines of a part of a text file
<p>This is part of the data:</p> <pre><code> GLOBAL DOF SET = 1 3 4 5 6 33 35 36 37 38 65 67 68 69 70 97 99 100 101 102 129 131 132 133 134 161 163 164 165 166 GLOBAL DOF SET NODES, LABELS = 1 UX 1 UZ 2 UX 2 UZ 3 UX 3 UZ 4 UX 4 UZ 5 UX 5 UZ 6 UX 6 UZ 7 UX 7 UZ 8 UX 8 UZ 9 UX 9 UZ 10 UX 10 UZ 11 UX 11 UZ 12 UX 12 UZ 13 UX 13 UZ MASS INFORMATION: TOTAL MASS = 12197. CENTROID (X,Y,Z) = 30.000 0.0000 8.5809 MOMENT OF INTERTIA ABOUT ORIGIN: IXX = 0.10651E+07 IYY = 0.18383E+08 IZZ = 0.17318E+08 IXY = 0.0000 IYZ = 0.0000 IZX =-0.31397E+07 </code></pre> <p>How can I get the number of lines of the <code>GLOBAL DOF SET NODES, LABELS =</code> Part? </p> <p>In this case, the number is <code>6</code>.</p> <p>I think it maybe something to locate the <code>GLOBAL DOF SET NODES, LABELS =</code>line(using strfind?) and the end empty line. But how?</p>
<p>Indeed you can use strcmp or strfind or regexp, comparing strings. The key is to get a string to compare. This is done by reading the file line by line using the <strong>fgetl</strong> function.</p> <pre><code># Open your file and assign it's handel to fileID: fileID = fopen('yourFile.txt','r'); # Let's use the strcmp method and define your strings you test with: yourFirstLine = ' GLOBAL DOF SET NODES, LABELS ='; # Your second line, in this case and empty line: yourSecondLine = ''; # Use the variable flag to signal that you found your first line: flag = 0; iLine = 0; while ~feof(fileID) currentLine = fgetl(fileID); # Check if header line matches with the current line and store in iMatchOne: if strcmp(currentLine,yourFirstLine) iMatchOne = iLine; flag = 1; end # If you already found your first line it's time to start testing for the second line. if flag == 1 if strcmp(currentLine,yourSecondLine) iMatchTwo = iLine; # You could decide here to break, because more matches with '' will be found! end end iLine = iLine + 1; end </code></pre> <p>Hope this helps! </p> <p>Non essential: ( you could also add an if flag == 0 to the first check . Another way to go would be to break the while loop once you found your first line, and resume in a new while loop and perform the test for your second line, note that the liner number fgetl retrieves is not reset until you either close/reopen or manually reset the current line location. )</p>