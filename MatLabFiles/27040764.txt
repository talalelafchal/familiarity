Remove Inf and NaN values in a Point Cloud in the fastest way
<p>I am new to MATLAB and just started working on Stereo Vision. After 3D Stereo Reconstruction of a scene, from the point cloud I obtain, I want to ignore all the co-ordinates with values NaN or Inf.</p> <p>To do so, I am following this procedure:</p> <p>For an image of dimensions 40 X 40, the point cloud is a matrix of 40 X 40 X 3. (3 because of 3D; X, Y and Z co-ordinates).</p> <p>From the 3D point cloud (40 X 40 X 3), I rehsape to get a matrix of dimensions 1600 X 3. Each of the 3 columns corresponds to the X, Y and Z co-ordinates</p> <p>At this step, I am trying to remove the entire row if I find any Inf or NaN element.</p> <p>For example, after the concatenation step, if I have a matrix A</p> <p>A = [1, 11, 21; NaN,12, 22; 3, 13, Inf; NaN,14, NaN; 5, Inf, NaN; 6, 16, 26];</p> <p>I want to eliminate all rows which have either Inf or NaN elements.</p> <p>So the expected result would be : [1, 11, 21; 6, 16, 26];</p> <p>Since I will be working with images of dimensions 4000 X 3000, I want a very fast and efficient way of doing this.</p> <p>I'm doing this in order to fit a plane (best fit) in the point cloud I obtain. The function to fit plane does not take Inf and NaN values. So even if one NaN value is found, all the corresponding X, Y and Z co-ordinates have to be eliminated.</p> <p>If there is a better method to do this apart from what I'm doing at present, please inform.</p> <p>Thank you =)</p>
<p>For the <code>1600 x 3</code> sized reshaped <code>A</code>, you can use this -</p> <pre><code>A(~any(isinf(A) | isnan(A),2),:) </code></pre> <p>If the number of rows to be removed is a small number, you can directly remove them instead for a better performance -</p> <pre><code>A(any(isinf(A) | isnan(A),2),:) = []; </code></pre>
<p>I think the simplest way to do that is to use isnan(A) and isinf(A) functions to find NaNs and Infs. This solution works well with large matrices (I personally use these kind of solutions for matrices way larger than yours). Try :</p> <pre><code>rowstoremove = (sum(isnan(A),2) ~= 0) | (sum(isinf(A),2) ~= 0); A(rowstoremove,:) = []; </code></pre> <p>This should do the trick.</p>
<p><code>removeInvalidPoints</code> funtion is also available in matlab which removes points with Inf or NaN coordinates. You can check from here: <a href="http://www.mathworks.com/help/vision/ref/pointcloud.removeinvalidpoints.html" rel="nofollow">http://www.mathworks.com/help/vision/ref/pointcloud.removeinvalidpoints.html</a></p> <p>Since these points are considering noise in a point cloud, better way is denoising. Because you can remove outliers from your data in addition to NaN and Inf coordinates. <code>pcdenoise</code> can be used to do that. But you should convert your data to matlab's pointCloud object (You can do that by using <code>pointCloud</code> function). Check here for further information: <a href="http://www.mathworks.com/help/vision/ref/pcdenoise.html" rel="nofollow">http://www.mathworks.com/help/vision/ref/pcdenoise.html</a> </p>