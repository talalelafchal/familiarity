MATLAB: Compare data from imfindcircles to data from bwconncomp
<p><strong>WARNING</strong> - Complete n00b here.</p> <p>I'm working on a project which needs to find holes. I found a method that is fairly accurate (<code>bwconncomp</code>) but I get some extra data that I don't need (a.k.a holes that aren't holes). Now the holes are circular so I was just going to do a check with <code>imfindcircles</code>. </p> <p>So what I need to do is take the center coordinate and radius info from <code>imfindcircles</code> to filter out the non-circular holes in <code>bwconncomp</code>. How should I tackle that?</p> <pre><code>%Find Circles [centersDark, radiiDark] = imfindcircles(im,[10 75],'ObjectPolarity','dark'); %Find holes (I think) cc = bwconncomp(BW); %Put box around holes (prints to figure for debugging... kinda) rp = regionprops(cc,'BoundingBox'); </code></pre> <p>So just to clarify, I need to figure out how to weed out the extra info in <code>cc</code> from the data received in from <code>imfindcircles</code> (those variables being <code>centersDark</code> and <code>radiiDark</code>)</p> <p>Here's a sample image:<img src="https://i.stack.imgur.com/m1kp8.jpg" alt="Here&#39;s a sample image:"></p>
<p>You can also improve your segmentation stage:</p> <pre><code>close all; % read input im = imread('holes.bmp'); grayImg = rgb2gray(im); % create an image where holes are removed med = medfilt2(grayImg,[100,100],'symmetric'); figure(); imshow(med); title('median'); % subtract image with holes from image without holes % so the whole process is less dependent on ilumination of foreground diff = double(med) - double(BW); figure(); imshow(uint8(diff+127)); title('difference'); % apply threshold bw = diff &gt; 50; figure(); imshow(bw); title('threshold'); % remove small objects SE = strel('disk',10); opened = imopen(bw,SE); figure(); imshow(opened); title('imopen'); % get bounding boxes for each hole cc = bwconncomp(opened); rp = regionprops(cc,'BoundingBox'); % draw rectangles figure(); imshow(im); hold on; title('result'); for i = 1:length(rp) rectangle('Position',rp(i).BoundingBox,'EdgeColor','red') end </code></pre> <p>Result:</p> <p><img src="https://i.stack.imgur.com/4AUaq.png" alt="enter image description here"></p>