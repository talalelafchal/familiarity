How to store in a structure anonymous functions generated by a loop in Matlab?
<p>I would like to store each anonymous function generated by a Matlab loop in a <strong>structure</strong> (<strong>and not in a cell</strong>) and then access and evaluate each stored anonymous function in another separated loop. I report a very simple example with the cell approach. I don't know which is the most efficient way to use a structure in this context. </p> <pre><code>gammatrue = 2; deltatrue = -3; T = 4; n = 3; BS = 10; r = 5; bsdensdraws = cell(1, BS); bsdensdrawsev = zeros(T*n*r, BS); for w = 1:BS data = randn(T*n, n-1); mutrue = gammatrue/deltatrue*data; sigmatrue = repmat(1/(deltatrue^2)*eye(n-1), [1 1 T*n]); draws = mvnrnd(repmat(mutrue, [r 1]), repmat(sigmatrue, [1 1 r])); %matrix (r*T*n)x(n-1)) bsdensdraws{w} = @(z) mvnpdf(draws,repmat(z(1)/z(2)*data, [r 1]), ... repmat(repmat(1/(z(2)^2)*eye(n-1), [1 1 T*n]), [1 1 r])); end param = [2 3; 4 5; 6 7]; for w = 1:BS for y = 1:size(param,1) gamma = param(y,1); delta = param(y,2); bsdensdrawsev(:,w) = bsdensdraws{w}([gamma delta]); %vector (T*n*r)x1 end end </code></pre>
<p>You need to access the fields of a struct by its name, you need to generate a list of field names first. As you only have 10 fields, i suggest</p> <pre><code>fields = char(double('a'):double('a')+BS)' </code></pre> <p>which generates an array containing the letters a to k. You preallocate <code>bsdensdraws</code> by </p> <pre><code>bsdensdraws = struct(); </code></pre> <p>and write the handles to it by</p> <pre><code>bsdensdraws.(fields(w)) = ... </code></pre> <p>You can access it the same way. If you need more iterations, then you might need a more sophisticated way to generate your field names.</p>