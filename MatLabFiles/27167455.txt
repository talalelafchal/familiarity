matlab making new cell array from another cell array fileds
<p>I have Cell array lets call him thiscells</p> <pre><code>thiscells &lt;1*40 cell&gt; eacharray of thiscells is 280*3 </code></pre> <p>I have a function (let it be called TheFunction) that gets input of cell array that each array is X*2</p> <p>How can i send to TheFunction a cell array that contain only columns1,3 from each array</p> <p>I tried </p> <pre><code>TheFunction(thiscells{:}(:,1:2)) % tring to send only columns 1,2 </code></pre> <p>But it didnt work</p> <p>edit:</p> <p>working with: (but still looking for faster way to do so) what is did so far</p> <pre><code>TheFunction(makingNewCells(thiscells,2)); </code></pre> <p>when </p> <pre><code>makingNewCells: [newCells]=makingNewCells(oldCells) for ii=1:max(size(oldcells)) newCells=oldCells(:,[1 culumn]); end </code></pre>
<p><a href="http://stackoverflow.com/questions/3627107/how-can-i-index-a-matlab-array-returned-by-a-function-without-first-assigning-it">This question</a> and its answers may be of help - <code>thiscells{:}(:,1:2)</code> is already failing without the call to <code>Thefunction</code>, if I am not mistaken.</p> <p>For cells, the problem is even worse: add to this impossibility to double-subref that even if it did what you intended it to do, this passes 40 arguments (which are all 280x2 vectors) to <code>Thefunction</code>. I doubt there are (m)any legitimate uses for a function that takes 40 arguments of the same type, instead of having those wrapped in a cell. I would probably try <code>doc cellfun</code> first.</p> <p>EDIT: just to be clear, I suggest changing <code>Thefunction</code> so that it accepts a cell of 40 matrices of size 280x2), then using</p> <pre><code>cell_of_twocolumned_arrays = cellfun(@(x)x(:,[1 2]),thiscells) </code></pre>