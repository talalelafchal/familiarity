Count the number of the first zero elements
<p>I would line to find the number of the first consecutive zero elements. For example in [0 0 1 -5 3 0] we have two zero consecutive elements that appear first in the vector.</p> <p>could you please suggest a way without using for loops?</p>
<pre><code>V=[0 0 1 -5 3 0] ; k=find(V); Number_of_first_zeros=k(1)-1; </code></pre> <p>Or,</p> <pre><code>Number_of_first_zeros=find(V,1,'first')-1; </code></pre> <p>To solve @The minion comment (if that was the purpose):</p> <pre><code>Number_of_first_zeros=find(V(find(~V,1,'first'):end),1,'first')-find(~V,1,'first'); </code></pre>
<p>You could find position the first nonzero element using find.</p> <pre><code>I=find(A, 1); </code></pre> <p>The number of leading zeros is then I-1.</p>
<p>My solution is quite complex yet it doesn't use the loops and it does the trick. I am pretty sure, that there is a more direct approach. Just in case no one else posts a working solution here my idea.</p> <pre><code>x=[1 2 4 0 20 0 10 1 23 45]; x1=find(x==0); if numel(x1)&gt;1 x2=[x1(2:end), 0]; x3=x2-x1; y=find(x3~=1); y(1) elseif numel(x1)==1 display(1) else display('No zero found') end </code></pre> <p><code>x</code> is the dataset. <code>x1</code> contains the index of all zero elements. <code>x2</code> contains all those indices except the first one (because matrix dimensions must agree, one zero is added. <code>x3</code> is the difference between the index and the previous index of zeros in your dataset. Now I find all those differences which are not 1 (do not correspond to sequences of zeros) and the first index (of this data is the required result. The if case is needed in case you have only one or no zero at all.</p>
<p>Use a logical array to find the zeros and then look at where the zeros and ones are alternating.</p> <pre><code>V=[1 2 0 0 0 3 5123]; diff(V==0) ans = 0 1 0 0 -1 0 </code></pre> <hr> <p>Create sample data</p> <pre><code>V=[1 2 0 0 0 3 5123]; </code></pre> <p>Find the zeros. The result will be a logical array where <code>1</code> represents the location of the zeros </p> <pre><code>D=V==0 D = 0 0 1 1 1 0 0 </code></pre> <p>Take the difference of that array. <code>1</code> would then represent the start and <code>-1</code> would represent the end.</p> <pre><code>T= diff(D) ans = 0 1 0 0 -1 0 </code></pre> <p><code>find(T==1)</code> would give you the start and <code>find(T==-1)</code> would give you the end. The first index+1 of <code>T==1</code> would be the start of the first set of zeros and the first index of <code>T==-1</code> would be the end of the first set of zeros.</p>
<p>I'm assuming your question is the following: for the following vector [0 0 1 -5 3 0], I would like to find the index of the first element of a pair of 0 values. Is this correct? Therefore, the desired output for your vector would be '1'?</p> <p>To extend the other answers to find any such pairs, not just 0 0 (eg. 0 1, 0 2, 3 4 etc), then this might help.</p> <p><code>% define the pattern</code></p> <p><code>ptrn = [ 0 0 ];</code></p> <p><code>difference = ptrn(2) - ptrn(1)</code></p> <p><code>V = [0 0 1 -5 3 0 0 2 3 4 0 0 1 0 0 0]</code></p> <p><code>x = diff(V) == difference</code></p> <p><code>indices = find(x)</code></p> <p>indices =</p> <pre><code> 1 6 11 14 15 </code></pre>