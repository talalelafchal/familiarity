matrix multiplication and summation
<p>i'm currently trying to remake my old function which takes a fixed value x:</p> <pre><code>function [res] = Eph(x,approximation,dot) a = [ 0.1818 0.5099 0.2802 0.02817]; b = [ 3.2 0.9423 0.4029 0.2016]; if dot ~= 1 res = sum(a.*exp(-b.*x)); </code></pre> <p>Now I'm trying to pass a vector x (so the same procedure for each x_{i}) and I want to get back as a result also a vector <code>res</code>. Can someone give me a hint how to do it NOT using loops?</p>
<p>I think what you want can be done with a combination of matrix multiplication (for the <code>b.*x</code> part) and <code>bsxfun</code> (for the <code>a.*exp(...)</code>) part:</p> <pre><code>res = sum(bsxfun(@times, a, exp(-x(:)*b)), 2); </code></pre> <p>Example with your code, scalar <code>x</code>:</p> <pre><code>&gt;&gt; x = 3; &gt;&gt; res = sum(a.*exp(-b.*x)) &gt;&gt; res = 0.1292 </code></pre> <p>Example with my code, vector <code>x</code>:</p> <pre><code>&gt;&gt; x = [3 4 5]; &gt;&gt; res = sum(bsxfun(@times, a, exp(-x(:)*b)), 2) res = 0.1292 0.0803 0.0522 </code></pre>