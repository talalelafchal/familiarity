Ripple effect in MATLAB
<p>I want to write a function <code>newim = rippleim(im)</code> that takes an image and returns a new image with ripple effect on it.</p> <p>I thought calculating the distance of all points from <code>(p,q)</code> and then a multiplication of <code>sin(d).*exp(-d)</code> would give a good effect of fading waves.</p> <pre><code>n = 800; m = 800; im = zeros(n,m,3); p = [round(m*.5) round(n*.5)]; [x y] = meshgrid(1:m,1:n); x = x - p(1,1); y = y - p(1,2); d = (x .^2 + y .^2).^.5; R = cos(.05*d) .* exp(-.005*d); G = cos(.05*d) .* exp(-.005*d); B = cos(.05*d) .* exp(-.005*d); im = cat(3,R,G,B); imshow(im); </code></pre> <p>And I got,</p> <p><img src="https://i.stack.imgur.com/m4zhu.png" alt="enter image description here"> </p> <p>with normalization to <code>[0 1]</code>, it got a little better,</p> <p><img src="https://i.stack.imgur.com/bNAN8.png" alt="enter image description here"></p> <p>It still doesn't seem right.</p> <p>I even googled and found some similar cases in python <a href="http://stackoverflow.com/questions/7648072/pygame-water-ripple-effect">here</a>, about the animation. But I just want a fixed effect.</p> <p><strong>Q1</strong> How to improve the effect?</p> <p><strong>Q2</strong> How to apply it on an existing image?</p> <p>Thanks, </p>
<p>About your first part of question, instead of finding a function that suits your taste by trial and error, I suggest that you create manually by hand a look-up table "function" that you have in mind, and then fit a high-order polynomial to it.</p> <p>About your second part, I am guessing that by applying you mean using it as a mask. In this case, you can simply multiply a normalized version of ripple effect by your image:</p> <pre><code>imp = double(imread('peppers.png')); n = size(imp,1); m = size(imp,2); p = [round(m*.5) round(n*.5)]; [x,y] = meshgrid(1:m,1:n); x = x - p(1,1); y = y - p(1,2); d = (x .^2 + y .^2).^.5; mask = cos(.05*d) .* exp(-.005*d); im = (mask-min(mask(:)))./ ( max(mask(:))-min(mask(:))); I = bsxfun(@times,im,imp); imshow(I/255); </code></pre> <p><img src="https://i.stack.imgur.com/tjxsM.jpg" alt="enter image description here"></p>
<p>I finally found my answer. What I was looking for, can be done by <code>warp</code> command.</p> <p>so I define a 3D rippled surface with help of <code>cos(d)*exp(-d)</code> and texture my picture on it. </p> <pre><code>im = imread('peppers.png'); n = -10 : .1 : 10; [X,Y] = meshgrid(n,n); d = (X .^ 2 + Y .^ 2) .^ .5; Z = cos(1.5 * d) .* exp(-.1 .* d); warp(X,Y,Z,im);axis equal;axis off; </code></pre> <p><img src="https://i.stack.imgur.com/CRDgT.png" alt="enter image description here"></p>