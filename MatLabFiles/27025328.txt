Estimating ARMA coefficients in Julia
<p>I'm looking for a function in Julia to estimate coefficients for an ARMA process. </p> <p>For example using the Prediction Error Model as <code>pem</code> and <code>armax</code> in Matlab (part of system identification toolbox) do. <a href="http://se.mathworks.com/help/ident/ref/pem.html">pem documentation</a> and <a href="http://se.mathworks.com/help/ident/ref/armax.html">armax documentation</a>. </p> <p>I've looked at the following packages, but can't see that they do what I'm looking for: <a href="https://github.com/JuliaStats/TimeSeries.jl">TimeSeries.jl</a> <a href="https://github.com/JuliaStats/TimeModels.jl">TimeModels.jl</a></p> <p>One solution is of course to use <a href="https://github.com/JuliaLang/MATLAB.jl">Matlab.jl</a> and use the Matlab functions, but I was hoping to do it all in Julia.</p> <p>If there isn't anything right now, does anyone know of if there are any good Julia functions for multidimensional numerical minimisation (like Newton-Raphson), that can be used for implementing a PEM function?</p>
<p><strong>UPDATE:</strong> I've just pushed a module to github called <a href="https://github.com/colintbowers/RARIMA.jl" rel="nofollow">RARIMA.jl</a>. This module can be used to estimate, forecast, and simulate ARIMA models (of which ARMA is a special case). Some of the functions are implemented in Julia, others (particularly estimation) call equivalent R functions using the <a href="https://github.com/JuliaStats/RCall.jl" rel="nofollow">RCall</a> package which you will need to install and verify it works prior to using RARIMA. The package isn't officially registered (yet), so <code>Pkg.add("RARIMA")</code> won't work for now. If you want to use RARIMA, instead try <code>Pkg.clone("https://github.com/colintbowers/RARIMA.jl")</code>. If this fails, you can file an issue on the repository github page, but <em>be sure to check <code>RCall</code> is installed and working before doing this</em>. Cheers, I'll come back and update here if/when the package is officially registered.</p> <p><strong>ORIGINAL ANSWER:</strong> I just had a glance at the source, and <code>TimeModels</code> does not appear to have any functionality for <em>estimating</em> ARIMA models, although does have one function for <em>simulating</em> them. Given time though, I suspect this will be the package that deals with ARIMA modelling. The <code>TimeSeries</code> package is more about building the object type <code>TimeSeries</code> rather than implementing time series models, so I would be surprised if ARIMA modelling is ever merged into that package.</p> <p>As near as I can tell, at this point if you want a fully functioning ARIMA package you'll need to use Matlab or R. The R one is very good (see the forecast package written by Rob Hyndman - it is very nice) and is probably easier to interface with from Julia than the Matlab option. Of course, the other option is to start it yourself and merge the code with the <code>TimeModels</code> package :-)</p> <p>In terms of optimization procedures, Julia has a fair few that are written in Julia, and can be found under the <a href="http://www.juliaopt.org/" rel="nofollow">JuliaOpt</a> umbrella. The <a href="https://github.com/JuliaOpt/Optim.jl/blob/master/README.md" rel="nofollow">Optim</a> package in particular is quite popular and well developed. However, most of the people I know who are really into this stuff use <a href="http://ab-initio.mit.edu/wiki/index.php/NLopt" rel="nofollow">NLOpt</a> which is a free open source library callable from many languages (including Julia). I have heard nothing but good things about this library from people who tend to work with this stuff 24/7. </p>