fPerformance of outer product in matlab
<p>I have two vectors, say A:1xN and B:1xM. I want to compute their outer product and add the result to a NxM matrix. Now, I split this into two parts, first computing (A')B and then adding it. On profiling, the first step takes way more time than the adding (8x). Since the number of multiplications in the first step is the same as the number of additions in the second step, is the difference only due to my architecture supporting faster additions? Or is it the time taken to allocate the memory for storing the result in the first step? </p> <pre><code>&gt;&gt; x = randn(1,10000); &gt;&gt; y = randn(1,10000); &gt;&gt; tic; z=x'*y; toc; Elapsed time is 0.560743 seconds. &gt;&gt; tic; z=z+z; toc; Elapsed time is 0.132228 seconds. &gt;&gt; tic; z=z.*z; toc; Elapsed time is 0.124191 seconds. </code></pre> <p>So I figured that it is not a mult vs addition. z = z+z and z = z.*z have similar times.</p>
<p>There are multiple things different between using two matrices and the outer product. If you think of your own "C" implementation and compare them it would become obvious.</p> <ol> <li>The outer product might need multiple indices to keep track of where you are reading from vectors and where you are writing to in the matrix. i.e. more loop overhead.</li> <li>If you are adding or multiplying with the same matrix you only need a single index for the loop. </li> <li>Second and third operations are also in-place operations needing less memory pointers.</li> </ol>