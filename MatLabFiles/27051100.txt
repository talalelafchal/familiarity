How to plot a curved line in MATLAB using a set of points
<p>I'm trying to draw <strong>ROC curves</strong> using an existing set of values using the following command</p> <pre><code>plot(X1,Y1,'--rs',X2,Y2,'-*g'); </code></pre> <p>Where <code>X1</code>,<code>Y1</code>,<code>X2</code> and <code>Y2</code> are matrices that have the same size</p> <p>However, the lines produced by this command are straight ones.</p> <p>How can I make them curved lines.</p> <p>Thanks Aziz</p>
<p>MATLAB by default uses straight line approximation to draw your graph in between control points. If you want, you can <strong>interpolate</strong> in between the points to produce a more realistic graph. Try using <a href="http://www.mathworks.com/help/matlab/ref/interp1.html" rel="nofollow"><code>interp1</code></a> with the <code>'spline'</code> option and see how that goes. As such, figure out the minimum and maximum values of both <code>X1</code> and <code>X2</code>, then define a grid of points in between the minimum and maximum that have finer granularity. Once you do this, throw this into <code>interp1</code> and plot your curve. Something like:</p> <pre><code>%// Find dynamic range of domain for both Xs minX1 = min(X1); maxX1 = max(X1); minX2 = min(X2); maxX2 = max(X2); %// Generate grid of points for both Xs x1Vals = linspace(minX1, maxX1, 100); x2Vals = linspace(minX2, maxX2, 100); %// Interpolate the curves y1Vals = interp1(X1, Y1, x1Vals, 'spline'); y2Vals = interp1(X2, Y2, x2Vals, 'spline'); %// Plot the results plot(x1Vals,y1Vals,'--rs',x2Vals,y2Vals,'-*g'); </code></pre> <p><a href="http://www.mathworks.com/help/matlab/ref/linspace.html" rel="nofollow"><code>linspace</code></a> generates a grid of points from one end to another, and I specified 100 of these points. I then use <code>interp1</code> in the way we talked about where you specify control points (<code>X1,Y1,X2,Y2</code>), then specify the values I want to interpolate with. I use the output values after interpolation and draw the curve.</p>