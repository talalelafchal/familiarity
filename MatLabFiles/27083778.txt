Creating a mesh plot from a 3D Array
<p>I'm just getting back into MATLAB and having trouble with some fairly basic plotting. I've already searched mathworks.com...</p> <p>I have some 3D array, with dimensions 200 x 2 x 11. To give some context, basically I have 11 time points, and would like to plot some 2D line for each of those.</p> <p>For example, for time 1 (i.e., <code>myArray(:,:,1)</code>), I can generate some 2D plot that looks something like this: <img src="https://i.stack.imgur.com/kbV9A.png" alt="enter image description here"></p> <p>This is just an interpolation over 200 (x,y) coordinates.</p> <p>I've calculated the evolution of this line over 11 time periods, and would like to plot it in 3-dimensions. I'm trying to utilize the mesh function, which accepts arguments X,Y,Z. I'd like my time points to be on the x-axis. I'm having a little trouble with the syntax. Intuitively, I'm trying to get something like this to work:</p> <pre><code>for k = 1:11 myArray(:,:,k) = [stDev, ret]; end % mesh(X,Y,Z): mesh(1:11, ??, ??) </code></pre> <p>Really the crux of the problem is I don't totally understand how to convert elements of some multidimensional array into a format that's compatible with the mesh function.</p> <p>Thanks!</p>
<p>Mathematically, a surface is parametrized like X=X(u,v), Y=Y(u,v), Z=Z(u,v), where u and v are parameters. In MATLAB terms, the parameters and the vertical and horizontal indices of the matrices X,Y,Z. In your case, you need X,Y,Z to be 200 by 11 matrices. </p> <p>The coordinates in Y and Z are taken from your 3D array:</p> <pre><code>Y = squeeze(M(:,1,:)); Z = squeeze(M(:,2,:)); </code></pre> <p>But X should be filled with the time values, which are the numbers from 1 to 11 in your case. (In general, <code>1:size(M,3)</code>.) To have these values replicated across 200 rows, use Kronecker product with<br> a vector of 200 1s: </p> <pre><code>X = kron(1:size(M,3), ones(size(M,1),1)) </code></pre> <p>Now <code>mesh(X,Y,Z)</code> will give the desired surface.</p> <hr> <p>For demo purpose, I used 11 curves that are all square-root graphs with different scaling.</p> <pre><code>M = zeros(200,2,11); for k=1:11 M(:,1,k) = 1:200; M(:,2,k) = sqrt(k*(1:200)); end X = kron(1:size(M,3), ones(size(M,1),1)); Y = squeeze(M(:,1,:)); Z = squeeze(M(:,2,:)); mesh(X,Y,Z); </code></pre> <p><img src="https://i.stack.imgur.com/lI6sZ.png" alt="curves"></p>