Preventing MATLAB from rounding numbers and set decimal precision
<p>I'm trying to display values received from serial but Matlab doesn't accept decimal numbers results. I would like to receive A=0.123 from a device, the values is multiplied by 1000 and then sent via serial to matlab.</p> <p>The matlab script receives 123 but when that number is divided in order to get the original value, matlab shows 0.</p> <pre><code>consRollKpTemp = typecast([uint8(mess(typei + 1)), uint8(mess(typei + 2)),uint8(mess(typei + 3)), uint8(mess(typei + 4))], 'int32'); disp(consRollKpTemp); consRollKp = consRollKpTemp/1000; disp(consRollKp); </code></pre> <p>Which returns</p> <pre><code>consRollKpTemp: 123 consRollKp: 0 </code></pre> <p>I thought the problem was the <a href="http://it.mathworks.com/help/matlab/ref/typecast.html" rel="nofollow">typecast(X,type)</a> function which </p> <blockquote> <p>converts a numeric value in X to the data type specified by type.</p> </blockquote> <p>and I changed it to:</p> <pre><code>consRollKpTemp = typecast([uint8(mess(typei + 1)), uint8(mess(typei + 2)),uint8(mess(typei + 3)), uint8(mess(typei + 4))], 'single'); </code></pre> <p>But nothing changed. I've tried the suggestions in <a href="http://stackoverflow.com/questions/23492523/how-to-prevent-a-decimal-number-being-rounded-to-a-whole-number">this</a> question and <a href="http://stackoverflow.com/questions/7862476/prevent-matlab-from-rounding-output">here</a> but they didnt' work.</p>
<p>The problem is that you are using <code>int32</code> as type, i.e. you only have integer numbers and 0.23 is correctly rounded to 0. Try to cast the variable <code>consRollKp</code> to <code>double</code> before dividing it by 1000:</p> <pre><code>consRollKp = double(consRollKpTemp) / 1000; </code></pre> <p>To clarify: Using <code>typecast</code> with <code>single</code> will not work. Typecast converts data types <em>without</em> changing the underlying data. As <code>single</code> is a floating point number and <code>uint8</code> and <code>int32</code> are integer types, a <code>typecast</code> between those will not lead to the desired results. </p> <p>Try to <code>typecast</code> to <code>int32</code> (or probably <code>uint32</code>) and in a second step use <code>dobule()</code> or <code>single()</code> to convert this variable to a floating point type. Finally you should be able to divide by 1000 and get the correct result. </p>