Access string property of object stored in mxArray
<p>I like using <code>mexEvalString</code> cause its easy to execute within mex. However, I get exceptions for some commands so I want to catch them to see what happend using <code>mexEvalStringWithTrap</code>, but I fail to get the string from the exception.</p> <p>Basically it's just getting a string from an object, so I found <code>mxGetProperty</code> and <code>mxGetString</code> but still this code does not work. Output is <code>identifier: (null)</code></p> <p><code>mxGetN</code> returns <code>37</code> but there seems to be a problem with <code>str</code> (maybe flawed usage of <code>mxGetString</code>)</p> <pre><code>/* ENTRY POINT */ void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) { mxArray *except, *char_ident; mwSize strlen; char *str; /* ARGUMENT VERIFICATION */ //... // catch exception except = mexEvalStringWithTrap("unknownfunction"); // get exception identifier char_ident = mxGetProperty(except, 0, "identifier"); // get identifier string length strlen = (mwSize)mxGetN(char_ident); // get identifier string mxGetString(char_ident, str, strlen+1); // print identifier string printf("identifier: %s\n", str); mexEvalStringWithTrap("drawnow"); ... </code></pre>
<p>You need to allocate <code>str</code> before you call <code>mxGetString</code> (although it may be easier to use <code>mxArrayToString</code> instead, see bottom).</p> <p><strong>testMEXException.cpp</strong></p> <pre><code>#include "mex.h" void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) { mxArray *except, *char_ident; mwSize strlen; char *str; // catch exception except = mexEvalStringWithTrap("unknownfunction"); // get identifier string char_ident = mxGetProperty(except, 0, "identifier"); strlen = (mwSize)mxGetN(char_ident); size_t buflen = strlen*sizeof(mxChar) + 1; str = (char*)mxMalloc(buflen); // ALLOCATE mxGetString(char_ident, str, strlen + 1); // print identifier string printf("identifier: %s\n", str); mexEvalStringWithTrap("drawnow"); // get message string char_ident = mxGetProperty(except, 0, "message"); strlen = (mwSize)mxGetN(char_ident); buflen = strlen*sizeof(mxChar) + 1; str = (char*)mxRealloc(str, buflen); // REALLOCATE mxGetString(char_ident, str, strlen + 1); // print message string printf("message: %s\n", str); mexEvalStringWithTrap("drawnow"); mxFree(str); // FREE } </code></pre> <p><strong>Output</strong></p> <pre><code>&gt;&gt; testMEXException identifier: MATLAB:UndefinedFunction message: Undefined function or variable 'unknownfunction'. </code></pre> <p>Alternatively, use <code>mxArrayToString</code>, which allocates the buffer internally with enough space for the whole string contained in the input <code>mxArray</code>, but which still requires you to free it:</p> <pre><code>str = mxArrayToString(char_ident); // use str ... mxFree(str); </code></pre> <p>Your code to capture the <code>MException</code> object and to access the <code>identifier</code> property are fine.</p>