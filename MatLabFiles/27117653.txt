permutation which involves 4^18 permutations with MATLAB
<p>I am pretty new at coding with MatLab, so, I could only think of basic codes.</p> <p>I want to solve this problem, say I have <code>18</code> bags of balls, each bag contain <code>4</code> balls, each ball has a number. </p> <p>But every <code>6</code> bags of balls are exactly the same. </p> <p>Say bags are</p> <pre><code>A,B,C,D,E,F A:0,1,2,3 B:0,4,5,6 C:0,7,8,9 D:0,10,11,12 E:0,13,14,15 F:0,16,17,18 </code></pre> <p>And another <code>12</code> bags with similar contents.</p> <p>So now I want to pick a ball from each of the <code>18</code> bags, then I add the numbers up, the sum will be in the range of <code>0</code> to <code>189</code>, but ignore <code>0</code>, and just use <code>1</code> to <code>189</code>. </p> <p>Now, I want to know what is the probability of getting each of the sum ranging from <code>1</code> to <code>189</code>. I know the denominator is <code>418</code> - a large number. </p> <p>I initially wanted to just use <code>18</code> loop-within-loopss in Matlab to find the sum, and then create a <code>189</code> entry vector where I would +1 in the respective entry for the sum. </p> <p>However, I realized that that <code>18</code> loops means <code>4^18</code> computations, which I feel is unreasonable, so, can someone tell me a better algorithm to solve this?</p> <p>My old code look like this:</p> <pre><code>vector = [1 0 1 2 3] [2 0 4 5 6] [3 0 7 8 9] [4 0 10 11 12] [5 0 13 14 15] [6 0 16 17 18] ::::::: [18 0 16 17 18] probability = zeros(1,189) for (a=1:4) for (b=1:4) for (c=1:4) for (d=1:4) for (e=1:4) ::::: for (r=1:4) sum =vector(1,a)+vector(2,b)+vector(3,c)+vector(4,d)+vector(5,e)+vector(6,f)+....+vector(18,r) probability (sum) = probability (sum)+1 </code></pre>