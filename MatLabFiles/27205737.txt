implementation sample of a color histogram on an rgb image without using Matlab built-in functions
<p>I've been trying to implement a function called <strong>histogram(image)</strong> that perform the color histogram of an RGB image. Can someone show me a sample that is easy to analyze in order to understand how does it exactly work.</p> <p>I would really appreciate your help.</p>
<p>Here is the code which draws histogram of each color channels of an image.</p> <pre><code>I=imread('lena.png'); r=I(:,:,1); g=I(:,:,2); b=I(:,:,3); totalNumofPixel=size(I,1)*size(I,2); FrequencyofRedValues=zeros(256,1); FrequencyofGreenValues=zeros(256,1); FrequencyofBlueValues=zeros(256,1); for x=0:255 FrequencyofRedValues(x+1)=size(r(r==x),1); // number of pixels whoose intensity is x FrequencyofGreenValues(x+1)=size(g(g==x),1); FrequencyofBlueValues(x+1)=size(b(b==x),1); end stem(0:255,FrequencyofRedValues,'.r'); title('Red Channel Histogram'); figure stem(0:255,FrequencyofGreenValues,'.g'); title('Green Channel Histogram'); figure stem(0:255,FrequencyofBlueValues,'.b'); title('Blue Channel Histogram'); </code></pre>
<p>Here is a different algorithm for your question:</p> <pre><code>im = imread('lena.png'); % imshow(im); histogram(im) function histogram(im) [rowSize, colSize, rgb] = size(im); nshades = 256; hist = zeros(rgb, nshades); figure, RGB = ['r', 'g', 'b']; names = [{'Red Channel'}, {'Green Channel'}, {'Blue Channel'}]; x = 0 : 255; for colour = 1 : rgb for k = 1 : rowSize for m = 1 : colSize for n = 0 : (nshades - 1) % 0 - 255 if im(k, m, colour) == n hist(colour, n + 1) = hist(colour, n + 1) + 1; end end end end subplot(3, 1, colour) bar(x, hist(colour, :), RGB(colour)); title(names(colour)); end end </code></pre>