Permute the Matrix with Given Index
<p>Given A is symmetry matrix with size n and</p> <pre><code>A = 1 2 3 4 5 % The Position 1 [0 5 2 4 1 2 5 0 3 0 2 3 2 3 0 0 0 4 4 0 0 0 5 5 1 2 0 5 0] </code></pre> <p>B is a row vector that permute the matrix A row and column</p> <pre><code>B = [2 4 1 5 3] </code></pre> <p>The output that I want is</p> <pre><code>C = 2 4 1 5 3 % The New Position given by Matrix B 2 [0 0 5 2 3 4 0 0 4 5 0 1 5 4 0 1 2 5 2 5 1 0 0 3 3 0 2 0 0] </code></pre> <p>I can get the output by using simple for loop</p> <pre><code>index = [2,4,1,5,3]; C = zeros(5,5); for i = 1:5 for j = 1:5 % Position of in square matrix n % (i,j) = (i-1)*n + j C(i,j) = A((index(i)-1)*5+index(j)); end end </code></pre> <p>However, if I want to permute a matrix with size 80x80, then I need to run 1600 times in order to get the output. Is there any simple trick to do it instead of using for loop? </p>
<p>You should be able to rearrange your matrices as follows:</p> <pre><code>C = A(index,index); </code></pre> <p>This rearranges each dimension according to the index variable independently.</p>