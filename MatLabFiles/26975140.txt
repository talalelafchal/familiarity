How to store the 2D image pixels into 1d array?
<p>I want to store the m(i,j) values in a 1D array of 2 rows. 1st row wd be the m(ij) counter and 2nd row w'd be m(ij) value for each iteration.How can i do that,? Please Help. want to convert 2D to 1D array like array(2,count).</p> <pre><code> [e,f] = size(outImg); m = zeros(e,f); counter=0 w = [1 2 4 8; 16 32 64 128; 256 512 1024 2048; 4096 8192 16384 32768]; for i = 1:e-3 for j = 1:f-3 I = double(outImg((i:i+3),(j:j+3))); counter=counter+1; m(i,j) = sum(sum(I .* w)); end end </code></pre>
<p>In your code, the quickest way (though not necessarily the most efficient, but most compatible with your code...) would be to allocate a 2D array and populate this array at each iteration. Referencing <a href="http://stackoverflow.com/questions/26866247/how-to-count-the-number-of-overlapping-blocks-in-an-image">my previous post to you</a>, the total number of times this loop iterates is <code>(e-3) x (f-3)</code> times. Therefore, allocate a 2D array like how you said in your post. Only this time, replace <code>count</code> with <code>(e-3)*(f-3)</code>.</p> <p>Something like the following:</p> <pre><code>[e,f] = size(outImg); m = zeros(e,f); counter=0; counts = zeros(2, (e-3)*(f-3)); %// NEW w = [1 2 4 8; 16 32 64 128; 256 512 1024 2048; 4096 8192 16384 32768]; for i = 1:e-3 for j = 1:f-3 I = double(outImg((i:i+3),(j:j+3))); counter=counter+1; m(i,j) = sum(sum(I .* w)); counts(:,counter) = [counter; m(i,j)]; %// NEW end end </code></pre> <p>Therefore, you will have a 2D array called <code>counts</code> of size <code>2 x (e-3)*(f-3)</code>, where each column denotes the "iteration number" and the value of the summation for each pixel neighbourhood at each iteration in the loop.</p>