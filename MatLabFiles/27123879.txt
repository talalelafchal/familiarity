How to import and save in Matlab Multiple Text Files creating a Matrix for each files
<p>I have a very large data set which is divided in folders, I have 100 folders with approximately 200 text files each. I have been trying the for loop first of all importing one and then in another command importing the rest. But I am not interested in a dataarray but rather conserving each file with its name as I have to then match the dates among all the files and each file does not have the same amount of columns.</p> <p>Each text file has is like the one I have attached, where the data I need is from the row 23 until column 13.</p> <p>The data names are saves as 010010.txt, 010030.txt, 010050.txt ......until 014957.txt , they are not sequential</p> <p>Apart from this I have created a script for importing one file but I would like to know how to repeat the same script for the rest.</p> <pre><code>filename = 'C:*\010010.txt'; startRow = 22; formatSpec = '%4f%6f%6f%6f%6f%6f%6f%6f%6f%6f%6f%6f%6f%[^\n\r]'; fileID = fopen(filename,'r'); dataArray = textscan(fileID, formatSpec, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines' ,startRow-1, 'ReturnOnError', false); fclose(fileID); Untitled (010010) = [dataArray{1:end-1}]; </code></pre> <p>I would like to repeat the same import process but for the rest files. I would appreciate any suggestion</p> <p>The text files have the following format:</p> <p>I only need from row 23 and column 13 and each txt file has different number of rows as some have data from 1992 - 2014 and other have only 2000 - 2014. The first column is the year and column 2 to 13 are months.</p>
<p>I guess you know the basepath under which all your folders are. You can then use something like this:</p> <pre><code>% First find all folders folders = cell(0); % empty cell to save folder names nFolders = 0; allFolders = ls(basePath); % find all files and folders for k=1:size(allFolders,1) curFolder = fullfile(basePath,strtrim(allFolders(k,:))); if isdir(curFolder) % find out if it is a folder if ~(allFolders(k,1) == '.') % ignore '.' and '..' folders{nFolders+1,1} = curFolder; % Save folder path nFolders = nFolders + 1; end end end % Then find all files inside these folders files = cell(0); % empty cell array for file names nFiles = 0; for k=1:nFolders % go through all folders allFiles = ls(folders{k,1}); for l=1:size(allFiles,1) % go through all found files/subfolders curFile = fullfile(folders{k},strtrim(allFiles(l,:))); if ~isdir(curFile) % only select files files{nFiles+1,1} = curFile; % and save it to the cell nFiles = nFiles + 1; end end end </code></pre> <p>Now you can iterate through the <code>files</code> cell and read all files according to your script. I see you are interested in the file name. You can extract the file name by</p> <pre><code>[path,filename,extension] = fileparts(files{k,1}); </code></pre> <p>To import text files, you can use <code>dlmread</code>, which I think is more intuitive than <code>textscan</code> (but has more limitations, of course). For that you don't have to open the file using <code>fopen</code>, you can directly supply the file name.</p> <pre><code>value = dlmread(fileName,' ',[23,13,23,13]); </code></pre> <p>The delimiter is now a white space and only the value at row=23 / col=13 is read. Note that the range starts at row/col=0, not 1 like normally in Matlab - so maybe you'll have to change it to <code>[22,12,22,12]</code>.</p>