Specifying the type of the vehicule detected in a Video frame
<p>I am trying to detect vehicules in a <strong><code>video frame</code></strong>. More specifically to detect vehicules and then count the number of the detected vehicules.</p> <p>By the way, I am using the MATLAB code of MathWorks: <a href="http://www.mathworks.com/help/vision/examples/detecting-cars-using-gaussian-mixture-models.html" rel="nofollow">Open this link</a> </p> <p>So you can find more details in the above link...</p> <p>Assume that we extract a specific frame of a video. What I need, is to extend the code by adding more lines which have the ability to further <em>specify the type of the detected vehicule</em> (if it is a car or track? for example). </p> <p><em><code>Concerning the original code used by Mathworks:</code></em></p> <p><strong>1) Import the video (to be processed) and initialize a Foreground Color Detector:</strong></p> <p>The motivation is to make the processing of the video more easy. So instead of processing the entire video, we can thus apply our processing in a frame in which all the moving objects are segmented from the background. The foreground detector requires a certain number of video frames in order to initialize the Gaussian mixture model. This example uses the first 50 frames to initialize three Gaussian modes in the mixture model.</p> <pre><code>foregroundDetector = vision.ForegroundDetector('NumGaussians', 3, ... 'NumTrainingFrames', 50); videoReader = vision.VideoFileReader('visiontraffic.avi'); for i = 1:150 frame = step(videoReader); % read the next video frame foreground = step(foregroundDetector, frame); end </code></pre> <p><strong>2) Detecting vehicule in the video frame:</strong></p> <p>Unfortunately, the Foreground color detector is not perfect since it provides some adding noises. So It will be interesting to implement the "morphological idea" in order to remove the added noise:</p> <pre><code>se = strel('square', 3); filteredForeground = imopen(foreground, se); figure; imshow(filteredForeground); title('Clean Foreground'); </code></pre> <p><strong>3) Next, we find bounding boxes of each connected component corresponding to a moving car by using vision.BlobAnalysis object. The object further filters the detected foreground by rejecting blobs which contain fewer than 150 pixels.</strong></p> <pre><code>blobAnalysis = vision.BlobAnalysis('BoundingBoxOutputPort', true, ... 'AreaOutputPort', false, 'CentroidOutputPort', false, ... 'MinimumBlobArea', 150); bbox = step(blobAnalysis, filteredForeground); </code></pre> <p><strong>4) Lets highlight each detected vehicule by a small rectangular box:</strong></p> <pre><code>result = insertShape(frame, 'Rectangle', bbox, 'Color', 'green'); </code></pre> <p><strong>5) Counting the number of vehicules that appear in the video frame:</strong></p> <pre><code>numCars = size(bbox, 1); result = insertText(result, [10 10], numCars, 'BoxOpacity', 1, ... 'FontSize', 14); </code></pre> <p>Kindly I will appreciate very much your help.</p>
<p>This problem is an active research area, and there are many possible approaches. One possibility is to train a classifier to distinguish a car from a truck. You can use this <a href="http://www.mathworks.com/help/vision/examples/digit-classification-using-hog-features.html" rel="nofollow">example showing how to classify digits using HOG features and an SVM classifier</a> to get started.</p>