3-D Plotting with MATLAB for Galton's Skewness and Moor's Kurtosis
<p>I know there are many plotting documents for Matlab online and I am pretty sure that it has been asked many times. I aplogize in advance for any inconvenience.</p> <p>I am dealing with a new distribution and I need to draw 3D plot for different values of parameters (I can do it with Excel or any other programs, however, since my other graphs is drawn with MATLAB, and I need to put this 3D in Matlab, too, to publish it as an article). I calculated the result using MATLAB loops, however, plotting gives me the hardest time. I had no other choice but to ask for your assistance. I have these equations for different alphas and betas with a constant sigma and calculate Galton's Skewness and Moor's Kurtosis given with the last two equations.</p> <pre><code>median=sqrt(2*(sigma^2)*beta*gammaincinv(0.5,alpha)); q1=sqrt(2*(sigma^2)*beta*gammaincinv((6/8),alpha)); q3=sqrt(2*(sigma^2)*beta*gammaincinv((2/8),alpha)); q4=sqrt(2*(sigma^2)*beta*gammaincinv((7/8),alpha)); q5=sqrt(2*(sigma^2)*beta*gammaincinv((5/8),alpha)); q6=sqrt(2*(sigma^2)*beta*gammaincinv((3/8),alpha)); q7=sqrt(2*(sigma^2)*beta*gammaincinv((1/8),alpha)); galtonskewness=(q1-2*median+q3)/(q1-q3); moorskurtosis=(q4-q5+q6-q7)/(q1-q3); </code></pre> <p>Let's assume that,</p> <pre><code>sigma=1 beta=[0.1 0.2 0.5 1 2 5]; alpha=[0.1 0.2 0.5 1 2 5]; </code></pre> <p>I have used mesh(X,Y,Z) for the same range of alphas and betas with the same increment but I take the error "these values cannot be complex". I just want to draw something like the one below. <img src="https://i.stack.imgur.com/04EFA.png" alt="enter image description here"></p> <p>It must be something easy that I am missing out, but I do not understand where the mistake is. I appreciate any help. Thank you!</p>
<p>I ran the above code for a 2D mesh of points for <code>alpha</code> and <code>beta</code> between 0.1 and 5 for both dimensions and I got results for both.</p> <p>I suspect it's due to your <code>alpha</code> and <code>beta</code> declaration. You are only providing a few points, and if you try to use <code>mesh</code>, it won't get good results. Therefore, define a <a href="http://www.mathworks.com/help/matlab/ref/meshgrid.html" rel="nofollow noreferrer"><code>meshgrid</code></a> of points for both <code>alpha</code> and <code>beta</code>, then <strong>vectorize</strong> your MATLAB code to produce the kurotsis and skewness curves. Only under certain situations should you use <code>for</code> loops. In general, you should avoid using them whenever possible. </p> <p>How <code>meshgrid</code> works is that given a range of <code>X</code> and <code>Y</code> values, it will produce two (or three if you want 3D co-ordinates) arrays where each location in each array gives you the spatial co-ordinate at that particular location. Therefore, if we did something like:</p> <pre><code>[X,Y] = meshgrid(1:3, 1:3); </code></pre> <p>This is what we get:</p> <pre><code>X = 1 2 3 1 2 3 1 2 3 Y = 1 1 1 2 2 2 3 3 3 </code></pre> <p>Notice that in a 2D grid, for the top-left corner, <code>(x,y) = (1,1)</code>, and so for the corresponding location in <code>X</code>, we get 1 and <code>Y</code> we get 1. If you do the same logic for any other position in the 2D grid, you simply look at the <code>X</code> and <code>Y</code> values in each array and it will tell you what the component is for each dimension.</p> <p>As such, instead of looping through all possible points in your grid, generate them <strong>all</strong> using <code>meshgrid</code>, then vectorize the computation by calculating your values all at once rather than individually. Once you do this, you have the right structure to be able to put this into <code>mesh</code>.</p> <p>Therefore, try doing this instead:</p> <pre><code>%// Define meshgrid of points [alpha,beta] = meshgrid(0.1:0.1:5, 0.1:0.1:5); %// From your code sigma = 1; %// Calculate quantities - Notice that this is all vectorized med=sqrt(2*(sigma^2)*beta.*gammaincinv(0.5,alpha)); q1=sqrt(2*(sigma^2)*beta.*gammaincinv((6/8),alpha)); q3=sqrt(2*(sigma^2)*beta.*gammaincinv((2/8),alpha)); q4=sqrt(2*(sigma^2)*beta.*gammaincinv((7/8),alpha)); q5=sqrt(2*(sigma^2)*beta.*gammaincinv((5/8),alpha)); q6=sqrt(2*(sigma^2)*beta.*gammaincinv((3/8),alpha)); q7=sqrt(2*(sigma^2)*beta.*gammaincinv((1/8),alpha)); galtonskewness=(q1-2*med+q3)./(q1-q3); moorskurtosis=(q4-q5+q6-q7)./(q1-q3); %// Show our meshes figure; mesh(alpha, beta, galtonskewness); figure; mesh(alpha, beta, moorskurtosis); </code></pre> <hr> <p>Also take note that I renamed your <code>median</code> variable to <code>med</code>. MATLAB has a function called <a href="http://www.mathworks.com/help/matlab/ref/median.html" rel="nofollow noreferrer"><code>median</code></a> and so you don't want to unintentionally shadow over this function with a variable of the same name. </p> <p>This is what I get:</p> <p><img src="https://i.stack.imgur.com/6sHfT.png" alt="enter image description here"></p> <p><img src="https://i.stack.imgur.com/08m3S.png" alt="enter image description here"></p> <hr> <p>Take note that I'm not getting the plots that you have placed in your post. It may be because I'm choosing the wrong variables to define the <code>mesh</code>, or perhaps your equations may be incorrect. Double check what you know in theory to what you have here in code and try again.</p> <p>This should hopefully give you enough to start with though!</p>