Stop Matlab from treating a 1xn matrix as a column vector
<p>I'm very frustrated with MATLAB right now. Let me illustrate the problem. I'm going to use informal notation here.</p> <p>I have a column cell vector of strings called <code>B</code>. For now, let's say <code>B = {'A';'B';'C';'D'}</code>.</p> <p>I want to have a matrix <code>G</code>, which is m-by-n, and I want to replace the numbers in <code>G</code> with the respective elements of <code>B</code>... For example, let's say <code>G</code> is <code>[4 3; 2 1]</code></p> <p>Let's say I have a variable <code>n</code> which says how many rows of <code>G</code> I want to take out.</p> <p>When I do <code>B(G(1:2,:))</code>, I get what I want <code>['D' 'C'; 'B' 'A']</code></p> <p>However, if I do <code>B(G(1:1,:))</code> I get <code>['D';'C']</code> when what I <em>really</em> want to get is <code>['D' 'C']</code></p> <p>I am using <code>1:n</code>, and I want it to have the same behavior for <code>n = 1</code> as it does for <code>n = 2</code> and <code>n = 3</code>. Basically, <code>G</code> actually is a <code>n</code>-by-1500 matrix, and I want to take the top <code>n</code> rows and use it as indexes into <code>B</code>.</p> <p>I could use an if statement that transposes the result if <code>n = 1</code> but that seems so unnecessary. Is there really no way to make it so that it stops treating my 1-by-n matrix as if it was a column vector?</p>
<p>According to <a href="http://blogs.mathworks.com/loren/2006/08/09/essence-of-indexing/" rel="nofollow">this post by Loren Shure</a>:</p> <blockquote> <p>Indexing with one array C = A(B) produces output the size of B unless both A and B are vectors.</p> <p>When both A and B are vectors, the number of elements in C is the number of elements in B and with orientation of A.</p> </blockquote> <p>You are in second case, hence the behaviour you see.</p>
<p>To make it work, you need to maintain the output to have as many columns as in <code>G</code>. To achieve the same, you can do something like this -</p> <pre><code>out = reshape(B(G(1:n,:)),[],size(G,2)) </code></pre> <p>Thus, with n = 1:</p> <pre><code>out = 'D' 'C' </code></pre> <p>With n = 2:</p> <pre><code>out = 'D' 'C' 'B' 'A' </code></pre>
<p>I think this will only happen in 1-d case. In default, matlab will return column vector since it is the way how it stores matrix. If you want a row vector, you could just use transpose. Well in my opinion it should be fine when n > 1.</p>