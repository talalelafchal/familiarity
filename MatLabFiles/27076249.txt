Memberwise operator in python
<p>How can I perform in Python memberwise operation on <code>list</code> (vector) such as in Matlab/Octave. I mean, giving two lists:</p> <pre><code>a = [1,2,3] b = [4,5,6] </code></pre> <p>Are there memberwise operators such as:</p> <pre><code>c = a .* b = [1*4,2*5,3*6] d = a ./ b = [1/4,2/5,3/6] </code></pre> <p>I know that I can implement it by myself, and I will do so if there is not such module. A not completely bulletproof way could be:</p> <pre><code># Memberwise product: def mwprod(a,b): c = [] if len(a) == len(b): for a,b in zip(a,b): try: c.append(a*b) except: c.append(NaN) return c </code></pre> <p>As stated by <code>user3426575</code> this can be condensed in a very pythonic way:</p> <pre><code>c = [ x*y for x, y in zip(a,b) ] </code></pre> <p>Anyway I am wondering for something more dense and aesthetic which overloads or implements such operators on <code>list</code>.</p>
<p>You can try like this,</p> <pre><code>&gt;&gt;&gt; [ item * b[k] for k,item in enumerate(a)] [4, 10, 18] &gt;&gt;&gt; [ item / b[k] for k,item in enumerate(a)] [0.25, 0.4, 0.5] </code></pre>
<p>This can be done with <strong>numpy</strong>:</p> <pre><code>&gt;&gt;&gt; import numpy as np &gt;&gt;&gt; a = np.array([1,2,3],float) # float argument is used so that / operator does float division rather than integer division &gt;&gt;&gt; b = np.array([4,5,6],float) &gt;&gt;&gt; a*b array([ 4., 10., 18.]) &gt;&gt;&gt; a/b array([ 0.25, 0.4 , 0.5 ]) </code></pre>