Ranking a vector based on order and ties with average in R
<p>I'm new to R, and i find it quite interesting.</p> <p>I have MATLAB code to rank a vector based on order which works fine. Now I want to convert it to R code, a typical spearman ranking with ties:</p> <pre><code># MATLAB CODE function r=drank(x) u = unique(x); [xs,z1] = sort(x); [z1,z2] = sort(z1); r = (1:length(x))'; r=r(z2); for i=1:length(u) s=find(u(i)==x); r(s,1) = mean(r(s)); end </code></pre> <p>This is what i tried:</p> <pre><code># R CODE x = c(10.5, 8.2, 11.3, 9.1, 13.0, 11.3, 8.2, 10.1) drank &lt;- function(x){ u = unique(x) xs = order(x) r=r[xs] for(i in 1:length(u)){ s=which(u[i]==x) r[i] = mean(r[s]) } return(r) } </code></pre> <p>r &lt;- drank(x)</p> <p>Results:</p> <pre><code>r = 5, 1.5, 6.5, 3, 8, 6.5, 1.5, 4 </code></pre> <p><code>1.5</code> is average of <code>8.2</code> occurring twice ie. tie</p> <p><code>6.5</code> is average of <code>11.3</code> occurring twice</p> <p>Can anyone help me check it?</p> <p>Thanks,</p>
<p>R has a built-in function for ranking, called <code>rank()</code> and it gives precisely what you are looking for:</p> <pre><code>x = c(10.5, 8.2, 11.3, 9.1, 13.0, 11.3, 8.2, 10.1) expected &lt;- c(5, 1.5, 6.5, 3, 8, 6.5, 1.5, 4) rank(x) # [1] 5.0 1.5 6.5 3.0 8.0 6.5 1.5 4.0 identical(expected, rank(x)) # [1] TRUE </code></pre>