How can I obtain Voronoi diagram on a Red Blood Cell using XYZ coordinate of points and face connectivity data from Delaunay triangulation?
<p><strong>UPDATE (1/12/14)</strong>: Dear all, I have been trying all I can to code the algorithm by Dr Darren below in MATLAB but I am yet to succeed with it. I humbly request that a good Samaritan should kindly help me with the code and share the m-file. Thanks once again.</p> <hr> <p>I intend to obtain Voronoi diagram on RBC using MATLAB/FORTRAN. I need the following specific information.</p> <ol> <li>Voronoi vertex using the normal vector for each Delaunay triangle;</li> <li>Order of each Voronoi polygon; </li> <li>Voronoi vertex lists that define the Voronoi polygons; </li> <li>Component of normals on the Voronoi polygons;</li> <li>Areas of the Voronoi polygons; </li> <li>Centroids of the Voronoi polygons;</li> <li>Finally, plot Voronoi polygons using PATCH;</li> </ol> <p>Please find link to corresponding text files RBC_1 which contain XYZ node coordinates on the RBC and RBC_2 which contain face connectivity data from Delaunay triangulation (RBC_1 and RBC_2 are in Zip file).</p> <p><a href="https://www.dropbox.com/s/slan053xbr2e864/RBC.zip?dl=0" rel="nofollow">https://www.dropbox.com/s/slan053xbr2e864/RBC.zip?dl=0</a></p> <p>I have tried to follow the work of John Burkardt for unit sphere: <a href="http://people.sc.fsu.edu/~jburkardt/m_src/sphere_voronoi/sphere_voronoi.html" rel="nofollow">http://people.sc.fsu.edu/~jburkardt/m_src/sphere_voronoi/sphere_voronoi.html</a> but its not working.</p> <p>Thank you in advance.</p> <p>N.B Any comment and advice will be highly appreciated.</p>
<p>Looking at your files, you have a set of points <code>P</code> in <code>R^3</code> and a (2-manifold) surface triangulation <code>T</code> of your geometry:</p> <p><img src="https://i.stack.imgur.com/98Ivb.png" alt="tria"></p> <p>This can easily be turned into a surface <a href="http://en.wikipedia.org/wiki/Voronoi_diagram" rel="nofollow noreferrer">voronoi complex</a> <code>V</code> by noting that the voronoi complex is <strong>dual</strong> to the underlying triangulation <code>T</code>. This means the following:</p> <ul> <li>for each <strong>primary</strong> edge <code>Ei</code> in <code>T</code> there is a <strong>dual</strong> edge <code>Vi</code> in the voronoi complex. </li> <li>for each <strong>primary</strong> node <code>Pi</code> in <code>P</code> there is a <strong>dual</strong> cell <code>Vc</code> in the voronoi complex. </li> </ul> <p>Each dual edge in the voronoi complex spans between the centre of the circumballs of the triangles that are adjacent to the associated primary edge in the triangulation. </p> <p>This duality implies the following algorithm for the construction of the voronoi complex:</p> <pre><code>calculate circumcentres CC for all triangles in T for (all edges Ei in T) find triangles [Ti,Tj] in T adjacent to edge Ei push voronoi edge Vi between centres [CC(Ti),CC(Tj)] associate edge Vi with voronoi cells associated with edge endpoints [Pi,Pj] in Ei endfor </code></pre> <p>Putting this into practice gives the following voronoi complex for your mesh:</p> <p><img src="https://i.stack.imgur.com/wUb4c.png" alt="voro"></p> <p>As others have pointed out, your question is very extensive, and I won't try to answer everything here. </p> <hr> <p>I have made a set of dual mesh construction routines available <a href="http://www.mathworks.com/matlabcentral/fileexchange/48609-robust-dual-mesh-construction" rel="nofollow noreferrer">here</a>. Nonetheless, based on the slew of emails that you've bombarded me with over the weekend, let me make a few remarks: (i) you should invest some effort to understand a bit of computational geometry -- don't just blindly use the code provided, and (ii) if you do use the code provided, ensure that you make an effort to reference it appropriately.</p>