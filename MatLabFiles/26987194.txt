How to Supply the Jacobian to Fsolve?
<pre><code> pow=fsolve(@eqns,pop); </code></pre> <p>This is the code I am using to solve a 2x2 non-linear system of equations, defined in the function eqns.m.</p> <p>pop is a 2x1 initialisation vector pretty close to the solution. When I run it, the output says</p> <pre><code>No solution found.fsolve stopped because the relative size of the current step is less than the default value of the step size tolerance squared, but the vector of function values is not near zero as measured by the default value of the function tolerance.&lt;stopping criteria details&gt; </code></pre> <p>Any way out? I tried moving the initial point further away from the solution intentionally, still it is not working. How do I set the tolerance or some other parameter? Some posts gave me the impression that supplying the jacobian to matlab can be helpful, but how do I do that? Please note that I need the solution in the form of a code which I can put in a function file to be called repeatedly. I believe the interactive optimtool toolbox would not help here. Any help please?</p> <p>Also from the documentation, the fsolve can employ three different algorithms. Is any of them more helpful than the others for certain problem structures? Where can I get a comparative study of them, suitable for some non-expert in optimisation? </p>