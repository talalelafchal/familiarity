Matlab(the same cell in different matrix)
<p>I have two matrix A and B. Suppose I would like to find in each row of matrix A the smallest number, and for the same cell that this number is in Matrix A, do find the corresponding number of the same cell in matrix B. For example the number in matrix A will be in the position A(1,3), A(2,9)...and I want the corresponding number in B(1,3), B(2,9)... Is it possible to do it, or I am asking something hard for matlab. Hope someone will help me. </p>
<p>What you can do is use <a href="http://www.mathworks.com/help/matlab/ref/min.html" rel="nofollow"><code>min</code></a> and find the minimum across all of the rows for each column. You would actually use the second output in order to find the location of each column per row that you want to find. Once you locate these, simply use <a href="http://www.mathworks.com/help/matlab/ref/sub2ind.html" rel="nofollow"><code>sub2ind</code></a> to access the corresponding values in <code>B</code>. As such, try something like this:</p> <pre><code>[~,ind] = min(A,[],2); val = B(sub2ind(size(A), (1:size(A,1)).', ind)); </code></pre> <p><code>val</code> would contain the output values in the matrix <code>B</code> which correspond to the same positions as the minimum values of each row in <code>A</code>. This is also assuming that <code>A</code> and <code>B</code> are the same size. As an illustration, here's an example. Let's set <code>A</code> and <code>B</code> to be a random 4 x 4 array of integers each. </p> <pre><code>rng(123); A = randi(10, 4, 4) B = randi(10, 4, 4) A = 7 8 5 5 3 5 4 1 3 10 4 4 6 7 8 8 B = 2 7 8 3 2 9 4 7 6 8 4 1 6 7 3 5 </code></pre> <p>By running the first line of code, we get this:</p> <pre><code>[~,ind] = min(A,[],2) ind = 3 4 1 1 </code></pre> <p>This tells us that the minimum value of the first row is the third column, the minimum value of the next row is the 4th column, and so on and so forth. Once we have these column numbers, let's access what the corresponding values are in <code>B</code>, so we would want row and columns <code>(1,3)</code>, <code>(2,4)</code>, etc. Therefore, after running the second statement, we get:</p> <pre><code>val = B(sub2ind(size(A), (1:size(A,1)).', ind)) val = 8 7 6 6 </code></pre> <p>If you quickly double check the accessed positions in <code>B</code> in comparison to <code>A</code>, we have found exactly those spots in <code>B</code> that correspond to <code>A</code>.</p>
<pre><code>A = randi(9,[5 5]); B = randi(9,[5 5]); [C,I] = min(A'); B.*(A == repmat(C',1,size(A,2))) </code></pre> <p>example,</p> <pre><code>A = 2 1 6 9 1 2 4 4 4 2 5 6 5 5 5 9 3 9 3 6 4 5 6 8 3 B = 3 5 6 8 1 9 2 9 7 1 5 6 6 5 6 4 6 1 4 5 5 3 7 1 9 ans = 0 5 0 0 1 9 0 0 0 1 5 0 6 5 6 0 6 0 4 0 0 0 0 0 9 </code></pre> <p>You can use it like,</p> <pre><code>B(A == repmat(C',1,5)) ans = 9 5 5 6 6 5 4 1 1 6 9 </code></pre>