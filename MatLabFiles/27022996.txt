Modify the value of a specific position in a text file in Matlab
<pre><code>AIR, ID AIR.SIT 50 1 1 1 0 0 2 1 43.57 -116.24 1. 857.7 </code></pre> <p>Hi, All,</p> <p>I have a text file like above. Now in Matlab, I want to create 5000 text files, changing the number "2" (the specific number in the 3rd row) from 1 to 5000 in each file, while keeping other contents the same. In every loop, the changed number is the same with the loop number. And the output in every loop is saved into a new text file, with the name like AIR_LoopNumber.SIT. </p> <p>I've spent some time writing on that. But it is kind of difficult for a newby. Here is what I have:</p> <pre><code> % - Read source file. fid = fopen ('Air.SIT'); n = 1; textline={}; while (~feof(fid)) textline(n,1)={fgetl(fid)}; end FileName=Air; % - Replace characters when relevant. for i = 1 : 5000 filename = sprintf('%s_%d.SIT','filename',i); end </code></pre> <p>Anybody can help on finishing the program?</p> <p>Thanks, James</p>
<p>If your file is so short you do not have to read it line by line. Just read the full thing in one variable, modify only the necessary part of it before each write, then write the full variable back in one go.</p> <pre><code>%% // read the full file as a long sequence of 'char' fid = fopen ('Air.SIT'); fulltext = fread(fid,Inf,'char') ; fclose(fid) ; %% // add a few blank placeholder (3 exactly) to hold the 4 digits when we'll be counting 5000 fulltext = [fulltext(1:49) ; 32 ; 32 ; 32 ; fulltext(50:end) ] ; idx2replace = 50:53 ; %// save the index of the characters which will be modified each loop %% // Go for it baseFileName = 'AIR_%d.SIT' ; for iFile = 1:1000:5000 %// build filename filename = sprintf(baseFileName,iFile); %// modify the string to write fulltext(idx2replace) = num2str(iFile,'%04d').' ; %//' %// write the file fidw = fopen( filename , 'w' ) ; fwrite(fidw,fulltext) ; fclose(fidw) ; end </code></pre> <p>This example works with the text in your example, you may have to adjust slightly the indices of the characters to replace if your real case is different.</p> <p>Also I set a step of 1000 for the loop to let you try and see if it works without writing 1000's of file. When you are satisfied with the result, remove the 1000 step in the for loop.</p> <hr> <p><strong>Edit:</strong><br> The format specifier <code>%04d</code> I gave in the first solution insure the output will take 4 characters, and it will pad any smaller number with zero (ex: 23 => <code>0023</code>). It is sometimes desirable to keep the length constant, and in your particular example it made things easier because the output string would be exactly the same length for all the files.</p> <p>However it is not mandatory at all, if you do not want the loop number to be padded with zero, you can use the simple format <code>%d</code>. This will only use the required number of digits. </p> <p>The side effect is that the output string will be of different length for different loop number, so we cannot use one string for all the iterations, we have to recreate a string at each iteration. So the simple modifications are as follow. Keep the first paragraph of the solution above as is, and replace the last 2 paragraphs with the following:</p> <pre><code>%% // prepare the block of text before and after the character to change textBefore = fulltext(1:49) ; textAfter = fulltext(51:end) ; %% // Go for it baseFileName = 'AIR_%d.SIT' ; for iFile = 1:500:5000 %// build filename filename = sprintf(baseFileName,iFile); %// rebuild the string to write fulltext = [textBefore ; num2str(iFile,'%d').' ; textAfter ]; %//' %// write the file fidw = fopen( filename , 'w' ) ; fwrite(fidw,fulltext) ; fclose(fidw) ; end </code></pre> <p><strong>Note:</strong> The constant length of character for a number may not be important in the file, but it can be very useful for your file names to be named <code>AIR_0001 ... AIR_0023 ... AIR_849 ... AIR_4357</code> etc ... because in a list they will appear <strong>properly ordered</strong> in any explorer windows.</p> <p>If you want your files named with constant length numbers, the just use:</p> <pre><code>baseFileName = 'AIR_%04d.SIT' ; </code></pre> <p>instead of the current line.</p>