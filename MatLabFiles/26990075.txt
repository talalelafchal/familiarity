Matlab bad performance under Jenkins
<p>I have a Jenkins script execution step which processes out-data with Matlab to perform evaluation of test results.</p> <p>When running the script from command prompt it starts up and exits quite fast but when executing the same script with the same arguments from Jenkins it performs extremely por. I get the Matlab welcome message in the "prompt only" window that appears but nothing else within the timeout of 2 hours that I have set for the job.</p> <p>Have disabled the Jenkins Windows service on node and are running the node-process from desktop but no difference:</p> <pre><code>C:\Windows\System32\java.exe -jar c:\j-mpc\slave.jar -jnlpUrl http://&lt;server&gt;/slave-agent.jnlp -secret &lt;xxxxx&gt; </code></pre> <p>Also tried to increase the memory for the node process in but no change:</p> <pre><code>C:\Windows\System32\java.exe -Xmx2048m </code></pre> <p>When killing the process-tree starting with bash it indicates that it is inherited from java.exe-sh.exe tree (Pocess Explorer window) but there is a missing PID in between:</p> <pre><code>java.exe (&lt;0.01%, 1 420 000K) sh.exe (&lt;0.01%, 2 140K) bash.exe (&lt;0.01%, 2 580K) bash.exe ( , 2 580K) python.exe ( , 6 044K) python.exe ( , 4 800K) matlab.exe ( , 1 844K) MATLAB.exe (&lt;0.01%, 167 324K) </code></pre> <p>Is there a hidden limitation in child processes that limits the memory or process usage when called from Jenkins, in other jobs I don't see the same limitations. Memory allocation for Matlab is very slow (from start to reasonable size >100M takes about a minute)</p> <p>(Have a screen dump from Process Explorer but I am not allowed to upload)</p> <p><strong>EDIT</strong></p> <p>I have also tried to limit the call to a single windows command line from Jenkins with the same result (suspected that the deep call stack was to blame for it) but same result.</p> <pre><code>matlab.exe -nodisplay -nosplash -nodesktop -wait -logfile "log_file.txt" -r "try script_file ;catch err; disp(err.message); end ; exit" </code></pre>
<p>Solved by setting the <strong>LM_LICENSE_FILE</strong> environment variable in Jenkins node setup. (found a <a href="http://www.mathworks.com/matlabcentral/answers/93345-why-does-matlab-take-so-long-to-start-if-i-am-disconnected-from-the-network" rel="nofollow">thread about slow startup</a>)</p> <p>Apparently the shell environment started by Jenkins does not completely comply with the one started from explorer.</p>