MATLAB correlation between 2 variables of different sizes
<p>I have two variables both class double X = 11x3 Matrix (Showing number of Negative, Neutral, Positive elements in each row)</p> <p>Y = 11x1 (showing prices)</p> <p>How would I show the correlation between these two variables and also fit this to a Linear regression model.</p> <p>I have tried :</p> <blockquote> <blockquote> <p>corrcoef([X,Y])</p> </blockquote> </blockquote> <p>ans =</p> <pre><code>1.0000 0.3119 0.6753 0.0996 0.3119 1.0000 0.4582 -0.0565 0.6753 0.4582 1.0000 -0.0627 0.0996 -0.0565 -0.0627 1.0000 </code></pre> <p>But not sure if this is correct</p> <p>Many thanks</p>
<p>The specific problem with your code is that in your line <code>corrcoef([X,Y])</code> you just lumped your <code>X</code> and <code>Y</code> into one variable. You can definitely get the answer that you want out of this matrix (the off-diagonal terms are the correlation between the columns of X and your Y) but this might not be quite what you were expecting.</p> <p>When you are unsure, I always recommend breaking the problem down into the smallest steps. In this case, things are perhaps confusing for you because your <code>X</code> has three columns while your <code>Y</code> only has one column. What does <code>corrcoef</code> do in this case? If you're not sure, I'd suggest breaking it down into smaller steps...</p> <p>For the operation that you are interested in (correlation with <code>Y</code> and a linear regression), there is no interdependence between the three columns of <code>X</code>. So, a good simplifying step would be to deal with the 3 columns independently. You can do it in a <code>for</code> loop (yes, you can do it all vectorized at once, but doing it in a <code>for</code> loop makes it easier to understand when one is unsure)...</p> <pre><code>%see the correation between the two variables for I=1:3 x_foo = X(:,I) %http://www.mathworks.com/help/matlab/ref/corrcoef.html c = corrcoeff(x_foo,Y) end </code></pre> <p>Then, you can do the next step...the linear regression. Use the polyfit function to fit a line.</p> <pre><code>figure; for I=1:3 x_foo = X(:,I); %http://www.mathworks.com/help/matlab/ref/polyfit.html N = 1; % order of the desired polynominal. N=1 means a line p = polyfit(x_foo,Y,N); %N=1 will fit a line %plot subplot(3,1,I) plot(x_foo,Y,'o',x_foo,polyval(p,x_foo),'s'); legend('Data','Linear Fit'); end </code></pre>