How do I cut my EMG signal and get an average signal?
<p>I have an EMG signal of a subject walking on a treadmill. We used footswitches to be able to see when the subject is placing his foot, so we can see how many periods (steps) there are in time. We would like to cut the signal in periods (steps) and get one average signal (100% step cycle).</p> <p>I tried the reshape function but it does not work</p> <p>when I count 38 steps:</p> <pre><code>nwaves = 38; sig2 = reshape(sig,[numel(sig)/nwaves nwaves])'; avgSig = mean(sig2,1); plot(avgSig); </code></pre> <p>the error displayed is this: Size arguments must be real integers.</p> <p>Can anyone help me with this? Thanks!</p>
<p>First of all, reshaping the array is a bad approach to the problem. In real world one cannot assume that the person on the treadmill will step rhythmically with millisecond-precision (i.e. for the same amount of samples).</p> <p>A more realistic approach is to use the <code>footswitch</code> signal: assume is <em>really a switch</em> on a single foot (<code>1</code>=foot on, <code>0</code>=foot off), and its actions are <em>filtered</em> to avoid noise (Schmidt trigger, for example), you can get the samples index when the foot is removed from the treadmill with:</p> <pre><code>foot_off = find(diff(footswitch) &lt; 0); </code></pre> <p>then you can transform your signal in a cell array (variable lengths) of vectors of data between consecutive steps:</p> <pre><code>step_len = diff([0, foot_off, numel(footswitch)]); sig2 = mat2cell(sig(:), step_len, 1); </code></pre> <p>The problem now is you can't apply <code>mean()</code> to the signal slices in order to get an "average step": you must process each step first, then average the results.</p>
<p>It's probably because <code>numel(sig)/nwaves</code> isn't an integer. You need to round it to the nearest integer with <code>round(numel(sig)/nwaves)</code>.</p> <p><strong>EDIT based on comments:</strong></p> <p>Your problem is you can't divide <code>51116</code> by <code>38</code> (it's <code>1345.2</code>), so you can't reshape your signal in chunks of <code>38</code> long. You need a signal whose length is exactly a multiple of <code>38</code> if you want to be able to reshape it in chunks of <code>38</code>. Either that, or remove the last (or first) <code>6</code> values from your signal to have an exact multiple of <code>38</code> (<code>1345 * 38 = 51110</code>):</p> <pre><code>nwaves = 38; n_chunks = round(numel(sig)/nwaves); max_sig_length = n_chunks * nwaves; sig2 = reshape(sig(1:max_sig_length),[n_chunks nwaves])'; avgSig = mean(sig2,1); plot(avgSig); </code></pre>