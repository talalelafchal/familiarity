How to use issorted function to check if the array is sorted in descending order
<p>I am trying to use <code>issorted</code> function to check if the array is sorted in descending order but it only works for ascending order .. I used <code>fliplr</code> function before checking the order and it works fine but I don't know if there is a more efficient solution or not .. Any Help?</p> <p>My Code:</p> <pre><code>a = [1 2 3 4]; fliplr(a); s = issorted(a); </code></pre>
<p>What about negating a? It should be faster than fliplr(a).</p> <pre><code>a = -2:4; s = issorted(-a); </code></pre>
<p>The <code>fliplr</code> does only this:</p> <pre><code>if ~ismatrix(x) error(message('MATLAB:fliplr:SizeX')); end y = x(:,end:-1:1); </code></pre> <p>so you could speed up your code a little by just doing <code>y = x(:,end:-1:1);</code> instead of executing <code>fliplr</code>. You could also try @kmundnic suggestion, but it wont work when <code>a</code> is cell of strings, and <code>issorted</code> can operate on the cell of strings as well.</p>
<p>For a numeric vector, this should be pretty fast:</p> <pre><code>s = all(diff(a)&lt;=0); </code></pre> <p>Or perhaps</p> <pre><code>isempty(find(diff(a)&gt;0,1)) </code></pre> <p>so that <code>find</code> can stop as soon as it finds an pair of values.</p>