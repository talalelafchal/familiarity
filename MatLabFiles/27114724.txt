Matlab- moving numbers to new row if condition is met
<p>I have a variable like this that is all one row:</p> <pre><code>1 2 3 4 5 6 7 8 9 2 4 5 6 5 </code></pre> <p>I want to write a for loop that will find where a number is less than the previous one and put the rest of the numbers in a new row, like this</p> <pre><code>1 2 3 4 5 6 7 8 9 2 4 5 6 5 </code></pre> <p>I have tried this:</p> <pre><code>test = [1 2 3 4 5 6 7 8 9 2 4 5 6 5]; m = zeros(size(test)); for i=1:numel(test)-1; for rows=1:size(m,1) if test(i) &gt; test(i+1); m(i+1, rows+1) = test(i+1:end) end % for rows end % for </code></pre> <p>But it's clearly not right and just hangs.</p>
<p>Let <code>x</code> be your data vector. What you want can be done quite simply as follows:</p> <pre><code>ind = [find(diff(x)&lt;0) numel(x)]; %// find ends of increasing subsequences ind(2:end) = diff(ind); %// compute lengths of those subsequences y = mat2cell(x, 1, ind); %// split data vector according to those lenghts </code></pre> <p>This produces the desired result in cell array <code>y</code>. A cell array is used so that each "row" can have a different number of columns.</p> <p>Example:</p> <pre><code>x = [1 2 3 4 5 6 7 8 9 2 4 5 6 5]; </code></pre> <p>gives</p> <pre><code>y{1} = 1 2 3 4 5 6 7 8 9 y{2} = 2 4 5 6 y{3} = 5 </code></pre>
<p>If you are looking for a numeric array output, you would need to fill the "gaps" with something and filling with <code>zeros</code> seem like a good option as you seem to be doing in your code as well.</p> <p>So, here's a <strong><a href="http://in.mathworks.com/help/matlab/ref/bsxfun.html" rel="nofollow"><code>bsxfun</code></a></strong> based approach to achieve the same -</p> <pre><code>test = [1 2 3 4 5 6 7 8 9 2 4 5 6 5] %// Input idx = [find(diff(test)&lt;0) numel(test)] %// positions of row shifts lens = [idx(1) diff(idx)] %// lengths of each row in the proposed output m = zeros(max(lens),numel(lens)) %// setup output matrix m(bsxfun(@le,[1:max(lens)]',lens)) = test; %//'# put values from input array m = m.' %//'# Output that is a transposed version after putting the values </code></pre> <p>Output -</p> <pre><code>m = 1 2 3 4 5 6 7 8 9 2 4 5 6 0 0 0 0 0 5 0 0 0 0 0 0 0 0 </code></pre>