Use of Inf on Matlab
<p>I am currently translating a MATLAB program into Python. I successfully ported all the previous vector operations using numpy. However I am stuck in the following bit of code which is a cosine similarity measure.</p> <pre><code>% W and ind are different sized matrices dist = full(W * (W(ind2(range),:)' - W(ind1(range),:)' + W(ind3(range),:)')); for i=1:length(range) dist(ind1(range(i)),i) = -Inf; dist(ind2(range(i)),i) = -Inf; dist(ind3(range(i)),i) = -Inf; end disp(dist) [~, mx(range)] = max(dist); </code></pre> <p>I did not understand the following part.</p> <pre><code>dist(indx(range(i)),i) = -Inf; </code></pre> <p>What actuality is happening when you use</p> <pre><code>= -Inf; </code></pre> <p>on the right side?</p>
<p>It just assigns a <a href="http://es.mathworks.com/help/matlab/ref/inf.html" rel="nofollow">minus infinity</a> value to the left-hand side.</p> <p>It may appear weird to assign that value, particularly because a distance <a href="http://en.wikipedia.org/wiki/Metric_(mathematics)#Definition" rel="nofollow">cannot be negative</a>. But it looks like it's used for effectively removing those entries from the <code>max</code> computation in the last line.</p> <p>If Python doesn't have "infinity" (I don't know Python) <em>and</em> if <code>dist</code> is really a distance (hence <em>nonnegative</em>) , you could use any negative value instead of <code>-inf</code> to achieve the same effect, namely remove those entries from the <code>max</code> computation.</p>
<p>The -Inf is typically used to initialize a variable such that you later can use it to in a comparison in a loop. For instance if I want to find the the maximum value in a function (and have forgotten the command max). Then I would have made something like:</p> <pre><code>function maxF = findMax(f,a,b) maxF = -Inf; x = a:0.001:b; for i = 1:length(x) if f(x) &gt; maxF maxF = f(x); end end </code></pre> <p>It is a method in matlab to make sure that any other value is larger than the current. So the comparison in Python would be -sys.maxint +1. </p> <p>See for instance: <a href="http://stackoverflow.com/questions/7604966/maximum-and-minimum-values-for-ints">Maximum and Minimum values for ints</a></p>
<p>In Matlab (see: <a href="http://www.mathworks.com/help/matlab/ref/inf.html" rel="nofollow">Inf</a>):</p> <blockquote> <p>Inf returns the IEEE® arithmetic representation for positive infinity.</p> </blockquote> <p>So <code>Inf</code> produces a value that is greater than all other numeric values. <code>-Inf</code> produces a value that is guaranteed to be less than any other numeric value. It's generally used when you want to iteratively find a maximum and need a first value to compare to that's always going to be less than your first comparison.</p> <p>According to Wikipedia (see: <a href="http://en.wikipedia.org/wiki/IEEE_754-1985#Positive_and_negative_infinity" rel="nofollow">IEEE 754 Inf</a>):</p> <blockquote> <p>Positive and negative infinity are represented thus:</p> <p>sign = 0 for positive infinity, 1 for negative infinity.<br> biased exponent = all 1 bits.<br> fraction = all 0 bits.</p> </blockquote> <p>Python has the same concept using <code>'-inf'</code> (see Note 6 <a href="https://docs.python.org/2/library/stdtypes.html#numeric-types-int-float-long-complex" rel="nofollow">here</a>):</p> <blockquote> <p>float also accepts the strings “nan” and “inf” with an optional prefix “+” or “-” for Not a Number (NaN) and positive or negative infinity.</p> </blockquote> <pre><code>&gt;&gt;&gt; a=float('-inf') &gt;&gt;&gt; a -inf &gt;&gt;&gt; b=-27983.444 &gt;&gt;&gt; min(a,b) -inf </code></pre>