Combine 2 rows in a cell array
<p>I have a number of rows in a cell array with lots of extra space at the end of the rows as such:</p> <pre><code>'a' 'b' 'c' 'd' [] [] [] [] [] '1' '2' '3' [] [] [] [] [] [] 'w' 'x' 'y' 'z' [] [] [] [] [] </code></pre> <p>I would like to copy the second row onto the end of the first row, as such:</p> <pre><code>'a' 'b' 'c' 'd' '1' '2' '3' [] [] '1' '2' '3' [] [] [] [] [] [] 'w' 'x' 'y' 'z' [] [] [] [] [] </code></pre> <p>Please note that the code given above is an arbitrary example to demonstrate what I wish to do. In reality I will include this functionality as a step in a more complex function.</p> <p>I have tried searching for the first empty element in the cell array row, but for some reason isempty does not see them as empty. Is there an alternative method that someone could point me towards?</p> <p>EDIT: After the steps carried out above, the second row will be deleted, giving:</p> <pre><code>'a' 'b' 'c' 'd' '1' '2' '3' [] [] 'w' 'x' 'y' 'z' [] [] [] [] [] </code></pre> <p>Although the real cell array will have many more rows than 3.</p>
<p>I think this does what you want. I've denoted your cell array as <code>c</code>.</p> <pre><code>n1 = find(cellfun('isempty',c(1,:)), 1); %// first empty cell in row 1 n2 = find(cellfun('isempty',c(2,:)), 1); %// first empty cell in row 2 c(1,n1:n1+n2-2) = c(2,1:n2-1); %// copy the relevant part of row 2 onto row 1 </code></pre> <p>This automatically extends your cell horizontally if the number of non-empty cells in row 2 exceeds the number of empty cells in row 1.</p> <p>Example: input:</p> <pre><code>c = {'a' 'b' 'c' 'd' [] [] [] [] [] '1' '2' '3' [] [] [] [] [] [] 'w' 'x' 'y' 'z' [] [] [] [] []} </code></pre> <p>Output:</p> <pre><code>c = 'a' 'b' 'c' 'd' '1' '2' '3' [] [] '1' '2' '3' [] [] [] [] [] [] 'w' 'x' 'y' 'z' [] [] [] [] [] </code></pre>
<p>Here's one general approach that uses the efficient <strong><a href="http://in.mathworks.com/help/matlab/matlab_prog/vectorization.html#btjk576-1" rel="nofollow"><code>logical indexing</code></a></strong> to select the non-empty cells, single call to <code>cellfun('isempty'</code> and does automatic extension as talked about in <a href="http://stackoverflow.com/a/27127000/3293881">Luis's solution</a> -</p> <pre><code>C = { 'a' 'b' 'c' 'd' [] [] [] [] [] '1' '2' '3' [] [] [] [] [] [] 'w' 'x' 'y' 'z' [] [] [] [] []} %// Input cell array N = 2; %//Number of rows to process, starting from 2 until the number of rows in C Ct = C'; %//'# Transpose input cell array, as collecting elements that way is easier vals = Ct(~cellfun('isempty',Ct(:,1:N))); %//'# elements from selected row(s) C(1,1:numel(vals)) = vals; %// Place the values into the first row </code></pre> <p>With <code>N = 2</code> which is the case stated in the problem, output would be -</p> <pre><code>C = 'a' 'b' 'c' 'd' '1' '2' '3' [] [] '1' '2' '3' [] [] [] [] [] [] 'w' 'x' 'y' 'z' [] [] [] [] [] </code></pre> <p>With <code>N = 3</code>, you would copy the second and third rows at the end of the first row. Thus, the output would be -</p> <pre><code>C = 'a' 'b' 'c' 'd' '1' '2' '3' 'w' 'x' 'y' 'z' '1' '2' '3' [] [] [] [] [] [] [] [] 'w' 'x' 'y' 'z' [] [] [] [] [] [] [] </code></pre> <p>and so on.</p>