Achieving 2 hertz data logging with Matlab serial
<p>I am trying to use matlab for data acquisition with a licor820 instrument. The instrument outputs data at 2 hertz.</p> <p>I have tried many different methods using infinite loops with asynchronous sampling (readasync) and timed readings but I am unable to get 2 hertz data. I am getting reads in the .51 s range. here are three examples of my methods. Any advice on what I may be doing wrong or how to properly sample at the highest frequency would be greatly appreciated!</p> <p>example1: using readasync</p> <pre><code>tinit=tic; %initialization timer s=serial('COM4') %,'InputBufferSize',40); fopen(s) while toc(tinit)&lt;2 %allow time to initialize end while 1&lt;2 %infinite loop for continuous sampling readasync(s) data=fscanf(s) toc %allows me to see time between data acquisitions tic end </code></pre> <p>example 2: using bytes available. My thinking here is to acquire data when I have the minimum amount of bytes necessary. Although I am unsure exactly how to determine how many bytes are necessary for my instrument, besides through visually looking at the data and narrowing it down to around 40 bytes:</p> <pre><code>while 1&lt;2 %infinite loop for continuous sampling if s.BytesAvailable &gt;35 scandata=fscanf(s); toc tic end end </code></pre> <p>example 3: time forcing. Since I need 2 hertz data my thinking here was to just force read the buffer every .49 seconds. The weird thing I see here is that it initially provides samples every .49 seconds, but while I monitor the bytes available at the port I see it steady dropping from 512 until it gets to 0 and then I stop getting .49 second samples. I guess I don't really understand how to use serial efficiently. </p> <pre><code>while 1&lt;2 %infinite loop if toc(t2)&gt;=.49 %only sample after .49 seconds have passed t2=tic; %reinitiate the tic for this forced time loop bytes=s.BytesAvailable %to monitor how many bytes there are at the port scandata=fscanf(s); if ~isempty(scandata) &amp;&amp; length(scandata)== 3 %checks for successful read toc tic end end end </code></pre> <p>I feel there must be some way to sample completely in sync with the an instrument but I can't figure it out. Any help, suggestions, or ideas would be greatly appreciated! Thanks!</p>
<p>Dont rely on <code>tic</code> and <code>toc</code>. These functions use the time supplied by the OS calls. Mathworks claims to use high resolution timers, but do not rely on this! If you do not use a realtime OS these measurements are subject to unknown variation.</p> <p>Sampling should be performed by realtime capable hardware. In your case I suspect that your sampling rate is actually controlled by your instrument. The output of the instrument is buffered by your serial interface. Therefore it seems to me that Matlab does not influence the sampling rate at all. (As long as the buffer does not overflow)</p> <p>Try to acquire about 2000 samples or more and see how long it takes. Then divide the total time by the number of samples (-1) and compare this to the expected 0.5 s. If there is a difference, try adjusting the configuration of your instrument.</p>