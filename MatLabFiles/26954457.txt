how to crop multiple objects from an image in matlab
<p>This is the code of object detection from a video.</p> <p>I want to crop objects from this video frame by frame.</p> <pre><code>videoSource = vision.VideoFileReader('viptraffic.avi','ImageColorSpace','Intensity'... 'VideoOutputDataType','uint8'); detector = vision.ForegroundDetector(... 'NumTrainingFrames', 5, ... 'InitialVariance', 30*30); blob = vision.BlobAnalysis(... 'CentroidOutputPort', false, 'AreaOutputPort', false, ... 'BoundingBoxOutputPort', true, ... 'MinimumBlobAreaSource', 'Property', 'MinimumBlobArea', 250); shapeInserter = vision.ShapeInserter('BorderColor','White'); videoPlayer = vision.VideoPlayer(); while ~isDone(videoSource) frame = step(videoSource); fgMask = step(detector, frame); bbox = step(blob, fgMask); out = step(shapeInserter, frame, bbox); step(videoPlayer, out); end release(videoPlayer); release(videoSource); </code></pre> <p>when I want to crop bbox from frame it always give me error "invalid input arguments" </p> <p>if I write this this command.</p> <pre><code> frame(bbox(1):bbox(1)+bbox(3), bbox(2):bbox(2)+bbox(4), :); </code></pre> <p>"Index exceeds matrix dimensions" error came. please help me how to crop objects from image </p>
<p>Try</p> <pre><code>frame(bbox(2):bbox(2)+bbox(4), bbox(1):bbox(1)+bbox(3), :); </code></pre> <p>The values in <code>bbox</code> are in format <code>[ x y w h ]</code> while the indices into <code>frame</code> should be in row-column order: you need to change the order of x and y to row-column.</p>
<p>You need to handle cases when no boxes have been detected (<code>bbox</code> is empty) and when more than one box is detected (<code>bbox</code> is an M-by-2 matrix).</p> <p>So you should have a loop:</p> <pre><code>for i = 1:size(bbox, 1) croppedImage = frame(bbox(i, 2):bbox(i, 2)+bbox(i, 4), bbox(i, 1):bbox(i, 1)+bbox(i, 3), :); % do something wiht croppedImage end </code></pre> <p>Alternatively, you can use the <code>imcrop</code> function:</p> <pre><code>croppedImage = imcrop(bbox(i, :)); </code></pre> <p>Just be aware that <code>imcrop</code> will return an array 1 pixel smaller in x and y, than the other approach.</p>