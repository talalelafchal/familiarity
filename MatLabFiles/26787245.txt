Read JSON objects with Matlab
<p>I want to read from a json file with Matlab and store everything in "data" as objects. After import, I need to iterate through all and extract specific values, if it's available in the object.</p> <p><strong>JSON (source):</strong></p> <pre><code>{ "eid": 44000, "dpm_id": { "dpm": "fm", "pwr": "main" }, "fpga_id": 3189637128, "fpga_ver": 3104379702, "boot_id": 0, "pbs_ver": "PBS 2012-05-07 16:41" } { "sid": 1, "hk1": { "bela_mode": "pbs_mode", "pbs_version": "version 1.3", "scet": "2038-01-19T03:14:08", "ref_time": "0:00:00", "tc_received": 2, "tc_exec": 2, "tc_err_ack": 0, "tc_err_exec": 1, "tm_total": 1, "tm_sent": 1, "tm_dropped": 0, .... </code></pre> <p><strong>Matlab (import, <a href="http://www.mathworks.com/matlabcentral/fileexchange/42236-parse-json-text/content/example/html/usage.html">according to this website, resp. Class</a>):</strong></p> <pre><code>fname = 'FileName.json'; fid = fopen(fname); raw = fread(fid,inf); str = char(raw'); fclose(fid); data = JSON.parse(str) </code></pre> <p><strong>Problem/Question:</strong></p> <p>As you see, Matlab only reads the content of the first brackets/field. How can I import ALL brackets/fields, even if I don't know how many there are?</p> <pre><code>data = eid: 44000 dpm_id: [1x1 struct] fpga_id: 3.1896e+09 fpga_ver: 3.1044e+09 boot_id: 0 pbs_ver: 'PBS 2012-05-07 16:41' </code></pre> <p>Thank you!</p>
<p>You could try parsing using another json library, such as <a href="http://www.mathworks.com/matlabcentral/fileexchange/20565-json-parser" rel="nofollow">this one on file exchange</a>. </p> <p>Alternatively you could try some of the methods listed on <a href="http://undocumentedmatlab.com/blog/json-matlab-integration" rel="nofollow">this site</a>, such as using matlab's Java and .NET integration and loading with one of their json libraries.</p> <p>As a third alternative, since the method you have shown above will happily load the first object in the string, you could always do some manual pre-parsing of the string into a cell array of strings containing a single object each, and then parse those.</p>
<p>If your file is accessible <em>via</em> <code>http</code> or <code>https</code>, you can use the <code>webread</code> function from the <code>Data Import and Export</code> toolbox. It automatically converts JSON files to Matlab structures.</p> <p>There is a <code>decodeJSON</code> function in the toolbox (<code>MATLABROOT/toolbox/matlab/external/interfaces/webservices/restful/private/decodeJSON.m</code>), but the help clearly states that:</p> <pre><code>% FOR INTERNAL USE ONLY -- This function is intentionally undocumented % and is intended for use only within the scope of functions and classes % in toolbox/matlab/external/interfaces/webservices/restful. Its behavior % may change, or the class itself may be removed in a future release. </code></pre> <p>Nevertheless you can get inspiration in the content to build your own solution. It's a pity that the Mathworks didn't made this program available outside the toolbox.</p> <p>Best</p>
<p>You are trying to read a json file, which is not valid. I recommend to use <a href="http://jsonlint.com/" rel="nofollow">jsonlint</a> for a quick verification.</p> <p>Your json looks like </p> <pre><code>{ "skipped":"A" } { "skipped":"B" } </code></pre> <p>That is not a valid syntax, because it describes two objects. After the first <code>}</code> the parser expects the end of file because a json file contains one object.</p> <p>Possible fixes are:</p> <pre><code>[ { "skipped": "A" }, { "skipped": "B" } ] </code></pre> <p>or</p> <pre><code>{ "aa": { "skipped": "A" }, "bb": { "skipped": "B" } } </code></pre>
<p>If you just want to read whole JSON files into MATLAB, and have a C++11 compiler, you can use the very fast <a href="https://uk.mathworks.com/matlabcentral/fileexchange/59166-json-read" rel="nofollow">json_read</a> mex function.</p>