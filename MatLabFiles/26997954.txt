substitute the derivative of a function in a symbolic expression
<p>I have the same question as <a href="http://es.mathworks.com/matlabcentral/answers/116008-symbolic-math-substitute-a-derivative-function-with-subs" rel="nofollow" title="here">here</a>.</p> <p>In Matlab the derivative of a function can be represented symbolically as</p> <pre><code>&gt;&gt; syms t &gt;&gt; syms x(t) &gt;&gt; diff(x,t) ans(t) = D(x)(t) </code></pre> <p>But how can I substitute in an expression if, say, I know the derivative.</p> <pre><code>&gt;&gt; subs(ans,D(x)(t),3) Error: ()-indexing must appear last in an index expression. </code></pre>
<p>MATLAB interprets that you are doing a nested index call. It thinks that you are doing <code>D(x)</code>, then whatever result of this you are indexing into the array with <code>t</code>. What you should do instead is nest a <code>diff(x,t)</code> call inside of the second parameter of <code>subs</code>, then do your substitution. Therefore:</p> <pre><code>subs(ans, diff(x,t), 3); </code></pre>
<p>Let's work through an example:</p> <pre><code>syms t x(t) y f = x^2+y dfdt = diff(f,t) % returns 2*D(x)(t)*x(t) dxdt = diff(x,t) % returns D(x)(t) subs(dfdt,dxdt,3) </code></pre> <p>which returns the <code>6*x(t)</code>. The key is that <code>D(x)(t)</code> is just the printed representation of the derivative with respect to time, not the actual value. You need to assign it to an actual variable. In your example you'd need to do what @rayeng suggests, but it it's much more flexible and clearer if you assign names to your outputs.</p> <p>Both <code>x</code> and <code>dxdt</code> are what the help and documentation for <a href="http://www.mathworks.com/help/symbolic/symfun.html" rel="nofollow"><code>symfun</code></a> call an "abstract" or "arbitrary" symbolic function, i.e., one without a definition. These behave a bit differently from regular symbolic variables of type <code>sym</code>. Type <code>class(x)</code> or <code>whos</code> in your command window to see your variable types.</p>