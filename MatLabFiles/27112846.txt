Matlab to Python conversion: Read a text file into numpy records and search array for a string
<p>I am just learning Python and I am not familiar with all the terminology yet. I have the following Matlab code that I would like to do in Python.</p> <ol> <li>Read a text file into a structure (record/list?)</li> <li>Search a field (array of strings) for a particular value. </li> <li>Use that index in another field</li> </ol> <p><strong>sampleData.txt</strong></p> <pre><code>name descript sr type scale offset a Param_a 10 int8 1 0 b Param_b 20 unit 2 -10 c Param_c 30 int8 3 -20 d Param_d 40 int8 4 -30 e Param_e 50 uint 5 -40 </code></pre> <p><strong>Matlab Code:</strong></p> <pre><code>&gt;&gt; [info.name info.descrip info.sr info.type info.scale info.offset] = textread('sampleData.txt','%s\t%s\t%f\t%s\t%f\t%f','headerlines',1); info = name: {5x1 cell} descrip: {5x1 cell} sr: [5x1 double] type: {5x1 cell} scale: [5x1 double] offset: [5x1 double] &gt;&gt; nameIdx = strcmp(info.name,'b') ; &gt;&gt; matched_sr = info.sr(nameIdx) matched_sr = 20 </code></pre> <p>In python I was able to read-in the text file using numpy with:</p> <pre><code>info= recfromcsv('sampleData.txt', delimiter='\t') Out: rec.array([(b'a', b'Param_a', 10, b'int8', 1, 0), (b'b', b'Param_b', 20, b'unit', 2, -10), (b'c', b'Param_c', 30, b'int8', 3, -20), (b'd', b'Param_d', 40, b'int8', 4, -30), (b'e', b'Param_e', 50, b'uint', 5, -40)], dtype=[('name', 'S1'), ('descript', 'S7'), ('sr', '&lt;i4'), ('type', 'S4'), ('scale', '&lt;i4'), ('offset', '&lt;i4')]) </code></pre> <p>I can do things like the following to get an array of logicals:</p> <pre><code>In [77]: info.sr == 20 Out[77]: array([False, True, False, False, False], dtype=bool) </code></pre> <p>But the same thing for info.name doesn't work.</p> <pre><code>In [78]: info.name == 'b' Out[78]: False </code></pre> <p>So, how fo I find a parameter by "name" like I did in matlab with strcmp? Also, more generally is there a better approach in Python/numpy to read in text files as arrays(records or lists?)? Sorry for any incorrect Python jargon as I am still very new.</p> <p>Thanks,</p>
<p>Looks like you are using <code>Python3</code>, which uses unicode strings as default. But the data file is ASCII, so the strings load as byte arrays. So all the strings display with the <code>b</code>.</p> <p>So to do comparisons, you need to compare byte strings to byte strings. </p> <p>Try:</p> <pre><code>info.name == b'b' </code></pre> <p>e.g.</p> <pre><code>In [21]: info.type==b'int8' Out[21]: array([ True, False, True, True, False], dtype=bool) </code></pre>