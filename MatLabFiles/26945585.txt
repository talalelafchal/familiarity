How would I plot the for loop from my code below?
<p>I have 3D flow data of the velocity of a fluid through a tube. I know the diameter of the tube and have looked at the velocity field and found the centre of the field for an xy plane at both ends of the tube. So I essentially have a line through the centre axis of the tube. I want to NaN all data points that are outside of the diameter. For this I am using an equation that gives the distance to a point from a line in 3D which I found here mathworld.wolfram.com/Point-LineDistance3-Dimensional.html. I then created an if statement which states points smaller than diameter will be NaN.</p> <p>I am new to matlab so I don't know how I would now plot this.</p> <pre><code>%% diff_axis = end_axis-start_axis; diff_axis_mag = (diff_axis(1)^2 + diff_axis(2)^2 + diff_axis(3)^2)^0.5; [rw col pl] = size(X); for j = 1:col for i = 1:rw for k = 1:pl x_curr = X(i,j,k); y_curr = Y(i,j,k); z_curr= Z(i,j,k); x0 = [x_curr y_curr z_curr] t = - dot((start_axis-x0),(diff_axis))./(diff_axis_mag)^2; d = sqrt(((start_axis(1) - x0(1)) + (end_axis(1) - start_end(1))*t)^2 + ((start_axis(2)-x0(2))+(end_axis(2)-start_end(2))*t)^2+((start_axis(3)-x0(3))+(end_axis(3)-start_end(3))*t)^2); if (d &gt; D) x_curr=NaN y_curr=NaN z_curr=NaN end end end end </code></pre>
<p>It were nice to have explanatory names for your <code>X</code>, <code>Y</code>, and <code>Z</code>. I am guessing they are flow components, and <code>diff_axis</code> are axis coordinates? It is a very cumbersome notation.</p> <p>what you do in your loops is you take point values (<code>X,Y,Z</code>), copy them to temporary constants and then set them to <code>NaN</code> if they fall out. But the problem is that usually you do not plot point-by-point in MATLAB. So these temorary guys like <code>x_curr</code> will be lost. Also, the most optimal way to do things in MATLAB is to avoid loops whenever possible. </p> <p>What you can do is to create first a mask</p> <pre><code>%// remember to put a dot like in `.^` for entrywise array operations diff_axis_mag = sqrt(diff_axis(1).^2 + diff_axis(2).^2 + diff_axis(3).^2); %// are you sure you need to include the third axis? %// then it is a ball, not a tube %// create a binary mask mask = diff_axis_mag &lt; tube_radius X(~mask) = NaN; Y(~mask) = NaN; Z(~mask) = NaN; </code></pre> <p>Then you can plot your data with <a href="http://www.mathworks.com/help/matlab/ref/quiver3.html" rel="nofollow"><code>quiver3</code></a> or <a href="http://ch.mathworks.com/help/matlab/ref/stream3.html" rel="nofollow"><code>stream3</code></a></p>