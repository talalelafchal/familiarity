Creating an array from an str concatenation Matlab
<p>Hello I have these two vectors</p> <pre><code>Q = [1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4] </code></pre> <p>and </p> <pre><code>Year = [2000,2000,2000,2000,2001,2001,2001,2001,2002.....] </code></pre> <p>and I would like to concatenate them into one single array Time</p> <pre><code>Time = [20001,20002,20003,20004,20010....] </code></pre> <p>Or </p> <pre><code>Time= {'2000Q1', '2000Q2', '2000Q3', '2000Q4', '2001Q1'....} </code></pre> <p>So far I tried with this code </p> <pre><code> m = zeros(136,1) for i=1:136 m(i,1)= strcat(Q(i),Year(i)); end </code></pre> <p>And Matlab outputed me this:</p> <blockquote> <p>Subscripted assignment dimension mismatch.</p> </blockquote> <p>Help pls ?</p>
<p>You can use <code>arrayfun</code></p> <p>If you want your output in string format (with a <code>'Q'</code> in the middle) then use <code>sprintf</code> to format the string</p> <pre><code>Time = arrayfun( @(y,q) sprintf('%dQ%d', y, q ), Year, Q, 'uni', 0 ); </code></pre> <p>Resulting with a <strong>cell</strong>array</p> <pre><code>Time = '2000Q1' '2000Q2' '2000Q3' '2000Q4' '2001Q1' '2001Q2' '2001Q3'... </code></pre> <p>Alternatively, if you skip the <code>'Q'</code> you can save each number in an array</p> <pre><code>Time = arrayfun( @(y,q) y*10+q, Year, Q ) </code></pre> <p>Resulting with a regular array</p> <pre><code>Time = 20001 20002 20003 20004 20011 20012 20013 ... </code></pre>
<p>Thats because you are initializing m to zeros(136,1) and then trying to save a full string into the first value. and obviously a double cannot hold a string.</p> <p>I give you 2 options, but I favor the first one.</p> <hr> <p><strong>1.-</strong> you can just use cell arrays, so your code converts into:</p> <pre><code> m = cell(136,1) for ii=1:136 m{ii}= strcat(Q(ii),Year(ii)); end </code></pre> <p>and then <code>m</code> will be: <code>m{1}='2000Q1';</code></p> <hr> <p><strong>2.-</strong> Or if you know that your strings will ALWAYS be the same size (in your case it lokos like they are always 6) you can:</p> <pre><code> m = zeros(136,strsize) for ii=1:136 m(ii,:)= strcat(Q(ii),Year(ii)); end </code></pre> <p>and then <code>m</code> will be: <code>m(1,:)= [ 50 48 48 48 81 49 ]</code> wich translated do ASCII will be 2000Q1</p>
<p>If your vectors <code>Year</code> and <code>Q</code> have the same number of elements, you do not need a loop, just transpose them (or just make sure they are in column), then concatenate with the <code>[]</code> operator:</p> <pre><code>Time = [ num2str(Year.') num2str(Q.') ] ; </code></pre> <p>will give you:</p> <pre><code>20001 20002 20003 20004 20011 ... </code></pre> <hr> <p>And if you want the <code>'Q'</code> character, insert it in the expression:</p> <pre><code>Time = [ num2str(Year.') repmat('Q',length(Q),1) num2str(Q.') ] </code></pre> <p>Will give you:</p> <pre><code>2000Q1 2000Q2 2000Q3 2000Q4 2001Q1 ... </code></pre> <hr> <p>This will be a char array, if you want a cell array, use <code>cellstr</code> on the same expression:</p> <pre><code>time = cellstr( [num2str(Year.') repmat('Q',length(Q),1) num2str(Q.')] ) ; </code></pre>
<p>To obtain <strong>strings</strong>:</p> <pre><code>strtrim(mat2cell(num2str([Year(:) Q(:) ],'%i%i'), ones(1,numel(Q)))); </code></pre> <p>Explanation:</p> <ol> <li>Concat both numeric vectors as two columns (using <code>[...]</code>)</li> <li>Convert to char array, where each row is the concatenation of two numbers (using <a href="http://es.mathworks.com/help/matlab/ref/num2str.html" rel="nofollow"><code>num2str</code></a> with <a href="http://es.mathworks.com/help/matlab/ref/sprintf.html" rel="nofollow"><code>sprintf</code></a>-like format specifiers). It is assumed that all numbers are integers (if not, change the format specifiers). This may introduce unwanted spaces if not all the concatenated numbers have the same number of digits.</li> <li>Convert to a cell array, putting each row in a different cell (using <a href="http://es.mathworks.com/help/matlab/ref/mat2cell.html" rel="nofollow"><code>mat2cell</code></a>).</li> <li>Remove whitespaces in each cell (using <a href="http://es.mathworks.com/help/matlab/ref/strtrim.html" rel="nofollow"><code>strtrim</code></a>)</li> </ol> <hr> <p>To obtain <strong>numbers</strong>: apply <a href="http://es.mathworks.com/help/matlab/ref/str2double.html" rel="nofollow"><code>str2double</code></a> to the above:</p> <pre><code>str2double(strtrim(mat2cell(num2str([Year(:) Q(:) ],'%i%i'), ones(1,numel(Q))))); </code></pre> <p>Or compute directly</p> <pre><code>10.^ceil(max(log10(Q)))*Year + Q; </code></pre>