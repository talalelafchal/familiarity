MATLAB csvread: Specifying a range with only numeric data but adjacent cells on the right contain text
<p>I've got a csv that is formatted in the following manner:</p> <pre> Sample Number Date/Time CHANNEL0 CHANNEL1 CHANNEL2 CHANNEL3 Events 1 11/26/2014 04:10:21.3349 PM 0.4643 -2.3232 -3.7053 -1.78 DAQ Start 2 11/26/2014 04:10:21.3350 PM 0.5489 -2.3226 -3.7047 -1.7836 3 11/26/2014 04:10:21.3351 PM 0.6316 -2.3217 -3.7035 -1.7833 4 11/26/2014 04:10:21.3352 PM 0.7137 -2.3211 -3.7023 -1.7827 . . . 35675 11/26/2014 04:10:21.3349 PM 0.4643 -2.3232 -3.7053 -1.78 DAQ Stop </pre> <p>I want to read this data into Matlab in one shot. I am trying to use csv read with the following range:</p> <pre><code>date = csvread('file.csv', 1, 2, [1, 2, 35674, 5]) </code></pre> <p>But every time I try to do this I get the error: </p> <pre><code>Error using dlmread (line 138) Mismatch between file and format string. Trouble reading number from file (row 1u, field 7u) ==&gt; DAQ Start\n Error in csvread (line 49) m=dlmread(filename, ',', r, c, rng); </code></pre> <p>(Note: There are some other headers in the file but these are irrelevant, the problem is this "DAQ Start" box)</p> <p>I don't understand why csvread is having an issue with the text that it outside of it's specified range on the right side. Does specifying a range not actually cause it to ONLY read that range?</p> <p>I can add that if I increase the row offset by one, so I don't read the row with the DAQ text, and only read to the second last row, then it works. Whenever I try to read either line with this extra text it gets upset. I could put together something with textscan, but I don't think this is going to be as clean because I would need to read the first and last lines separately. Any way to make this work with csvread?</p> <p>edit: The way that I included the data is lacking commas, I know that. But rest assured, it's a csv. </p>
<p>You can use the <a href="http://www.mathworks.com/help/matlab/ref/importdata.html" rel="nofollow">importdata</a> function and cut out the unimportant columns:</p> <pre><code>imported = importdata ('file.csv', ' ', 1) data = imported.data parts = data(:,[1:3 5:8]) </code></pre>