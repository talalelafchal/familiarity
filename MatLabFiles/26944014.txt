How to compute horizontal gradient value?
<p>So I want to measure the vertical edges of an image to use it later as depth cue for 2D to 3D conversion. </p> <p>To do so I will have to compute the horizontal gradient value for each block to measure the vertical edges as follow:</p> <pre><code>̅ g(x,y) = 1/N ∑_((x',y')∈ Ω(x,y))〖g(x', y')〗 </code></pre> <p>Where: </p> <p>g(x',y') is a horizontal gradient at a pixel location (x',y'),</p> <p>omega(x,y) is the nighborhood of the pixel location(x',y')</p> <p>and N is the number of pixels in omega(x,y). </p> <p><em>So Here is what I did on matlab</em>:</p> <pre><code>I = im2double(imread('landscape.jpg')); % convert RGB to gray gI = rgb2gray(I); [nrow, ncol] = size(gI); % divide the image into 4-by-4 blocks gI = mat2tiles((gI),[4,4]); N = 4*4; % block size % For each block, compute the horizontal gradient gI = reshape([gI{:}],4*4, []); mask = fspecial('sobel'); g = imfilter(gI, mask); g_bar = g./N; g_bar = reshape(g_bar,nrow, ncol); </code></pre> <p>I'm new to Matlab so I'm not sure if my code is expressing the equation in the right way. </p> <p>Can you please let me know if you think it is correct? as I'm not sure how to test the output! </p>
<p>There's no need for you to decompose your image into 4 x 4 blocks. The horizontal gradient can be used with a Sobel filter or Prewitt filter, which is 3 x 3 and can directly be put into <code>imfilter</code>. <code>imfilter</code> performs 2D convolution / filtering with a specified mask / kernel for you, so tiling is not necessary. As such, you can just use <code>imfilter</code> with the mask defined through <code>fspecial</code>, and define <code>N = 9</code>. Therefore:</p> <pre><code>I = im2double(imread('landscape.jpg')); % convert RGB to gray gI = rgb2gray(I); N = 9; mask = fspecial('sobel'); g = imfilter(gI, mask); g_bar = g./N; </code></pre> <p>From experience, increasing the size of your gradient mask won't give you much better results. You want to ensure that the mask is as small as possible to capture as many local changes as possible.</p>