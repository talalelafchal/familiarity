How to simply downsample a triangular mesh?
<p>This requirement occur when I show the surface mesh in Matlab by <a href="http://www.mathworks.com/help/matlab/ref/trisurf.html" rel="nofollow"><code>trisurf</code></a>, because the mesh is dense (high-resolution) and it is rendered slowly and can not be rotated. So I am wondering there is some intuitive method to downsample the mesh while keep the basic shape ? </p> <p>Before I post the question here, I have Googled. A popular tool <a href="http://iso2mesh.sourceforge.net" rel="nofollow">iso2mesh</a>, has a similar function, <code>remeshsurf</code>. But it firstly reconstruct the volume by the original mesh and the construct the new mesh according to the desired resolution. An important flaw, in my opinion, is that it change the original shape.</p> <p>Anyone has some idea ? The Matlab function would be the best since it is easy to be tested.</p> <p>Thanks.</p> <p>Nico</p>
<p>You should downsample your data,</p> <pre><code>[x,y]=meshgrid(1:15,1:15); tri = delaunay(x,y); z = peaks(15); trisurf(tri,x,y,z) figure x1 = x(1 : 2 : end,1 : 2 : end); y1 = y(1 : 2 : end,1 : 2 : end); z1 = z(1 : 2 : end,1 : 2 : end); tri1 = delaunay(x1,y1); trisurf(tri1,x1,y1,z1) </code></pre> <p><img src="https://i.stack.imgur.com/mgcfh.png" alt="enter image description here"></p> <p><img src="https://i.stack.imgur.com/FoNNP.png" alt="enter image description here"></p> <p>You could even use <code>downsample</code> function on each data.</p>
<p>@Kamtal (Originally I added this post as a comments but it prompts "too long post")Many thanks. I guess, your method is a good choice only when the hull of the shape is obviouse. For other cases, for an instance, the cortex of a human brain, the Matlab <code>delaunay</code> function is not smart enough to re-generate the triangular mesh while reserving the basic shape (fold). <a href="http://ddl.escience.cn/ff/emoD" rel="nofollow">Here</a> (about 1.7M) I have uploaded an example which describes a surface of the cortex (both left and right hemisphere). It could be displayed by the following code, <code> load mysurf.mat; figure, trisurf(mysurf.tri, mysurf.coord(:,1),mysurf.coord(:,2),mysurf.coord(:,3)); view(-90,0); daspect([1 1 1]); axis tight; camlight; axis vis3d off; lighting phong; material shiny;<br> shading interp; </code></p>