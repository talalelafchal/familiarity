How to implement a derivative of a symbolic function by a 'symfun' in Matlab?
<p>Here is my Matlab program:</p> <pre><code>syms x(t) t; f = x^2 + 5; </code></pre> <p>And the result of <code>f</code>: </p> <pre><code>f(t) = x(t)^2 + 5 </code></pre> <p>Both <code>f</code> and <code>x</code> are of class <code>symfun</code> in Matlab. I want the result of df/dx, which is equal to <code>2*x(t)</code>. I tried this in Matlab:</p> <pre><code>diff(f, x); </code></pre> <p>and got the following errors:</p> <pre><code>Error using mupadmex Error in MuPAD command: The variable is invalid. [stdlib::diff] Error in sym/diff (line 57) R = mupadmex('symobj::diff', S.s, x.s, int2str(n)); </code></pre> <p>How can df/dx be obtained in Matlab?</p>
<p>In newer versions of Matlab (I'm using R2014b) the error message is clearer:</p> <blockquote> <p>Error using <strong>sym/diff</strong> (line 26) All arguments, except for the first one, must not be symbolic functions.</p> </blockquote> <p>So, it looks like <a href="http://www.mathworks.com/help/symbolic/diff.html" rel="nofollow"><code>sym/diff</code></a> cannot take a derivative with respect to what the documentation calls an abstract or arbitrary <a href="http://www.mathworks.com/help/symbolic/symfun.html" rel="nofollow"><code>symfun</code></a>, i.e., one without a definition. This limitation is not explicitly mentioned in the documentation, but the various input patterns allude to it.</p> <p><br> <strong>Workaround 1</strong>: Simple functions, independent variable <code>t</code> only appears in differentiated symfun</p> <p>I haven't found any workaround that is particularly elegant. If <code>t</code> only appears in your variable of interest (here <code>x(t)</code>), and not on its own or in other abstract symbolic functions, you can differentiate with respect to time <code>t</code> and then cancel out the extra terms. For example:</p> <pre><code>syms t x(t) y(t) z f1 = x^2+5; f2 = x^2+z^2+5; f3 = x^2+y^2+z^2+5+t; dxdt = diff(x,t); df1 = diff(f1,t)/dxdt df2 = diff(f2,t)/dxdt df3 = diff(f3,t)/dxdt </code></pre> <p>which returns the requisite <code>2*x(t)</code> for the first two cases, but not the third, for the reasons stated above. You may need to apply <a href="http://www.mathworks.com/help/symbolic/simplify.html" rel="nofollow"><code>simplify</code></a> in some cases to fully divide out the <code>D(x)(t)</code> terms.</p> <p><br> <strong>Workaround 2</strong>: More robust, but more complicated method</p> <p>Using <a href="http://www.mathworks.com/help/symbolic/subs.html" rel="nofollow"><code>subs</code></a> multiple times, you can replace the symbolic function in question with a standard symbolic variable, differentiate, and swap it back. For example:</p> <pre><code>syms t x(t) y(t) z f3 = x^2+y^2+z^2+5+t; xx = sym('x'); df3 = subs(diff(subs(f3,x,xx),xx),xx,x) </code></pre> <p>which also returns <code>2*x(t)</code> for the third case above. But I think this is kind of an ugly hack.</p> <p>It is kind of ridiculous that Matlab can't do this â€“ Mathematica has no such problem. It appears that MuPAD itself has this limitation. You might consider <a href="https://www.mathworks.com/accesslogin/login.do?uri=%2Faccesslogin%2Fsso%2Fsaml%3Ftype%3DSFEXT_SSO%26forward%3Dcp_case_new" rel="nofollow">filing a feature request</a> with The MathWorks.</p>