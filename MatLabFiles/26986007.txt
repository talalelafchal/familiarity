Parsing out a number after a specific word appears
<p>I am trying to collect the forecasted high temperature from the National Weather Service from their text-based website. The website I am trying to pull information from can be found <a href="http://forecast.weather.gov/MapClick.php?lat=40.48622&amp;lon=-74.45181587699966&amp;unit=0&amp;lg=english&amp;FcstType=text&amp;TextType=1" rel="nofollow">here.</a></p> <p>So far I have been able to pull the first number that appears after each day. Most of the time this is the high temperature, but occasionally they will put a precipitation amount before the forecated temperature for the day. I want to find a way to pull the digits that follow the word "high". It should also be noted that sometimes they use "high near", "high around", or any other variation so it wouldn't necessarily be the next string following high.</p> <p>Below is my code. I intend to run this everyday at a certain time, so I will get the current days forecast up to six days later. If you were to run this code in the evening, you would get the next seven days of forecasted temperatures, with the first temperature actually referring to next weeks forecast. </p> <p>My end goal is to put this onto trendy, so I'm sure this would be easier to accomplish in other formats, but I want to stick straight to Matlab.</p> <pre><code>url = 'http://forecast.weather.gov/MapClick.php?lat=40.48622&amp;lon=-74.45181587699966&amp;unit=0&amp;lg=english&amp;FcstType=text&amp;TextType=1'; html = urlread(url); DayForm = 'long'; today = clock; today = today(:,3); nvalue = zeros(6,1); for i = 0:6 [~, getDay] = weekday(today+i,DayForm); target = ['&lt;b&gt;' getDay ':']; [a,b] = regexp(html,'\d'); strPos = find( a &gt; strfind(html,target),1,'first'); nvalue(i+1) = str2double(html(a(strPos):b(strPos)+1)); end </code></pre> <p>EDIT: after implenting the answer, here is my updated code:</p> <pre><code>url = 'http://forecast.weather.gov/MapClick.php?lat=40.48622&amp;lon=-74.45181587699966&amp;unit=0&amp;lg=english&amp;FcstType=text&amp;TextType=1'; html = urlread(url); fcast = zeros(7,1); target = 'with\sa\shigh\s\w*\s?([0-9]+)'; [~,b] = regexp(html,target); for i = 1:7 fcast(i) = str2double(html(b(i)-1:b(i))); end </code></pre>
<p>This is slightly complicated by the fact that they also occasionally say things like "winds as high as 32 mph". The following works, though there may be more edge cases that aren't accounted for:</p> <pre><code>high\D+(\d+)\D(?!mph) </code></pre> <p>This searches for the word 'high', and then slurps all of the characters until it reaches a digit. It grabs the digits in a group, and then grabs the next non-digit character (this ensures it grabs <em>all</em> of the digits). It then uses a negative lookahead to make sure the next 3 letters aren't 'mph' (which would suggest that the number indicates a wind, rather than a temperature).</p> <p>As I said, there may be more edge cases, but it seems to work for the present web page.</p>
<p>well it seems matlab supports gnu extended regex which is limiting which means MrAzzaman answer may not work. Though he accounts for <code>mph</code> that has the word high before, the following regex should match and capture the digits you want into capture group <code>$1</code>.</p> <p><code>with\sa\shigh\s\w*\s?([0-9]+)</code></p> <p>find <code>with a high</code>, then a space then possible word, then another space followed by the captured group that contains temp.</p> <p>It should work</p>