Reading large text files with insuficient RAM in Matlab
<p>I want to read a large text file of about 2GB and perform a series of operations on that data. Following approach</p> <pre><code> tic fid=fopen(strcat(Name,'.dat')); C=textscan(fid, '%d%d%f%f%f%d'); fclose(fid); %Extract cell values y=C{1}(1:Subsampling:end)/Subsampling; x=C{2}(1:Subsampling:end)/Subsampling; %... Reflectanse=C{6}(1:Subsampling:end); Overlap=round(Overlap/Subsampling); </code></pre> <p>fails immediatly after reading C (<code>C=textscan(fid, '%d%d%f%f%f%d');</code>) with a strange peak in my memory usage: <img src="https://i.stack.imgur.com/CMHz9.png" alt="enter image description here"> What would be the best way to import a file of this size? Is there a way to use <code>textscan()</code> to read individual parts of a text file, or are there any other functions better suited for this task? </p> <p>Edit: Every column in the textscan contains an information field information for 3D-Points:</p> <pre><code>width hieght X Y Z Grayscale 345 453 3.422 53.435 0.234 200 346 453 3.545 52.345 0.239 200 ... % and so on for ~40 millon points </code></pre>
<p>If you can process each row individually then the following code will allow you to do that. I've included <code>start_line</code> and <code>end_line</code> if you want to specify a block of data.</p> <pre><code>headerSpec = '%s %s %s %s %s %s'; dataSpec = '%f %f %f %f %f %f'; fid=fopen('data.dat'); % Read Header names = textscan(fid, headerSpec, 1, 'delimiter', '\t'); k = 0; % specify a start and end line for getting a block of data start_line = 2; end_line = 3; while ~feof(fid) k=k+1; if k &lt; start_line continue; end if k &gt; end_line break; end % get data C = textscan(fid, dataSpec, 1, 'delimiter', '\t'); row = [C{1:6}]; % convert data from cell to vector % do what you want with the row end fclose(fid); </code></pre> <p>There is the possibility of reading in the entire file, but this will depend on the amount of memory you have available and if matlab has any restrictions in place. This can be seen by typing <code>memory</code> at the command window.</p>