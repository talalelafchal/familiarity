Matlab:Tag elements in matrix
<p>I am very new in <code>MATLAB</code>. Thanks for your help in this:</p> <p>I have a <code>600 x 4</code> matrix with values between <code>0 and 1.</code> </p> <p>For example:</p> <pre><code>*0.1 0.2 0.3 0.4 0.2 0.3 0.4 0.1 0.3 0.4 0.1 0.2 0.4 0.2 0.3 0.1* </code></pre> <p>I need to tag the elements with the name of each column, something similar to this:</p> <pre><code>*test1(0.1) test2(0.2) test3(0.3) test4(0.4) test1(0.2) test2(0.3) test3(0.4) test4(0.1) test1(0.3) test2(0.4) test3(0.1) test4(0.2) test1(0.4) test2(0.2) test3(0.3) test4(0.1)* </code></pre> <p>and still be able to sort the values of each column in descending order to get this:</p> <pre><code>*test1(0.1) test2(0.2) test3(0.3) test4(0.4) test4(0.1) test1(0.2) test2(0.3) test3(0.4) test3(0.1) test4(0.2) test1(0.3) test2(0.4) test4(0.1) test2(0.2) test3(0.3) test1(0.4)* </code></pre> <p>I need tags to be displayed with the values, any format: <code>A(0.1), A/0.1, A-0.1</code>, etc</p>
<p>First of all, it is easier to sort numbers than to sort letters. To sort the number array you could do the following</p> <pre><code>A = [ ... ]; % define the matrix A = sort(A,2,'ascend'); % sort A along the 2nd dimension of the matrix (the row) in ascending order </code></pre> <p>You could record the index of the sort permutation by adding a second output to the function <code>sort</code>.</p> <pre><code>[A,I] = sort(A,2,'ascend'); </code></pre> <p>So matrix <code>I</code> contains the recipe to map the unsorted matrix into the sorted matrix. You can permute the elements in other matrices with the same size so that it is ordered exactly like the matrix <code>A</code>. For example</p> <pre><code>B = [ ... ]; % define a new matrix with the same size as A B = B(I); </code></pre> <p>Using this method, we can also perform the same permutation on a cell of strings. For example</p> <pre><code>C = { ... }; % define a cell of strings with the same size as A C = C(I); </code></pre> <p>So let's create the cell of strings for your problem. First we need a function that takes a number and return a formatted string. A built-in function is available to do a simple job. It is the <code>sprintf</code>. For example</p> <pre><code>sprintf('Hello(%.1f)',.4) </code></pre> <p>will return a string</p> <pre><code>Hello(0.4) </code></pre> <p>To apply the conversion into string for every element in the matrix A, you can do:</p> <pre><code>C = arrayfun(@(x)sprintf('Hello(%.1f)',x),A,'UniformOutput',false); </code></pre> <p>The cell array <code>C</code> contains the formatted string of each element in <code>A</code>. In your problem, you need a more sophisticated method to format the string differently according to which column the element is in. You can create a new function defined in a custom .m file to perform this task.</p> <p>Anyway, suppose that is done, finally to sort the cell <code>C</code>, you just enter:</p> <pre><code>C = C(I); </code></pre> <p>That's all.</p>