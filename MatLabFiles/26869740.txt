Cell array of strings not fully sorted?
<p>I have the following Matlab function I'm working on:</p> <pre><code>function [data] = ReadAndCountWords(fileName) fid = fopen(fileName); data = textscan(fid, '%s'); data = sort(data{1}); for i = 1:length(data) str = data{i}; str = lower(str(isstrprop(str, 'alpha'))); disp(str); end fclose(fid); end </code></pre> <p>Right now I am passing in a text document containing <em>The Gettysburg Address</em>, and I want to print out the words contained in that file in order of how many times the word occurs. To get the word count I figured I would sort the cell array and then do a string comparison within my loop since it seemed simple enough. So I tried sorting my cell array with both <code>sortrows()</code> and <code>sort()</code>, but the results are the same:</p> <pre><code>but four god it it it now the the we we a a a a a a a above add advanced ago all altogether and and and and and and any are are are as battlefield be be before birth brave brought but by can can cannot cannot cannot cause civil come conceived conceived consecrate consecrated continent created dead dead dead dedicate dedicate dedicated dedicated dedicated dedicated detract devotion devotion did died do earth endure engaged equal far far fathers field final fitting for for for for for forget forth fought freedom from from full gave gave government great great great ground hallow have have have have have here here here here here here here here highly honored in in in in increased is is is it it larger last liberty little live lives living living long long measure men men met might nation nation nation nation nation never new new nobly nor not not note of of of of of on on or or our our people people people perish place poor portion power proper proposition rather rather remaining remember resolve resting say score sense seven shall shall shall should so so so struggled take task testing that that that that that that that that that that that that that the the the the the the the the the their these these they they they this this this this those thus to to to to to to to to under unfinished us us us vain war war we we we we we we we we what what whether which which who who who will work world years </code></pre> <p>Why are those first 11 words out of order? I did some research on it and couldn't find anyone having the same problem, and <a href="http://www.mathworks.com/help/matlab/ref/sort.html#bt9cbej-1" rel="nofollow">the Matlab documentation seems to be doing it the same way I am</a>. Any suggestions?</p>
<p>Some of the words start with uppercase letters. You call the sort before the "lower" command then display the words. If you put a breakpoint at line 4, you can inspect the sorted data:</p> <pre><code>'But,' 'Fourscore' 'God,' 'It' 'It' 'It' 'Liberty,' 'Now' 'The' 'The' 'We' 'We' 'a' 'a' 'a' 'a' 'a' 'a' 'a' 'above' ... </code></pre> <p>Which is sorted correctly based on the case of the words.</p>
<p>You're converting the strings to lower-case <strong><em>after</em></strong> you sort them. Those 11 words are the ones capitalized in the original text, thus they come at the front of the list.</p>
<p>To count number of occurrences you can also use <a href="http://es.mathworks.com/help/matlab/ref/unique.html" rel="nofollow"><code>unique</code></a> as follows:</p> <pre><code>data = {'and' 'And, ' 'cut' 'be.' 'dear' 'be' 'eggs' 'egg'}; %// example data data = regexprep(lower(data), '[^a-z]', ''); %// make lower and remove special chars [words, ~, labels] = unique(data); count = histc(labels, 1:max(labels)); </code></pre> <p>Result:</p> <pre><code>words = 'and' 'be' 'cut' 'dear' 'egg' 'eggs' count = 2 2 1 1 1 1 </code></pre>