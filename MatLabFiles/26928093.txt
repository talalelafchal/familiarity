Calculate mean data based on an index of different size
<p>I need to calculate the mean over time series normalized to a certain event (time 0). first column = time second column = data of interest</p> <pre><code>A = [ -5 1 ; -4 2 ; -3 3 ; -2 4 ; -1 5 ; 0 6 ; 1 7 ; 2 8 ; 3 9 ; 4 10 ; 5 11 ]; B = [ -3 7 ; -2 6 ; -1 5 ; 0 4 ;1 3 ; 2 2 ; 3 1 ]; </code></pre> <p>result should like something like C= [-5 NaN ; -4 NaN ; -3 5 ; -2 5 ; -1 5 ; 0 5 ; 1 5 ; 2 5 ; 3 5 ; 4 NaN ; 5 NaN ]; </p> <p>I have put all data in one matrix so that the end of part B is filled with zeros. I thought about using find the index of the longest column and than mean over all columns +1 where the index was found. Is not working yet. </p> <p>How can I do this as data are not the same length and index varies? Thanks, Stefan</p>
<p>Generic solution for an arbitrary number of matrices, using <a href="http://es.mathworks.com/help/matlab/ref/accumarray.html" rel="nofollow"><code>accumarray</code></a> with an <a href="http://es.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html" rel="nofollow">anonymous function</a>:</p> <pre><code>A = [ -5 1 ; -4 2 ; -3 3 ; -2 4 ; -1 5 ; 0 6 ; 1 7 ; 2 8 ; 3 9 ; 4 10 ; 5 11 ]; B = [ -3 7 ; -2 6 ; -1 5 ; 0 4 ;1 3 ; 2 2 ; 3 1 ]; matrices = {A, B}; %// put here as many matrices as needed M = vertcat(matrices{:}); n = numel(matrices); result = accumarray(M(:,1)-min(M(:,1))+1, M(:,2), [],... @(x) mean([x; NaN(n-numel(x),1)]), NaN); </code></pre> <p>This assumes that if all matrices have one intermediate value missing in the first column you also want that filled with <code>NaN</code>. If you want to skip those values you can use</p> <pre><code>result = accumarray(M(:,1)-min(M(:,1))+1, M(:,2), [],... @(x) mean([x; NaN(n-numel(x),1)]), inf); result = result(~isinf(result)); </code></pre>
<p>You can use the following code:</p> <pre><code>[~,i1,i2] = intersect(A(:,1),B(:,1)); B_temp = [A(:,1) nan(size(A,1),1)]; B_temp(i1,:) = B(i2,:); C = [A(:,1) mean([A(:,2) B_temp(:,2)],2)]; </code></pre> <p>You can use what ever interpolation you want to have, but for two data points, <code>mean</code> should be okay. The output is:</p> <pre><code>C = -5 NaN -4 NaN -3 5 -2 5 -1 5 0 5 1 5 2 5 3 5 4 NaN 5 NaN </code></pre>