Transcribing ASCII values into Images
<p>So, this is a confusing problem I am not entirely sure I understand. What I have to do is take ASCII values and create grayscale art with them in a .txt file. My two inputs are the picture and the string of letters I have to make....pretty. So this is what my function header entails:</p> <pre><code>Function Name: image2ascii Inputs (2): - (char) the file name of an image to analyze - (char) a string of characters to use to make ASCII art Output Files (1): - a .txt file that resembles the original image </code></pre> <p>I am given a set of guidelines: </p> <pre><code>1) Convert the input image to grayscale by averaging the values of the red, blue, and green layers. Do not truncate the values! 2) For each 8x4 block in the grayscale image, compute the average intensity (I) of all 32 pixels and round it to the nearest integer. 3) Map these values to characters using the following scheme: 0 &lt;= I &lt;= 31 : input_string(1) 32 &lt;= I &lt;= 63 : input_string(2) 64 &lt;= I &lt;= 95 : input_string(3) 96 &lt;= I &lt;= 127 : input_string(4) 128 &lt;= I &lt;= 159 : input_string(5) 160 &lt;= I &lt;= 191 : input_string(6) 192 &lt;= I &lt;= 223 : input_string(7) 224 &lt;= I &lt;= 255 : input_string(8) 4) Print these characters to a .txt file with the same filename as the input image. There should be a newline character at the end of each line. </code></pre> <p>I did number 1! So I am getting somewhere. I am unsure about the 8x4 block. I was thinking of doing a subplot.... As for number 3....I figured I would do an if statement for those, but I am a little confused. Number 4....I will get to that once I understand a little better what to do for everything else. </p> <pre><code>Notes: - The input image will always be evenly divisible into 8x4 blocks - The input string will always have 8 characters </code></pre> <p>Test case:</p> <pre><code>image2ascii('abe.jpg', '@8XYv:. '); =&gt; output file named 'abe.txt' identical to 'abe_soln.txt' </code></pre> <p>Ol' Abe : <a href="http://tinypic.com/r/wb4g42/8" rel="nofollow">http://tinypic.com/r/wb4g42/8</a></p> <p><img src="http://oi62.tinypic.com/wb4g42.jpg" alt=""></p> <p>I will post the solution at the bottom...because it's huge</p> <p>This is what I have so far:</p> <pre><code>function image2ascii(pic, str) %// Reads in the image Img = imread(pic); %// Extracts the color layers Red = Img(:,:,1); Green = Img(:,:,2); Blue = Img(:,:,3); %// Finds the size [r,c,l] = size(Img); %// Grayscales the image gray = uint8((double(Red)+ double(Green)+ double(Blue))./3); Red = gray; Green = gray; Blue = gray; %// Creates a grayscaled image Grayimg = cat(3,Red,Green,Blue); %//Makes it into 8x4 blocks imgrows = r ./ 8; imgcols = c ./ 4; end </code></pre> <p>abe_soln txt:</p> <pre><code>YYvvvvvvvvvvvvYX888XXXXXXX8888888@@@@@8XYvv::::::::::::::::: vvvvvvvvvvvvX8@@@@@@@@@@@@@@@@@@@@@@@@@@@8Yv:::::::::::::::: vvvvvvvvvvv8@@@@@@@@8@@@@@@@@@@@@@@@@@@@@@@X:::..:.::::::::: vvvvvvvvY8@@@@@@8XXX88@@@@@@@@@@@@@@@@@@@@@@Y::......:::..:. vvvvvvX@8@@@@@@@8888888@@@@@@@@@@@@@@@@@@@@@8XXXXYYvv::..... vvvvv8@@@@@@@@8888@@@@@@@@@@@@@@@@@@@8888@@@@@@@@@@88XXYv... vvvvX@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8Xv:::..vX8@@@@@@@8888Xv:. vvvv@@@@@@@@@@@@@8888@@@@@@@8888XYv:.. .v8@@8888888XYv: vvv8@@@@@@@@@8Yv::::v:::::::::.... ..vX88XY8@8XYv:: vvv@@@@@@@XY:..... ...vXYYX@@@X:... vvX@@@@@8v. ....:vvY88888v... vY@@@@88v. .......vXX88XXXY... vX@@@88Y. .......::.vYX8XX8XY. . v8@@8XXv... .. ..........::::vXYX88X8: v@@XXXXv... ....::::v8Y8XX888: v8888XYv... ...:::vvYXXX@8X8@X. vY8@8YXY:.. ..:::vvYYYX888@8@@X: vv8@@X8X:... . ..:vvvYYXX88XYvYYYX@@@@@88XX v8@@@88X::...:vYYYYXXXXYYv:..:::vYX@@@@@@@@@@88XYYX8@@8XXYXX vY8@8@@Xv:::YXX88@@@@@@@@XXv..vY8@@@@@@8888@@@88YYX8@8YXXYYY vX@@@@@8Y:.:Y8@@@@@@@@@@8XY: .vv88@@@88888888888XYY888X88YYY Y@XYY88XY:.vX8@8888@8X@8XX:: .YXXYvv::vvYXYYYYYvvY8@@8XYYY YXvvvYvYY:.vYY:.:::vvvv::... .vYvv:::::::::v:::vvY8@@8XYvv vYvvvY88Y:...........::. vYYv::vv::::::..:vvX888XXvv: vv:::Y88Y::. ........ :vYYv::...:....::vY@@8XYvvv. vvvv:vX8Yv:.. .... .. .vYXv:........:vvY8@@8Yv::: vvvvvvv888Y::....... .. .vXYYv:....::vYYXX@@@Xvv:: vvvv:::v88@Xv::::.. .v: ..::vYXXYYYXv:.:vYXX88@@@8YYv:. vvvvv:.::X@@XYYvv:...vYv.:XX888@@@@@XvvYv:vvXXXX88@Yv:.. vvvvvv:::v@@@XYvvv::vXv ..:YXY888XYv::vYvYXYXXX88Y: vvvvvv:::::X88XYYY:vX: .v.:YYvvvvvvvYYXYXXXX8Y.. vvvvvv:::::YXXXXYYvv........::..vvvvvYYXYYYY8YYXXXXv:.. vvvvvv::::vXXXXYYY::Y8Y:::vvvvvYYYYXXX88XXvY888XX8Xv:. vvvvvvv:::YY88XXYYvvXv.:vvvvvvvvYYXX8XYYYvvX888888XXv. YYvvvvvvv::YX88X8XXXXYvv:vY88X8X888XXXX8XX88888888vv. Yvvvvvvv::::YX8888X8@@8@88v:::vYYYYX8@88@888@88888Y. YYYvvvvv:::::Y8@@@@@@888@8XYYYXXXXX88@@8@@@@@@@@XXv. YYYvvvvvv::::vX@@@@@@@@@@@8XX888X8@@@@@@@@@@@@@8Yv:. YYYvvvvvvv::::v8@@@@@@@@@@@X@@888@@@@@@@@@@@@@Yv:YY. YYYvvvvvvvvv:::vY8@@@@@@@@@@@@@@@@@@@@@@@@@8v:. .@Y. YYYYvvvvvvvv:::v v@@@@@@@@@@@@@@@@@@@@@@@@8Y. X@@8: YYYYvvvvvvv::v8Y Y@8@@@@@@@@@@@@@@@@@XYv::. Y@@@@@Y. YYYYvvvvvvv:Y@@. :XX8@@@@@@@@@@@@XY:. :@@@@@@@8v. . YYYvvvvvvvvX@@X vYYXYX88@@8Xv..::::.. .@@@@@@@@@@8Yv YYvvvvvvvv8@@@v ...:Y8@@@@@@8XYY@@@@@8@@@@@@@@ YYvvvvvvv8@@@@v :YXXYvvvvvvYX88@@@@@8XXXX8@@@@@@888888888@ YYYYYX8@@@@@@@Y Y@@@@@@@@@@@@@@@@@88XYYYYYYYY8XYYX8888888888 YYX8@@@@@@@@@@@@@@@@@XXYYXX88XXXXXXYYXvvYYYvY8@XvvX888888888 @@@@@@@@@@@@@@@X8@@@8XYYXX88XXXYYYXXYXYvYY8@8XXvY8@@88888888 @@@@@@@@@@@@@@Y vXXXYX8@@@8888XXXXXY88@XYYvvvY@@@@@@888888 </code></pre>
<p>Cool problem!</p> <p>Given how much MATLAB knowledge you know so far, we can't use any fancy image processing functions... even though I would love to use them. We have no choice but to do this with loops.</p> <p>The first part of what you have is correct. You read in the image, extract all of the planes, then average all of the planes together. What you need to do next is open up a file where you're going to write your ASCII art to. We're going to name this file to be the same as the input image's name. Once you open up this file, then we need to extract 8 x 4 blocks (distinct), compute the mean intensity and round. Once we do this, we use the intensity to figure out which character from the input string of characters we need. </p> <p>We notice that each valid range is a multiple of 32. Therefore, we simply take our intensity and divide by 32. This will tell us which index we need to go into. Note that when you divide by 32, we only need the whole number when dividing, as this will tell us which <strong>multiple</strong> of the range we are in. As such, you'll need to take the <code>floor</code>. Once you do this, we will get a value from 0 - 7. To go from 1 - 8, as MATLAB indexes arrays starting at 1, we simply add 1. We can use this index to index into <code>index_string</code> to extract the correct character to write to file.</p> <p>We use <a href="http://www.mathworks.com/help/matlab/ref/fprintf.html" rel="nofollow"><code>fprintf</code></a> to print a single character, which is the character from <code>input_string</code> into the file. After each row, we need to put in a manual carriage return to go to the next row. We repeat this until we reach the last block of your image, and we close the file.</p> <p>Without further ado:</p> <pre><code>function [] = image2ascii(pic, input_string) %// Reads in the image Img = imread(pic); %// Extracts the color layers Red = Img(:,:,1); Green = Img(:,:,2); Blue = Img(:,:,3); %// Grayscales the image gray = uint8((double(Red)+ double(Green)+ double(Blue))/3); %// Open up a file for reading. Call it the same as the image name %// but as a text file fid = fopen([pic(1:end-4) '.txt'], 'w'); %// For each 8 x 4 block we have for r = 1 : 8 : size(Img,1) for c = 1 : 4 : size(Img,2) %// Extract the block block = gray(r:r+7,c:c+3); %// Find the average intensity and round meanBlock = round(mean(block(:))); %// Figure out which character to output index = floor(meanBlock/32) + 1; fprintf(fid,'%c', input_string(index)); end %// Go to the next row fprintf(fid,'\n'); end %// Close the file fclose(fid); </code></pre> <hr> <p>With your example image, this is the output I get from the text file:</p> <pre><code>YYvvvvvvvvvvvvYX888XXXXXXX8888888@@@@@8XYvv::::::::::::::::: vvvvvvvvvvvvX8@@@@@@@@@@@@@@@@@@@@@@@@@@@8Yv:::::::::::::::: vvvvvvvvvvv8@@@@@@@@8@@@@@@@@@@@@@@@@@@@@@@X:::..:.::::::::: vvvvvvvvY8@@@@@@8XXX88@@@@@@@@@@@@@@@@@@@@@@Y::......:::..:. vvvvvvX@8@@@@@@@8888888@@@@@@@@@@@@@@@@@@@@@8XXXXYYvv::..... vvvvv8@@@@@@@@8888@@@@@@@@@@@@@@@@@@@8888@@@@@@@@@@88XXYv... vvvvX@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8Xv:::..vX8@@@@@@@8888Xv:. vvvv@@@@@@@@@@@@@8888@@@@@@@8888XYv:.. .v8@@8888888XYv: vvv8@@@@@@@@@8Yv::::v:::::::::.... ..vX88XY8@8XYv:: vvv@@@@@@@XY:..... ...vXYYX@@@X:... vvX@@@@@8v. ....:vvY88888v... vY@@@@88v. .......vXX88XXXY... vX@@@88Y. .......::.vYX8XX8XY. . v8@@8XXv... .. ..........::::vXYX88X8: v@@XXXXv... ....::::v8Y8XX888: v8888XYv... ...:::vvYXXX@8X8@X. vY8@8YXY:.. ..:::vvYYYX888@8@@X: vv8@@X8X:... . ..:vvvYYXX88XYvYYYX@@@@@88XX v8@@@88X::...:vYYYYXXXXYYv:..:::vYX@@@@@@@@@@88XYYX8@@8XXYXX vY8@8@@Xv:::YXX88@@@@@@@@XXv..vY8@@@@@@8888@@@88YYX8@8YXXYYY vX@@@@@8Y:.:Y8@@@@@@@@@@8XY: .vv88@@@88888888888XYY888X88YYY Y@XYY88XY:.vX8@8888@8X@8XX:: .YXXYvv::vvYXYYYYYvvY8@@8XYYY YXvvvYvYY:.vYY:.:::vvvv::... .vYvv:::::::::v:::vvY8@@8XYvv vYvvvY88Y:...........::. vYYv::vv::::::..:vvX888XXvv: vv:::Y88Y::. ........ :vYYv::...:....::vY@@8XYvvv. vvvv:vX8Yv:.. .... .. .vYXv:........:vvY8@@8Yv::: vvvvvvv888Y::....... .. .vXYYv:....::vYYXX@@@Xvv:: vvvv:::v88@Xv::::.. .v: ..::vYXXYYYXv:.:vYXX88@@@8YYv:. vvvvv:.::X@@XYYvv:...vYv.:XX888@@@@@XvvYv:vvXXXX88@Yv:.. vvvvvv:::v@@@XYvvv::vXv ..:YXY888XYv::vYvYXYXXX88Y: vvvvvv:::::X88XYYY:vX: .v.:YYvvvvvvvYYXYXXXX8Y.. vvvvvv:::::YXXXXYYvv........::..vvvvvYYXYYYY8YYXXXXv:.. vvvvvv::::vXXXXYYY::Y8Y:::vvvvvYYYYXXX88XXvY888XX8Xv:. vvvvvvv:::YY88XXYYvvXv.:vvvvvvvvYYXX8XYYYvvX888888XXv. YYvvvvvvv::YX88X8XXXXYvv:vY88X8X888XXXX8XX88888888vv. Yvvvvvvv::::YX8888X8@@8@88v:::vYYYYX8@88@888@88888Y. YYYvvvvv:::::Y8@@@@@@888@8XYYYXXXXX88@@8@@@@@@@@XXv. YYYvvvvvv::::vX@@@@@@@@@@@8XX888X8@@@@@@@@@@@@@8Yv:. YYYvvvvvvv::::v8@@@@@@@@@@@X@@888@@@@@@@@@@@@@Yv:YY. YYYvvvvvvvvv:::vY8@@@@@@@@@@@@@@@@@@@@@@@@@8v:. .@Y. YYYYvvvvvvvv:::v v@@@@@@@@@@@@@@@@@@@@@@@@8Y. X@@8: YYYYvvvvvvv::v8Y Y@8@@@@@@@@@@@@@@@@@XYv::. Y@@@@@Y. YYYYvvvvvvv:Y@@. :XX8@@@@@@@@@@@@XY:. :@@@@@@@8v. . YYYvvvvvvvvX@@X vYYXYX88@@8Xv..::::.. .@@@@@@@@@@8Yv YYvvvvvvvv8@@@v ...:Y8@@@@@@8XYY@@@@@8@@@@@@@@ YYvvvvvvv8@@@@v :YXXYvvvvvvYX88@@@@@8XXXX8@@@@@@888888888@ YYYYYX8@@@@@@@Y Y@@@@@@@@@@@@@@@@@88XYYYYYYYY8XYYX8888888888 YYX8@@@@@@@@@@@@@@@@@XXYYXX88XXXXXXYYXvvYYYvY8@XvvX888888888 @@@@@@@@@@@@@@@X8@@@8XYYXX88XXXYYYXXYXYvYY8@8XXvY8@@88888888 @@@@@@@@@@@@@@Y vXXXYX8@@@8888XXXXXY88@XYYvvvY@@@@@@888888 </code></pre>