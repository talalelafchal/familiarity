Perl Script to remove files older than a year
<p>I am trying to make a script which will delete files older than a year. </p> <p>This is my code:</p> <pre><code>#!/usr/bin/perl $files = ".dat|.exe"; @file_del = split('\|',$files); print "@file_del"; $dates = "365|365|365|365"; @date_del = split('\|',$dates); if($#date_del == 0){ for $i (@file_del){ my $f = `find \"/Users/ABC/Desktop/mydata\" -name *$i -mtime +date[0]`; print "$f"; } } else{ for $i (0..$#file_del){ my $f = `find \"/Users/ABC/Desktop/mydata\" -name *$file_del[$i] -mtime +$date_del[$i]`; print "$f"; } } </code></pre> <p>Issues I am facing:</p> <ol> <li>It is not detecting .txt files, otherwise .data,.exe,.dat etc it is detecting.</li> <li>Also -mtime is 365. But a leap year(366 days) I have to change my script. </li> </ol>
<pre><code>$myDir = "/Users/ABC/Desktop/mydata/"; $cleanupDays = 365 $currentMonth = (localtime)[4] + 1; $currentyear = (localtime)[5] + 1900; if ($currentMonth &lt; 3) { $currentyear -= 1; } if( 0 == $currentyear % 4 and 0 != $currentyear % 100 or 0 == $currentyear % 400 ) { $cleanupDays += 1; } $nbFiles = 0; $runDay = (time - $^T)/86400; # Number of days script is running opendir FH_DIR, $myDir or die "$0 - ERROR directory '$myDir' doesn't exist\n"); foreach $fileName (grep !/^\./, (readdir FH_DIR)) { if (((-M "$myDir$fileName") + $runDay) &gt; $cleanupDays) { unlink "$myDir$fileName" or print "ERROR:NOT deleted:$fileName "; $nbFiles++; } } closedir FH_DIR; print "$nbFiles files deleted\n"; </code></pre>
<p>Use the brilliant <a href="https://metacpan.org/pod/Path::Class" rel="nofollow">Path::Class</a> to make life easy:</p> <pre><code>use Modern::Perl; use Path::Class; my $dir = dir( '/Users', 'ABC', 'Desktop', 'mydata' ); $dir-&gt;traverse( sub { my ( $child, $cont ) = @_; if ( not $child-&gt;is_dir and $child-&gt;stat ) { if ( $child-&gt;stat-&gt;ctime &lt; ( time - 365 * 86400 ) ) { say "$child: " .localtime( $child-&gt;stat-&gt;ctime ); # to delete: # unlink $child; } } return $cont-&gt;(); } ); </code></pre>
<p>You can also use the command <code>find2perl</code>. Like:</p> <pre><code>find2perl . -mtime -365 -exec rm {} \; </code></pre> <p>What will produce a perl script to use the <code>File::Find</code> - e.g.:</p> <pre><code>use strict; use File::Find (); use vars qw/*name *dir *prune/; *name = *File::Find::name; *dir = *File::Find::dir; *prune = *File::Find::prune; sub wanted; File::Find::find({wanted =&gt; \&amp;wanted}, '.'); exit; sub wanted { my ($dev,$ino,$mode,$nlink,$uid,$gid); (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) &amp;&amp; (int(-M _) &lt; 365) &amp;&amp; (unlink($_) || warn "$name: $!\n"); } </code></pre>