Perl sharing variables between threads compilation error
<p>I think i shouldn't be getting this error, but since I am getting it, I am obviously wrong. The situation is very simple: Share one variable between N threads and have them increment it by one.</p> <p>The code is pretty short and straight forward:</p> <pre><code>use threads; use threads::shared; use strict; sub Handler() { my $shared_var : shared = 1000; my @threads; push @threads, thread-&gt;new(\&amp;PrintGreeting); $_-&gt;join for @threads; } sub PrintGreeting() { $shared_var++; print "hello, world $shared_var \n"; } Handler(); </code></pre> <p>The error I am getting is:</p> <pre><code>Global symbol "$shared_var" requires explicit package name at /home/path/tosource/program.pl line 15. </code></pre> <p>Line 15 is the line where I increment the variable.</p> <p>I searched, but I couldn't find someone with the same error.</p>
<p>Just because you are using threads doesn't mean the rest of Perl's rules are thrown out of the window.</p> <p>You define <code>my $shared_var</code> in <code>Handler</code> but try to use it in <code>PrintGreeting</code>. That wouldn't work with a normal variable and it won't work with one shared between threads either. Basic variable scoping.</p> <p>Perhaps you meant to decalre a package-level (global) variable instead?</p>