Perl SFTP really really slow
<p>I'm using the perl Net:SSH2 library to do SFTP. It works well enough but is super slow. It starts off being 7x slower than the link speed (something I could handle) but pretty much as soon as it has transferred 2MB of data it drops to being 1000x slower. Here's a cut down version of my code. I used this Linux command to create a 10M file of random data <code>dd if=/dev/urandom of=10M.dat bs=1M count=10</code>. For anyone who would like to run the code please enter details for server, user, password etc.</p> <pre><code>#!/usr/bin/perl use strict; use warnings; use Fcntl ('O_WRONLY', 'O_CREAT'); use Net::SSH2; use Time::HiRes qw(gettimeofday); my $server = 'myserver'; my $username = 'myusername'; my $password = 'mypassword'; my $remoteFile = 'delme.dat'; my $localFile = '10M.dat'; my $ssh = Net::SSH2-&gt;new(); $ssh-&gt;connect($server) or die('Failed to connect to remote server for sftp'); $ssh-&gt;auth_password($username, $password); $ssh-&gt;auth_ok() or die('Invalid username or password'); my $sftp = $ssh-&gt;sftp() or die('Ahhh!!'); open(my $localHandle, '&lt;', $localFile) or die($!); my $remoteHandle = $sftp-&gt;open($remoteFile, O_WRONLY | O_CREAT) or die($sftp-&gt;error()); my $tran = 0; my $t = gettimeofday(); while(my $line = &lt;$localHandle&gt;) { print $remoteHandle $line; $tran += length($line); my $newTime = gettimeofday(); if($newTime - $t &gt; 1) { print 'Speed is ' . ($tran / ($newTime - $t)) . "B/sec\n"; $t = $newTime; $tran = 0; } } close($remoteHandle); close($localHandle); </code></pre>
<p>I hope you are facing the Session Re-Keying issue by OpenSSH as mentioned in the below link. </p> <p><a href="http://crashingdaily.wordpress.com/2007/02/20/a-workaround-for-netsftp-hanging-on-large-transfers/" rel="nofollow">http://crashingdaily.wordpress.com/2007/02/20/a-workaround-for-netsftp-hanging-on-large-transfers/</a></p> <p>The link has a fix for this problem as well. </p>
<p>Support for SFTP in Net::SSH2/libssh2 is suboptimal.</p> <p>Use Net::SFTP::Foreign instead (with the Net::SSH2 backend Net::SFTP::Foreign::Backend::Net_SSH2 if you are on Windows).</p>