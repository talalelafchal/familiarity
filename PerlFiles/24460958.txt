all possible sub strings matching the regex
<p>I have a string</p> <pre><code>&lt;start&gt;&lt;tag1&gt;&lt;tag2&gt;&lt;tag3&gt;&lt;end&gt; </code></pre> <p>if I have a regex <code>&lt;.*end&gt;</code> it matches the complete string and stops. Is there some way so that it gives all the matching substrings ike </p> <pre><code>&lt;end&gt; &lt;tag3&gt;&lt;end&gt; &lt;tag2&gt;&lt;tag3&gt;&lt;end&gt; &lt;tag1&gt;&lt;tag2&gt;&lt;tag3&gt;&lt;end&gt; </code></pre>
<p>Yes, you must wrap your pattern in a lookahead (this is the only way to obtain overlapped results):</p> <pre><code>(?=(&lt;.*end&gt;)) </code></pre> <p>The result is in the capture group 1.</p>
<p>Use a lookahead assertion to find the matches.</p> <p>It's often a good idea to avoid strictly zero width expressions, so add sub expression outside the assertion to gobble a single character.</p> <pre><code>(?=(&lt;.*&lt;end&gt;)). </code></pre> <p>Demonstrated below:</p> <pre><code>my $string = '&lt;start&gt;&lt;tag1&gt;&lt;tag2&gt;&lt;tag3&gt;&lt;end&gt;'; while ($string =~ /(?=(&lt;.*end&gt;))./g) { print $1, "\n"; } </code></pre> <p>Outputs:</p> <pre><code>&lt;start&gt;&lt;tag1&gt;&lt;tag2&gt;&lt;tag3&gt;&lt;end&gt; &lt;tag1&gt;&lt;tag2&gt;&lt;tag3&gt;&lt;end&gt; &lt;tag2&gt;&lt;tag3&gt;&lt;end&gt; &lt;tag3&gt;&lt;end&gt; &lt;end&gt; </code></pre>