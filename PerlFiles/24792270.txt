Following links using WWW::Mechanize
<p>I am trying to access an internal webpage to start and stop application using WWW::Mechanize. So far I am able to log in to the application successfully. My next action item is to identify a particular service from list of services and stop them. </p> <p>The problem I am facing is I am unable to follow the link on the webpage. After looking at the HTML and link object, it is evident that there isn't a URL but an on click event. </p> <p>Here is snippet of HTML</p> <pre><code>&lt;ul&gt; &lt;li&gt; &lt;a href="#" id="j_id_id1:j_id_id9:2:j_id_id10" name="j_id_id1:j_id_id9:2:j_id_id10" onclick="A4J.AJAX.Submit('j_id_id1',event,{'similarityGroupingId':'j_id_id1:j_id_id9:2:j_id_id10','parameters':{'j_id_id1:j_id_id9:2:j_id_id10':'j_id_id1:j_id_id9:2:j_id_id10','ajaxSingle':'j_id_id1:j_id_id9:2:j_id_id10'} ,'containerId':'j_id_id0'} );return false;" style="color:#3BB9FF;"&gt;servicename&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre> <p>The link object dump is </p> <pre><code>$VAR1 = \bless( [ '#', 'servicename', 'j_id_id1:j_id_id9:2:j_id_id10', 'a', bless( do{\(my $o = 'http://blah.services.jsf')}, 'URI::http' ), { 'href' =&gt; '#', 'style' =&gt; 'color:#3BB9FF;', 'name' =&gt; 'j_id_id1:j_id_id9:2:j_id_id10', 'onclick' =&gt; 'A4J.AJAX.Submit(\'j_id_id1\',event,{\'similarityGroupingId\':\'j_id_id1:j_id_id9:2:j_id_id10\',\'parameters\':{\'j_id_id1:j_id_id9:2:j_id_id10\':\'j_id_id1:j_id_id9:2:j_id_id10\',\'ajaxSingle\':\'j_id_id1:j_id_id9:2:j_id_id10\'} ,\'containerId\':\'j_id_id0\',\'actionUrl\':\'/pages/services.jsf;jsessionid=NghBSoEJZKXbWcK0uVzcHvyebl8G_zSpf_Zu4uqrLI7xosHAnheK!1108773228\'} );return false;', 'id' =&gt; 'j_id_id1:j_id_id9:2:j_id_id10' } ], 'WWW::Mechanize::Link' ); </code></pre> <p>Here is my code so far: </p> <pre><code>#!/usr/bin/perl use strict; use warnings; use Data::Dumper; use WWW::Mechanize; my $username = 'myuser'; my $password = 'mypass'; my $url = 'myinternalurl'; my $mech = WWW::Mechanize-&gt;new(); $mech-&gt;credentials($username,$password); $mech-&gt;get($url); my $link = $mech-&gt;find_link( text =&gt; 'servicename' ); #print Dumper \$link; #$mech-&gt;follow_link( url =&gt; $link-&gt;url_abs() ); $mech-&gt;get($link-&gt;url_abs()); print $mech-&gt;text(); </code></pre> <p>If I use <code>follow_link</code>, I get <code>Link not found at log_in.pl line 16.</code>. If I use <code>get</code> then I get back the same page. The problem is all these services appear to be hyperlinks but have the same url as my main url. </p> <p>Here is a pic of the webpage: </p> <p><img src="https://i.stack.imgur.com/j8Lsa.png" alt="enter image description here"></p> <p>When I manually click a service the Operations and Properties section change which allows the user to view Operation and Properties of the service they just clicked. Every service has different set of Operations and Properties. </p> <p>How should I go about do this using perl? Is WWW::Mechanize the wrong tool for this one? Can anyone please suggest a solution or an alternate perl module that could help. Installing any CPAN module is not an issue. Working with latest version of perl is not an issue either. I have just started automating with perl and currently unaware of all the modules that could get the job done. </p> <p>Looking forward to your guidance and help. </p> <p><strong>Note:</strong> If you feel there is any pertinent information, I may have missed, please leave a comment and I will update the question to add more details. I have modified proprietary information.</p>
<p>That button contains a Javascript onclick event, which will not work when using <a href="https://metacpan.org/pod/WWW::Mechanize" rel="nofollow"><code>WWW::Mechanize</code></a>.</p> <p>Per the docs:</p> <blockquote> <p>Please note that Mech does NOT support JavaScript, you need additional software for that. Please check <a href="https://metacpan.org/pod/WWW::Mechanize::FAQ#JavaScript" rel="nofollow">"JavaScript" in <code>WWW::Mechanize::FAQ</code></a> for more.</p> </blockquote> <p>One alternative that does support Javascript in a forms is <a href="https://metacpan.org/pod/WWW::Mechanize::Firefox" rel="nofollow"><code>WWW::Mechanize::Firefox</code></a>.</p>