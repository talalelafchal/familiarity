Perl syntax errors
<p>I am trying to find the syntax error, but I can't.</p> <p><strong>Error message:</strong> </p> <pre><code>syntax error at /Users/MMM/Desktop/extract2.pl line 52, near "$dbm{" syntax error at /Users/MMM/Desktop/extract2.pl line 57, near "}" Execution of /Users/MMM/Desktop/extract2.pl aborted due to compilation errors. </code></pre> <p><strong>Code:</strong> (error line marked)</p> <pre><code>#!/usr/bin/Perl #Extract the accession number and#!/usr /bin/perl #Extract the accession number and the sequence section from the records in the GenBank file #Excellence is an Endeavor of Persistence. Chance Favors a Prepared Mind #use warnings; use BeginPerlBioinfo; use strict; # Declare and initialize variables my $fh; my $record; my $dna; my $annotation; my $fields; my $dbm = ' '; my $answer; my $offset; my $LSU = '/Users/MMM/Desktop/FUNGUS/LSU.gb'; # open DBM file, creating if neccessary unless (dbmopen(my %dbm, 'GB' , 0644)) { print "Cannot open DBM file GB with mode 0644\n"; exit; } #Parse GenBank library, saving accession number and sequence in DBM file $fh = open_file($LSU); $offset = tell ($fh); while ( $record = get_next_record($fh)) { #Get accession field for this record. ($annotation, $dna) = get_annotation_and_dna($record); my %fields = parse_annotation( $annotation); my $accession = $fields { 'ACCESSION'}; # extract just the accession number and sequence from the accession field #-- remove any trailing spaces $accession =~ s/^ACCESSION\s*//; $accession =~ s/\s*$//; #store the key value of accession/offset my $dbm{$accession} = $offset; # &lt;--- ERROR #get offset for the next record $offset = tell($fh); } </code></pre>
<p>I think it has to do with lexical scope of the dbm hash.</p> <p>you open it , but it was only declared in that scope. then you declare it again on line 52.</p> <p>When you initialize variables you have</p> <pre><code>my $dbm = ' '; </code></pre> <p>which should be</p> <pre><code>my %dbm; </code></pre> <p>everywhere else you use %dbm : <strong>you don't need to re-declare it as 'my'</strong>, this should get rid of the error.</p>
<p><code>my $dbm{$accession}</code> is invalid syntax; <code>my</code> can only be used with a variable, not a hash or array subscript. There isn't even any need to use <code>my</code> with a subscript; just write <code>$dbm{$accession} = $offset;</code>.</p>