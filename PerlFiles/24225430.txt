Recommended tools for benchmarking Ruby and Perl
<p>I want to compare the execution time for mathematical equations for different dynamic, interpreted programming languages like Ruby, Perl, and Python. </p> <p>In Python, there is the convenient <code>timeit</code> module, which allows me to time, where I can simply time for, e.g., a least squares fit (<code>python_lstsqr(x,y)</code>) via </p> <pre><code>min(timeit.Timer('python_lstsqr(x, y)', 'from __main__ import python_lstsqr, x, y')\ .repeat(repeat=3, number=1000)) </code></pre> <p>(here the best of 3 repetitions and 1000 loops per repetition)</p> <p>Are there equivalents in Perl and Ruby?</p>
<p>Good old <code>time</code> ?</p> <p>For Perl, you can use built-in <a href="http://perldoc.perl.org/Benchmark.html" rel="nofollow"><code>Benchmark</code></a> or <a href="https://metacpan.org/pod/Time%3a%3aStopwatch" rel="nofollow"><code>Time::Stopwatch</code></a>.</p> <p>For Ruby, the built-in <a href="http://ruby-doc.org/stdlib-2.1.2/libdoc/benchmark/rdoc/index.html" rel="nofollow"><code>benchmark</code></a> is good enough.</p>