Perl's XML::SemanticDiff - Getting the attribute value when there is a difference
<p>Apologies in advance for this question, I'm new to Perl.</p> <p>I'm comparing two XML files using <a href="http://search.cpan.org/~shlomif/XML-SemanticDiff-1.0004/lib/XML/SemanticDiff.pm" rel="nofollow">XML::SemanticDiff</a>, with my own custom handler implemented. For the most part it works, but when I have two XML elements being compared that look like:</p> <pre><code>&lt;tag attribute="value"&gt; </code></pre> <p>and </p> <pre><code>&lt;tag attribute=" value "&gt; </code></pre> <p>I want to not count that as a difference. XML::SemanticDiff calls the element_value method. How do I get the value of the new and old attribute value so that I can trim out the whitespace and compare them? The documentation mentions that this can be done with the keepdata parameter (which I have added), but being new to Perl I don't understand how to then actually get the data when I'm in the element_value method.</p> <p>Thanks in advance, Thomas</p>
<p>If you want enclosing spacing to be ignored in your XML attributes, I suggest that you just remove it before trying to compare documents.</p> <p>The following uses <a href="https://metacpan.org/pod/XML%3a%3aLibXML" rel="nofollow"><code>XML::LibXML</code></a> to remove spacing from an embedded XML document, but you could adapt this to an XML File as well.</p> <pre><code>use strict; use warnings; use XML::LibXML; my $dom = XML::LibXML-&gt;load_xml(IO =&gt; \*DATA); for my $attr ($dom-&gt;findnodes('//@*')) { my $string = $attr-&gt;getValue(); if ($string =~ s/\A\s+|\s+\z//g) { $attr-&gt;setValue($string); } } print $dom-&gt;toString(); __DATA__ &lt;root&gt; &lt;tag attribute=" value "/&gt; &lt;/root&gt; </code></pre> <p>Outputs:</p> <pre><code>&lt;?xml version="1.0"?&gt; &lt;root&gt; &lt;tag attribute="value"/&gt; &lt;/root&gt; </code></pre>