perl json encode converting numbers to strings
<p>I am trying to encode a perl nested hash and send it to some web application. Somehow the json encoder converts the numbers or floats to strings. The web application sees the data as strings and can't plot the chart. I can add code in the web application to convert them back to numbers, but I am looking for better solution of not having the numbers as strings in the first place.</p> <p>Here is the code:</p> <pre><code>use strict; use warnings; use CGI qw/param/; use JSON::XS; my $json_obj = JSON::XS-&gt;new-&gt;allow_nonref; ## Build some Perl data my %perl_data; $perl_data{'numbers'}{'nested'} = [qw/1 -2 4 2 5 6/] ; $perl_data{'mix'}{'AnotherLevel'} = [qw/null "Temp" 4 2 5 6/] ; print "Content-type: text/html\n\n"; print $json_obj-&gt;pretty-&gt;encode(\%perl_data); </code></pre> <p>Here is the output where everything is just stringified:</p> <pre><code>Content-type: text/html { "numbers" : { "nested" : [ "1", "-2", "4", "2", "5", "6" ] }, "mix" : { "AnotherLevel" : [ "null", "\"Temp\"", "4", "2", "5", "6" ] } } </code></pre> <p>In the above code, I even tried the following, but to no avail.</p> <pre><code>use JSON; my $json_obj = JSON; </code></pre> <p>Any help is greatly appreciated.</p>
<p>Don't initialize them as strings, and you won't have a problem:</p> <pre><code>use strict; use warnings; use CGI qw/param/; use JSON::XS; my $json_obj = JSON::XS-&gt;new-&gt;allow_nonref; ## Build some Perl data my %perl_data = ( 'numbers' =&gt; {'nested' =&gt; [1, -2, 4, 2, 5, 6]}, 'mix' =&gt; {'AnotherLevel' =&gt; [qw/null "Temp"/, 4, 2, 5, 6]}, ); print "Content-type: text/html\n\n"; print $json_obj-&gt;pretty-&gt;encode(\%perl_data); </code></pre> <p>Outputs:</p> <pre><code>Content-type: text/html { "numbers" : { "nested" : [ 1, -2, 4, 2, 5, 6 ] }, "mix" : { "AnotherLevel" : [ "null", "\"Temp\"", 4, 2, 5, 6 ] } } </code></pre>
<p>The <a href="https://metacpan.org/pod/JSON%3a%3aXS" rel="nofollow">JSON::XS documentation</a> actually has a good <a href="https://metacpan.org/pod/JSON%3a%3aXS#PERL---JSON" rel="nofollow">section</a> which describes how Perl data structures are serialized as JSON. In particular, it says for scalars:</p> <pre><code>JSON::XS will encode undefined scalars as JSON null values, scalars that have last been used in a string context before encoding as JSON strings, and anything else as number values. </code></pre> <p>When you define your array of numbers using <code>qw</code>, you are using them in a string context. (<code>qw</code> means "quote word" and is generally used to save some typing when defining a list of words.)</p> <p>Note also that <code>null</code> in JSON is represented by the <code>undef</code> value in Perl. When you say <code>qw/null/</code>, you're just creating the literal string <code>'null'</code>.</p> <p>So you have two options.</p> <p>Define your array like this:</p> <pre><code> $perl_data{'numbers'}{'nested'} = [1, -2, 4, 2, 5, 6] ; $perl_data{'mix'}{'AnotherLevel'} = [undef, "Temp", 4, 2, 5, 6] ; </code></pre> <p>Or, force-numify all your numbers by adding zero to them before you serialize. E.g.</p> <pre><code> $perl_data{'numbers'}{'nested'} = [ map { $_ + 0 } qw/1 -2 4 2 5 6/ ]; </code></pre>