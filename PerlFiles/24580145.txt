How to count the each element of same index key in array?
<p>How to count the each element of same index number?</p> <pre><code>my @a = qw"A B C D E F"; my @b = qw"A B C C"; my $count = 0; for($i = 0; $i&lt;=scalar @a; $i++){ for($j = 0; $j &lt;= scalar @b; $j++){ if($a[$i] eq $b[$j]){ $count++; } } } print "Total: $count"; I expect the output is: Total:3 </code></pre> <p>The output is done by count only the same element of the index key? How can i do it?</p>
<p>There are two potential interpretations to your problem:</p> <h3>1. How does one count the intersection of two arrays?</h3> <p>A hash is an ideal data structure to test for existance:</p> <pre><code>use strict; use warnings; my @a = qw"A B C D E F"; my @b = qw"A B C C"; my %b = map {$_ =&gt; 1} @b; my $count = scalar grep {$b{$_}} @a; print "Total: $count"; </code></pre> <p>Outputs:</p> <pre><code>Total: 3 </code></pre> <p>Additional perldoc reference: <a href="http://perldoc.perl.org/perlfaq4.html#How-do-I-compute-the-difference-of-two-arrays%3f-How-do-I-compute-the-intersection-of-two-arrays%3f" rel="nofollow">How do I compute the difference of two arrays? How do I compute the intersection of two arrays?</a></p> <h3>2. How does one test element equality between two arrays, index to index?</h3> <p>If this is your question, then you do not need two loops, just a single iterator.</p> <pre><code>use strict; use warnings; use List::Util qw(min); my @a = qw"A B C D E F"; my @b = qw"A B C C"; my $count = scalar grep {$a[$_] eq $b[$_]} (0..min($#a, $#b)); print "Total: $count"; </code></pre> <p>Outputs:</p> <pre><code>Total: 3 </code></pre>