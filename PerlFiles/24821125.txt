Creating JSON in perl
<p>Using this code, I am only getting an array of values name and extension listed one after the other, how do I get a separate <code>{name:"tom", extension:"012345"}</code> for each hash I am creating? i.e I would like <code>[{name:"tom", extension:"012345"}, {name:"tim", extension:"66666"}]</code></p> <pre><code>#!/usr/bin/perl use strict; use warnings; use lib $ENV{HOME} . '/perl/lib/perl5'; use lib '/home/accounts/lib'; use Data::Dump qw(dump); use Lib::Phonebook; use JSON; my $ldap = Lib::Phonebook-&gt;new(); my (@names, @numbers, $count, $name_number_count, @result); @names = $ldap-&gt;list_telephone_account_names(); @numbers = $ldap-&gt;list_telephone_account_numbers(); $name_number_count = @names; $count = 0; for $count (0 .. $name_number_count - 1) { my %hash = ( "name" =&gt; $names[$count], "extension" =&gt; $numbers[$count] ); push( @result, %hash ); } my $json = encode_json \@result; print dump $json; </code></pre>
<p>Instead of</p> <pre class="lang-perl prettyprint-override"><code>push( @result, %hash ); </code></pre> <p>do:</p> <pre class="lang-perl prettyprint-override"><code>push( @result, \%hash ); </code></pre> <p>The original statement copies the entire hash to a list (as you discovered that becomes key, value, key, value, ...), whereas adding the backslash pushes a reference to the hash (without copying anything else) and serializing all that to JSON creates a nested structure. </p>