What do these perl regular expression mean?
<pre><code> chomp(); # Remove the newline. $_ =~ s/\s*//; # No extra spaces $_ =~ s/\\//; # Kill any line connector </code></pre> <p>I am not very familiar with Perl/regex. I am modifying an existing perl script with the above snippet. This chunk of code removes the newline character, spaces and line ending with '\' as connector.</p> <p>My question is, in the following line, what do the two bold character mean? I understand that anything between '/ /' is regular expression. But, </p> <p>1) What does the <strong>s</strong> preceding the '/ /' mean?</p> <p>2) What does the second '/' at the end mean?</p> <p>In $_ =~ <strong>s</strong>/\s* <strong>/</strong>/; </p>
<p><code>s</code> means "do replace".</p> <pre><code>$_ =~ s/SEARCH/REPLACE/; </code></pre> <p>So, <code>s/\s*//;</code> means find every white spaces and remove them (or replace them with empty string).</p>
<p>The "s" is the substitution function so it is saying "substitute"/"what matches here"/"with what's here"/</p> <p>The "/" here is the opening and closing delimiter of the parameters: s/something_to_match/replacement. '/' is very commonly used as the delimiter character, but perl pretty much allows any character that isn't used in the regexes as the delimiter.</p> <p>See: <a href="http://perldoc.perl.org/functions/s.html" rel="nofollow">http://perldoc.perl.org/functions/s.html</a></p>