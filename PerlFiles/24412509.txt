Evaluation Search and Replace in Perl
<p>I have a file formatted like this:</p> <p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p> <pre><code>9558 9629 gene locus_tag CeraR_t011 gene trnR-UCU 11296 9773 CDS locus_tag CeraR_p012 gene atpA product ATP synthase CF1 alpha subunit transl_except (pos:complement(10268..10270), aa:Q) transl_except (pos:complement(11192..11194), aa:Q) transl_except (pos:complement(13267..13269), aa:M) 11296 9773 gene locus_tag CeraR_p012 gene atpA </code></pre> <p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p> <p>I need to add 809 to both of the values following pos:complement in each instance. I have been attempting with the search and replace modifier as so:</p> <pre><code>$line =~ s!complement((\d+)..(\d+)!complement(($1+809)..($2+809)!eg </code></pre> <p>however, the ( after complement is always interpreted as part of an evaluation rather than simply a character. I have tried every combination of backslashes, apostrophes, and quotes to make it just a character but nothing seems to work. </p> <p>Any advice would be appreciated</p>
<p>Since the replacement string is evaluated, you must use a quoted string and concatenations:</p> <pre><code>$line =~ s/complement\(\K(\d+)..(\d+)/($1+809) . '..' . ($2+809)/eg; </code></pre> <p>Note: since <code>\K</code> removes all on the left from the match result, you don't need to rewrite all the begining of the match in the replacement string.</p>