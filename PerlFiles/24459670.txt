Not all threads finishing, maybe due to not locking STDOUT
<p>I am experimenting with threads in perl. The following code basically creates n threads and assigns the same function to them (which they should execute in parallel).</p> <p>Twist: The function just prints something. This means that they can't do it in parallel. I am honestly fine with that since I am just starting to do things with them however not all threads seem to finish. I suppose it is due to the fact that I haven't locked the STD out and that is why some conficts occur. That may not be the reason. In any case a different ammount of threads are not finishing each time.</p> <p>If I am correct, how can I lock stdout (I get an error when I try to use the lock function) ?</p> <p>If I am wrong, why are all threads not finishing and how can I fix that ?</p> <p>The code:</p> <pre><code>use strict; use threads ('yield', 'stack_size' =&gt; 64*4096, 'exit' =&gt; 'threads_only', 'stringify'); use threads::shared; sub PrintTestMessage() { print "Hello world\n"; } my @t; push @t, threads-&gt;new(\&amp;PrintTestMessage) for 1..10; </code></pre> <p>I get 10 times hello world, however after the program finishes I get different output:</p> <pre><code>Perl exited with active threads: 1 running and unjoined 9 finished and unjoined 0 running and detached Perl exited with active threads: 8 running and unjoined 2 finished and unjoined 0 running and detached Perl exited with active threads: 5 running and unjoined 5 finished and unjoined 0 running and detached </code></pre> <p>Why haven't all threads finished ? ( the unjoined is because I never join them in the code so it is expected)</p>
<p>You have to join the threads, otherwise main thread could (as in your example) finish before its child threads, </p> <pre><code>$_-&gt;join for @t; </code></pre> <p>From <a href="http://perldoc.perl.org/threads.html" rel="nofollow"><code>perldoc threads</code></a>,</p> <blockquote> <p><em>$thr->join()</em></p> <p>This will wait for the corresponding thread to complete its execution. When the thread finishes, ->join() will return the return value(s) of the entry point function.</p> </blockquote>