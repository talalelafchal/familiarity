Ansi-escape sequences and redirection: unexpected behavior
<p>When I run this script it works as wanted as long as I don't redirect <code>STDOUT</code> to a file. When I redirect <code>STDOUT</code> to a file, the output after the <code>ENTER:</code> breaks. Why doesn't the script work any more if I redirect the <code>STDOUT</code> to a file? </p> <pre><code>#!/usr/bin/env perl use warnings; use strict; use Term::ReadKey; use Unicode::GCString; use Term::ANSIScreen qw( :all ); select( *STDERR ); $| = 1; print YELLOW "YELLOW\n"; print RESET; print "ENTER:"; my $dummy = &lt;&gt;; print savepos; my $str = ''; print_readline( $str ); for my $s ( 33 .. 126 ) { $str .= ' ' . chr( $s ) x 5; print_readline( $str ); } print "\n"; sub print_readline { my ( $str ) = @_; my $gcs = Unicode::GCString-&gt;new( $str ); my $up = int( $gcs-&gt;columns() / ( GetTerminalSize )[0] ); print loadpos; if ( $up ) { print "\n" x $up, up( $up ); } print cldown, savepos, $str; } </code></pre>
<p>The driver for a TTY might have code to respond to specific character sequences by moving the cursor around the screen, or changing colors, but the default driver for text files has no such code.</p> <p>If you want to capture the output of a terminal session so that you can watch it in 'instant replay', I know of a command names <a href="http://man7.org/linux/man-pages/man1/script.1.html" rel="nofollow">script</a> which records everything printed to your terminal into a file, which you can then read with an editor, or cat back to the screen to watch it replay.</p> <p>You may need to make a decision between capturing the output, and using the ANSIScreen module.</p>