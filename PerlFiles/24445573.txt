Net::OpenSSH::Gateway-&gt;find_gateway fails when ControlPersist option is set
<p>I am trying to create a persistent gateway connection using Net::OpenSSH::Gateway. Below is the code snippet I am using for the same. </p> <pre><code>my %proxy_opts = ( host =&gt; $host, port=&gt;$port, password=&gt;$password, user=&gt;$user , scheme=&gt;"ssh", ssh_cmd =&gt; '/usr/bin/ssh', master_opts =&gt; [ -o=&gt;"StrictHostKeyChecking=no", -o=&gt;"TCPKeepAlive=no", -o=&gt;"ServerAliveInterval=30", -o=&gt;"ServerAliveCountMax=90", -o=&gt;"ControlPath=/tmp/ssh-master-%h_%p_%r", -o=&gt;"ControlPersist=yes" ] ); my %gateway_settings = ( proxies=&gt;[ {%proxy_opts} ]); my $gateway = Net::OpenSSH::Gateway-&gt;find_gateway(%gateway_settings, errors=&gt;$errors); </code></pre> <p>I get the error below. But if I remove the option ControlPath and ControlPersist the entire thing works fine.</p> <blockquote> <p>[ERROR ] unable to establish master SSH connection: bad ssh master at /root/.libnet-openssh-perl/spangeni-j1.zscaler.-31930-744378, socket owned by pid 31933 (pid 31931 expected)</p> </blockquote>
<p>I think it's a bug in the module. The module <code>Net::OpenSSH::Gateway</code> doesn't exist on CPAN, and the author already said that:</p> <blockquote> <p>I have not published it on CPAN yet because, even it is already functional, I have found some problems with its internal architecture that I want to solve first. -<a href="http://www.perlmonks.org/?node_id=952230" rel="nofollow noreferrer">Source</a></p> </blockquote> <p>And also if you see the documentation of <code>Net::OpenSSH</code> you'll see that gateway is an experimental feature.</p> <p><img src="https://i.stack.imgur.com/UIMTN.png" alt="enter image description here"></p> <hr> <p>BTW what version of <code>OpenSSH</code> are you using? ControlPersist requires <strong>OpenSSH 5.6</strong> or newer.</p>
<p>If you have tunnels enabled on the gateway machine, you don't need to use Net::OpenSSH::Gateway at all.</p> <pre><code>my $ssh_g=Net::OpenSSH-&gt;new($gateway); my $proxy_command=$ssh_g-&gt;make_remote_command({tunnel =&gt; 1}, $host, 22); my $ssh=Net::OpenSSH-&gt;new($host, master_opts =&gt; [-o =&gt; "ProxyCommand=$proxy_command"]); </code></pre>