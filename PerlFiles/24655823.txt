Get the value of the key when there are atrributes inside the xml
<p>Consider the following code:</p> <pre><code>use XML::Simple; use Data::Dumper; my $string_to_parse = qq(&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;root xmlns="sth:test"&gt; &lt;element&gt;1&lt;/element&gt; &lt;element&gt;21&lt;/element&gt; &lt;something_else&gt;test123&lt;/something_else&gt; &lt;/root&gt;); my $xml_simple = new XML::Simple(); my $doc = $xml_simple-&gt;XMLin($string_to_parse); print "Dumping the Parsed hashref: ", Dumper($doc); </code></pre> <p>It <code>$doc</code> will be a hashref containing as keys the xml elements and as values their, well inner value. This isn't the case for the first element (root). When we parse and dump it the output is:</p> <pre><code>Dumping the Parsed hashref: $VAR1 = { 'something_else' =&gt; 'test123', 'xmlns' =&gt; 'sth:test', 'element' =&gt; [ '1', '21' ] }; </code></pre> <p>How can I get the value of the root element as well ? I am not so interested in the value of xmlns as much as the actual name of the root element.</p>
<p>littleLouito's answer is a quick fix. If you read the XML::Simple documentation you'll find the <strong>true answer</strong> though.</p> <p>The documentation describes the <a href="http://search.cpan.org/~grantm/XML-Simple-2.20/lib/XML/Simple.pm#STATUS_OF_THIS_MODULE" rel="nofollow">status of XML::Simple</a>:</p> <blockquote> <p>The use of this module in new code is discouraged. Other modules are available which provide more straightforward and consistent interfaces. In particular, XML::LibXML is highly recommended.</p> </blockquote> <p>It <a href="http://search.cpan.org/~grantm/XML-Simple-2.20/lib/XML/Simple.pm#WHERE_TO_FROM_HERE?" rel="nofollow">also says</a>:</p> <blockquote> <p>XML::Simple is able to present a simple API because it makes some assumptions on your behalf. [...] In a serious XML project, you'll probably outgrow these assumptions fairly quickly.</p> </blockquote> <p>In the part of that quote that I omitted, it lists a few such assumptions. They can mostly be summed up as "you don't care much about the XML you read or write with the module".</p> <p>So a better solution is to switch from XML::Simple (a module that its own maintainers discourage you from using in new projects!) to something nice and sensible such as XML::LibXML.</p> <pre><code>use strict; use warnings; use XML::LibXML 2; my $string_to_parse = qq(&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;root xmlns="sth:test"&gt; &lt;element&gt;1&lt;/element&gt; &lt;element&gt;21&lt;/element&gt; &lt;something_else&gt;test123&lt;/something_else&gt; &lt;/root&gt;); my $doc = XML::LibXML-&gt;load_xml(string =&gt; $string_to_parse); print $doc-&gt;documentElement-&gt;tagName, "\n"; </code></pre>
<p>you have to use keepRoot feature:</p> <pre><code>my $doc = $xml_simple-&gt;XMLin($string_to_parse, KeepRoot =&gt; 1); </code></pre>