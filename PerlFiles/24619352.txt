perl convert EPOCH time with DateTime module
<p>I have an epoch time and want to convert it to somthing like Jul 10 14:11:23 ,</p> <p>Currently I use the following :</p> <pre><code>my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time); my @months = ("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"); my $date = sprintf("%3s %2d %02d:%02d:%02d", $months[$mon], $mday, $hour, $min, $sec); </code></pre> <p>I wonder if its possible to convert epoch time to somthing like "Jul 10 14:11:23" with DateTime module if yes could someone provide an example</p>
<p>For this one task, you could use POSIX, core perl for a long time.</p> <pre><code>use POSIX 'strftime'; print strftime "%b %d %H:%M:%S", localtime; </code></pre>
<p>Use the <a href="https://metacpan.org/pod/DateTime#strftime-Patterns"><code>strftime</code></a> function of <a href="https://metacpan.org/pod/DateTime"><code>DateTime</code></a>:</p> <pre><code>use strict; use warnings; use DateTime; my $dt = DateTime-&gt;from_epoch( epoch =&gt; time ); print $dt-&gt;strftime("%b %d %H:%M:%S"); </code></pre> <p>Outputs:</p> <pre><code>Jul 07 20:39:11 </code></pre>