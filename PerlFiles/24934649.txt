Print line matching the expression and 5th line after the matching expression line
<p>i have a file like this</p> <pre><code>pin port coord some info some more info pin port coord some info some more info </code></pre> <p>I wanted to grep "<code>pin</code>" and "<code>some info</code>" into a file</p> <p>i tried <code>grep -A 3 pin input.txt | sed -n '4~5p'</code></p> <p>this only gives me "<code>someinfo</code>" line.</p> <p>i want my output as </p> <pre><code>pin some info pin some info </code></pre> <p>any suggestion in awk, sed etc..!!!</p>
<p>You can for example select every line <code>4k</code> and <code>4k+1</code>:</p> <pre><code>$ grep -A 3 --no-group-separator "pin" file | awk 'NR%4&lt;=1' pin some info pin some info </code></pre> <p>Note the importance of <code>--no-group-separator</code>:</p> <pre><code>$ grep -A 3 --no-group-separator "pin" file pin port coord some info pin # no "--" between matches port coord some info </code></pre> <p>But:</p> <pre><code>$ grep -A 3 "pin" file pin port coord some info -- pin port coord some info </code></pre>
<pre><code>perl -lne 'print if /pin|some info/;' in.txt &gt; out.txt </code></pre>
<pre><code>awk 'n==5 {print; n=0} /pin/ {print; n=1} n{n++}' pin.in </code></pre>
<p>Both of these should work provided that you're actually looking for a line called "some info"</p> <p>1)<code>sed -n -e 's/pin/&amp;/p' -e 's/some info/&amp;/p' input.txt</code><br> The <code>-n</code> mean by default do not print the line.<br> The <code>-e</code> allows for multiple searches.<br> The <code>&amp;</code> is a reference to the match between the first two <code>/</code>.<br> The <code>p</code> means prints what's between the last two <code>/</code>.<br> So all together it searches <code>input.txt</code> for <code>pin</code> and <code>some info</code> and will only print the lines containing them</p> <p>2)<code>awk '/pin/ {print} /some info/ {print}'</code><br> This does the same; it searches for <code>pin</code> and <code>some info</code> and prints only those lines.<br> The output for both commands is: <code> pin some info pin some info</code><br> If the empty line between the first <code>some info</code> and the second <code>pin</code> is absolutely necessary, I can try to figure out a way to insert it (probably using <code>sed</code>)</p> <p>EDIT:<br> I realized that you can actually use <code>sed -n -e '/pin/p' -e '/some info/p' input.txt</code> instead of the above <code>sed</code> command (no <code>s</code> flag and no <code>&amp;</code>). It's shorter and more readable this way.</p>
<p>Try this:</p> <pre><code>perl -00 -nlE 'say map {"$_\n"} (split /\n/, $_)[0,3]' &lt; filename </code></pre> <p>for the next input:</p> <pre><code>pin port coord some info some more info bla port2 coord2 bla some info2 some more info2 </code></pre> <p>prints</p> <pre><code>pin some info bla bla some info2 </code></pre>
<pre><code>$ awk '/pin/{print; n=0} ++n==4{print $0 ORS}' file pin some info pin some info </code></pre> <p>or if you don't need the blank line between output records:</p> <pre><code>$ awk '/pin/{print;n=0} ++n==4' file pin some info pin some info $ awk '/pin/{n=0} ++n~/^[14]$/' file pin some info pin some info </code></pre>