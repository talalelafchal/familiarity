Why won't this if elsif statement work with the @ARGV variable?
<p>I am processing time and need to input certain values into equations that are based on difference between UTC and Local Standard time. So, for Los Angeles the @ARGV input would be "8" and the value needed to be inserted into the nest equation would be "4" but the script won't select the appropriate value. Instead, it only selects the first value in the process despite the fact that the ARGV value is not five. What am I doing wrong?</p> <pre><code>$std_time = (@ARGV[0]); if ($std_time = 5) {(std_time_pro = 7);} elsif ($std_time = 6) {(std_time_pro = 6);} elsif ($std_time = 7) {(std_time_pro = 5);} elsif ($std_time = 8) {(std_time_pro = 4);} elsif ($std_time = 9) {(std_time_pro = 3);} elsif ($std_time = 10) {(std_time_pro = 2);} $shft_number = (($std_time_pro * 3600) / 86400); </code></pre>
<p>Use <code>==</code> to test for numeric equality, not the assignment operator <code>=</code>.</p> <p>Additionally, I suspect a reminder to always include <a href="http://perldoc.perl.org/strict.html" rel="nofollow"><code>use strict</code></a> and <a href="http://perldoc.perl.org/warnings.html" rel="nofollow"><code>use warnings</code></a> at the top of EVERY Perl script. For some of the many reasons why, just read: <a href="http://stackoverflow.com/q/8023959/1733163">Why use strict and warnings?</a></p> <p>Finally, instead of a list of <code>if</code> statements, I would recommend building a hash to relate your two values:</p> <pre><code>use strict; use warnings; my ($std_time) = @ARGV; my %std_time2pro = map {$_ =&gt; 12 - $_} (5..10); my $std_time_pro = $std_time2pro{$std_time} // die "Invalid value of std_time: $std_time"; </code></pre>
<p>You need to change = to == to test equality;</p>
<p>Not only do you need to change the <code>=</code> to <code>==</code>, it looks like you are assigning values to <code>std_time_pro</code> instead of <code>$std_time_pro</code>.</p> <p>You need to always have these two lines at the top of every Perl program you write to catch problems like these:</p> <pre><code>use warnings; use strict; </code></pre>