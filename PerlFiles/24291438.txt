Trim trailing and leading spaces in a file fields separated by delimiter using unix command
<p><strong>Input file:</strong></p> <pre><code>abc | hello |123 | def | hi ram | 456 | </code></pre> <p><strong>output file should be as follows</strong></p> <pre><code>abc|hello|123| def|hi ram|456 </code></pre> <p>Please let me know if we can achieve this using awk or sed commands. I want to execute the same in perl using system command</p>
<p>Using Perl one-liner</p> <pre><code>perl -i -lne 'print join "|", map {s/^\s+|\s+$//g; $_} split /\|/, $_, -1' data.txt </code></pre> <h3>Explanation:</h3> <p><strong>Switches</strong>: </p> <ul> <li><code>-i</code>: Edit &lt;> files in place (makes backup if extension supplied)</li> <li><code>-l</code>: Enable line ending processing</li> <li><code>-n</code>: Creates a <code>while(&lt;&gt;){...}</code> loop for each line in your input file. </li> <li><code>-e</code>: Tells <code>perl</code> to execute the code on command line. </li> </ul>
<p>Try the below awk command to remove all the leading and trailing spaces in the columns separated by <code>|</code> symbol,</p> <pre><code>$ awk -F'|' '/^ *$/{next;} {gsub (/ *$/,"",$1); gsub (/^ */,"",$2); gsub (/^ */,"",$3); gsub (/ *$/,"",$2); gsub (/^ */,"",$3); gsub (/ *$/,"",$3); print $1"|"$2"|"$3"|"}' imp abc|hello|123| def|hi ram|456| </code></pre> <p><strong>Explanation:</strong></p> <pre><code>-F'|' # Field seperator is set to |. /^ *$/{next;} # Awk skips from doing the operation on seeing a blank line. gsub (/ *$/,"",$1); # Removes the trailing spaces on column no1. gsub (/^ */,"",$2) # Removes the leading spaces on column number2. print $1"|"$2"|"$3"|" # Prints the column1,2,3 delimited by a pipe symbol. </code></pre>
<pre><code>perl -lpe 's/ \s*[|]\s* /|/xg' file </code></pre> <p>output</p> <pre><code>abc|hello|123| def|hi ram|456| </code></pre>