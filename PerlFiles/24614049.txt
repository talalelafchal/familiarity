Perl equivalent of grep -Eo
<p>In shell scripting, <code>grep -Eo {regex} {file}</code> returns the matched part of the regex. For example:</p> <pre><code>$ echo \ 'For support, visit &lt;http://www.example1.com/support&gt; You can also visit &lt;http://www.example2.com/products&gt; for information.' | grep -Eo 'http://[a-z0-9_.-]+/' http://www.example1.com/ http://www.example2.com/ </code></pre> <p>How would I do this with Perl?</p>
<p>To get <code>-o</code> functionality I suggest the following:</p> <pre><code>echo abcdabcd | perl -lne 'while ($_ =~ s/(bc)//){print $1}' bc bc echo abcdabcd | grep -Eo 'bc' bc bc </code></pre> <p>But for you example I suggest <code>perl -pe 's|(http://[\w-\.]+/).*|$1|g'</code>:</p> <pre><code>echo 'http://www.example1.com/support' | perl -pe 's|(http://[\w-\.]+/).*|$1|g' http://www.example1.com/ </code></pre>
<p>Here are two ways:</p> <ol> <li><p>In Perl, the special variable <code>$&amp;</code> contains the matched part of the regular expression.</p> <pre><code>perl -ne 'print "$&amp;\n" if m#http://[a-z0-9_.-]+/#' &lt; input </code></pre></li> <li><p>If your regular expression contains capture groups, the patterns matched by those groups are assigned to the variables <code>$1</code>, <code>$2</code>, ...</p> <pre><code>perl -ne 'print "$1\n" if m#(http://[a-z0-9_.-]+/)#' &lt; input </code></pre></li> </ol>