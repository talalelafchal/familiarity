Replacing string after match
<p>I'm new to perl and was wondering how I could replace some text after a matched pattern.</p> <p>For example I have a string:</p> <pre><code> my $string = 'startDate="2014-06-10"'; $string =~ s/startDate="2014-06-10"/startDate=""\g; </code></pre> <p>This code replaces what I want but I want to be able to have any date and for it replace the date with a blank string. So I want to replace any text after <code>startDate="</code> and stop replacing after 10 characters. What is the best way to do this?</p> <p>Thanks</p>
<p>Assuming your date is always in that format, you can use a more general regular expression to replace the date:</p> <pre><code>my $string = 'startDate="2014-06-10"'; $string =~ s/startDate="\d{4}-\d{1,2}-\d{1,2}"/startDate=""/g; </code></pre> <p>and since <code>startDate=""</code> stays the same you really just need to replace the date itself:</p> <pre><code>my $string = 'startDate="2014-06-10"'; $string =~ s/\d{4}-\d{1,2}-\d{1,2}//g; </code></pre>
<p>Assuming perl >5.10:</p> <pre><code>s/startDate="\K[^"]{10}//g; </code></pre> <p>Replaces 10 characters which aren't <code>"</code> following <code>startDate="</code>. Using <code>\K</code> means you don't need to replace the bit you wanted to retain:</p> <blockquote> <p>\K , which causes the regex engine to "keep" everything it had matched prior to the \K and not include it in $&amp;</p> </blockquote>