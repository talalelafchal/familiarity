Repeating qualifier is ignored in regex
<p>I got stuck on building a regex with repeating qualifier. No luck finding a piece of advise online.</p> <p>Here is a string to match -</p> <pre><code>abc cde fgi </code></pre> <p>The regex is</p> <pre><code>^(?:(.*?)(abc|fgi)){2}(.*)$ </code></pre> <p>Here is example output from redemo.py:</p> <p><img src="https://i.stack.imgur.com/t1thW.png" alt="the way how the regex matches the string"></p> <p>A similar output I am getting from the Perl:</p> <pre><code>perl --version | head -2; perl -MData::Dumper -e 'print Dumper ["abc cde fgi" =~ /^(?:(.*?)(abc|fgi)){2}(.*)$/g]' This is perl 5, version 14, subversion 4 (v5.14.4) built for cygwin-thread-multi $VAR1 = [ ' cde ', 'fgi', '' ]; </code></pre> <p>I would better leave behind the scope the reason, why I have to apply exactly this regex. </p> <p>But here is the problem: I would expect <strong>'{2}' qualifier is a strict requirement</strong> for matching the string, thus the interpreter will return 5 groups for successful match -</p> <pre><code>1: '' 2: 'abc' 3: ' ' 4: 'fgi' 5: '' </code></pre> <p>Unexpectedly, the interpreter is fine with returning only 3 groups, it looks like '{2}' qualifier is being ignored.</p> <p>Could someone comment if my understanding of regex repeating qualifiers is wrong?</p> <p>Can anyone advise a tool to visualize how regex is being interpreted step-by-step?</p> <p>Thanks,</p>
<p>You've included the <code>{2}</code> in your regex, but you <em>haven't</em> included it in the matching group. That means that the repeat condition is evaluated when calculating whether there is a match, but it isn't evaluated when computing the groups that contributed to the match. Instead, you get <em>one</em> repetition of the group that matched twice. To get both repetitions assigned to the content of one group, include the <code>{2}</code> within the <code>()</code> for that group.</p> <p>Note that you <em>never</em> get more groups assigned than there are pairs of literal <code>()</code> in the input. To get the individual repetitions of a group, you have to code a loop and repeat the match (or in Perl, include code in the regex via its <code>e</code> flag).</p>