Error parsing a CSV file using Strawberry Perl with quotes and decimals
<p>I'm using Strawberry Perl 5.18.2.2 on Windows 8.1 64bit with <code>Text::CSV</code> installed, and I'm trying to parse the following CSV file from PayPal.</p> <pre><code>Date, Time, Time Zone, Name, Type, Status, Gross, Fee, Net, From Email Address, To Email Address, Transaction ID, Counterparty Status, Address Status, Item Title, Item ID, Shipping and Handling Amount, Insurance Amount, Sales Tax, Option 1 Name, Option 1 Value, Option 2 Name, Option 2 Value, Auction Site, Buyer ID, Item URL, Closing Date, Escrow Id, Invoice Id, Reference Txn ID, Invoice Number, Custom Number, Receipt ID, Balance, Address Line 1, Address Line 2/District/Neighborhood, Town/City, State/Province/Region/County/Territory/Prefecture/Republic, Zip/Postal Code, Country, Contact Phone Number, "5/5/2014","17:44:45","PDT","Jack Payer","Payment Received","Completed","1.00","0.00","1.00","jack@yahoo.com","payer@gmail.com","8HT05934290026J","Verified","","","","","","","","","","","","","","","","","","","","","1.67","","","","","","","", </code></pre> <p>open, read and parse the file using:</p> <pre><code>open(READ, $sourcefile) open($fh,"+&gt;:encoding(utf8)","$base.m.csv") undef $/; $_ = &lt;READ&gt;; # convert Unix line ending to dos $_ =~ s/\r?\n|\r/\r\n/g; print $fh $_; close READ; $/ = "\r\n"; seek($fh, 0, 0); my $csv = Text::CSV-&gt;new({ allow_whitespace =&gt; 1, binary =&gt; 1 }); # should set binary attribute. my $row=$csv-&gt;getline ($fh); my @fields = @$row; $csv-&gt;column_names (@fields); $row = $csv-&gt;getline_hr($fh) </code></pre> <p>Here is the problem, starting with the Gross column it's reading it incorrectly which then messes up all the subsequent column. <code>$row-&gt;{'Gross'}</code> reads <code>1.00,^@.00</code> instead of <code>1.00</code>.</p> <p>The <code>^@</code> symbol is a special <code>NULL</code> character that I see when I open the output file with gvim. This is where the issue starts.</p> <p>Subsequently, <code>$gross=$row-&gt;{'Fee'}</code> reads <code>1.00</code> instead of <code>0.00</code>, and <code>$gross=$row-&gt;{'Net'}</code> reads <code>jack@yahoo.com</code> instead of <code>1.00</code></p> <p>Any idea why it's getting messed up?</p> <p>EDIT: FULL CODE AS REQUESTED here: <a href="https://www.dropbox.com/s/p064pxitmw3jwmj/csv2qif.pl" rel="nofollow">https://www.dropbox.com/s/p064pxitmw3jwmj/csv2qif.pl</a></p> <p><strong>EDIT: If i change</strong></p> <pre><code>"1.00","0.00","1.00" </code></pre> <p>in the CSV file to</p> <pre><code>"1.00","2.00","3.00" </code></pre> <p>it works fine. Infact anything starting with "0.xx" it ends up parsing it as a NULL character. I don't get the NULL character. I'm lost, is something wrong with the CSV parser?</p>
<p>Thanks to @ThisSuitIsBlackNot the issue lay with Text::CSV. Quoting</p> <blockquote> <p>I found this in the Text::CSV changelog under v1.12 (May 2009): getline() didn't handle a line having null (ex. "0). Are you perhaps using an old version? Check with perl -MText::CSV -e 'print $Text::CSV::VERSION'</p> </blockquote> <p>The issue was a combination of Strawberry Perl and Text::CSV. I upgraded to 32 Bit 5.20.0.1 Portable edition and reinstalled Text::CSV version 1.32 (latest at this point) and it started working fine.</p>