How can I change an overloaded operator on a Moose class at runtime?
<p>I have a Moose class with an overloaded stringification operator which I would actually like to change at runtime, because I need text output in different formats. </p> <p>In other words, I would like to be able to do something like this:</p> <pre><code>$obj = Class-&gt;new("a'"); $obj-&gt;formatter("A::Formatter"); print "$obj"; # prints "a'" $obj-&gt;formatter("Another::Formatter"); print "$obj"; # prints a1 </code></pre> <p>I would also like the formatters to be modular, so that I can encapsulate and plug in different ones without creating a giant spaghetti mess. </p> <p>How should I best do this? are roles a good solution for this kind of problem? I have checked <a href="http://search.cpan.org/~ether/MooseX-Object-Pluggable-0.0013/lib/MooseX/Object/Pluggable.pm" rel="nofollow">MooseX::Object::Pluggable</a>, <a href="http://search.cpan.org/~rkitover/MooseX-Traits-Pluggable-0.12/lib/MooseX/Traits/Pluggable.pm" rel="nofollow">MooseX::Traits::Pluggable</a> and <a href="http://search.cpan.org/~ether/MooseX-Traits-0.12/lib/MooseX/Traits.pm" rel="nofollow">MooseX::Traits</a> to start but need advice as this is uncharted territory for me. </p>
<p>You don't need to change the <em>overloading</em> at runtime, just how it's implemented. Remember, overloading can be done with a method <em>name</em> as opposed to a subref:</p> <pre><code>package Foo; use Moose; use overload q{""} =&gt; '_stringify'; has id =&gt; ( is =&gt; 'ro', isa =&gt; 'Str', required =&gt; 1, ); has formatter_class =&gt; ( is =&gt; 'rw', isa =&gt; 'ClassName', required =&gt; 1, ); sub _stringify { my $self = shift; return $self-&gt;formatter_class()-&gt;new()-&gt;format($self); } </code></pre>