I defined a hash, but exists function throws an error saying it's not a hash
<p>This problem seems to be one of scope. The line with the exists function on it throws an error saying that it's not receiving a hash as an argument. How can I make so the value being passed to the exists function is my hash?</p> <pre><code>#!/usr/bin/perl use warnings; use strict; open FH, 'test_out' or die $!; my %pn_codes = (); while(&lt;FH&gt;) { if(/.*PN=(\d*)/) { my $pn = $1; if(exists %pn_codes{$pn}) { print($pn, "exists"); } else { %pn_codes{$pn} = 1; } } } </code></pre>
<p>perl <a href="http://perldoc.perl.org/diagnostics.html" rel="nofollow"><code>diagnostics</code></a> can be useful,</p> <pre><code>perl -Mdiagnostics -c script.pl exists argument is not a HASH or ARRAY element or a subroutine at c line 13 (#1) (F) The argument to exists() must be a hash or array element or a subroutine with an ampersand, such as: $foo{$bar} $ref-&gt;{"susie"}[12] &amp;do_something Uncaught exception from user code: exists argument is not a HASH or ARRAY element or a subroutine at c line 13. at c line 13 </code></pre>
<p>You must specify <code>exists</code> on a scalar <code>$hash{key}</code></p> <pre><code>if (exists $pn_codes{$pn}) { </code></pre> <p>However, you're essentially creating a <code>%seen</code> style hash which can be simplified to just:</p> <pre><code>while (&lt;FH&gt;) { if (/.*PN=(\d*)/) { my $pn = $1; if (! $pn_codes{$pn}++) { print($pn, "exists"); } } } </code></pre>