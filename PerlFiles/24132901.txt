Print the first five lines of the text being held in the scalar value
<p>I have manipulated the text that is being held in the scalar value but now however I only want to keep five lines and the code and print it. I am unsure of how to go about doing this. </p> <pre><code>use WWW::Wikipedia; my $wiki = WWW::Wikipedia-&gt;new(); ## search for 'perl' my $result = $wiki-&gt;search( 'perl' ); ## if the entry has some text print it out ## This is where I want the five lines to ## be printed if ( $result-&gt;text() ) { my $rawtext = $result-&gt;text(); print $result-&gt;text(); } ## list any related items we can look up print join( "\n", $result-&gt;related() ); </code></pre>
<p>One way, not necessarily the best way, to do it is:</p> <pre><code>#!/usr/bin/env perl use strict; use warnings; my $var = "Line of data\n" x 8; # Generate sample data in single scalar variable print "Before: &lt;&lt;$var&gt;&gt;\n"; my @lines; @lines[0..4] = split /\n/, $var; # Capture just the first 5 lines print "After: &lt;&lt;$_&gt;&gt;\n" for @lines; </code></pre> <p>Example output:</p> <pre><code>Before: &lt;&lt;Line of data Line of data Line of data Line of data Line of data Line of data Line of data Line of data &gt;&gt; After: &lt;&lt;Line of data&gt;&gt; After: &lt;&lt;Line of data&gt;&gt; After: &lt;&lt;Line of data&gt;&gt; After: &lt;&lt;Line of data&gt;&gt; After: &lt;&lt;Line of data&gt;&gt; </code></pre> <hr> <h3>After the update to the question</h3> <p>After installing <a href="http://search.cpan.org/perldoc?WWW%3A%3AWikipedia" rel="nofollow">WWW::Wikipedia</a>, this trivial adaptation of your code works for me (Perl 5.18.1 on an Ubuntu 12.04 LTS derivative). I regard it as a proof by counter-example that your <a href="http://stackoverflow.com/questions/24132901/i-wanted-to-know-how-to-print-the-first-five-lines-of-the-text-being-held-in-the/24133422?noredirect=1#comment37266664_24133422">"it won't work for me"</a> claim is incorrect &mdash; or, at least, whatever you tried (which you've not shown) was not the correct thing to try. Note that this code includes the improvements <a href="http://stackoverflow.com/questions/24132901/i-wanted-to-know-how-to-print-the-first-five-lines-of-the-text-being-held-in-the/24133422?noredirect=1#comment37241684_24133422">suggested</a> by <a href="http://stackoverflow.com/users/1069567/pierre">Pierre</a>.</p> <pre><code>#!/usr/bin/env perl use strict; use warnings; use WWW::Wikipedia; my $wiki = WWW::Wikipedia-&gt;new(); ## search for 'perl' my $result = $wiki-&gt;search( 'perl' ); ## if the entry has some text print it out ## This is where I want the five lines to ## be printed if ( $result-&gt;text() ) { my $rawtext = $result-&gt;text(); print "Raw: [[$rawtext]]\n"; $rawtext =~ s/\n\n+/\n/g; # Remove repeated newlines $rawtext =~ s/^\n//; # Remove leading newlines my @lines; @lines[0..4] = split "\n", $rawtext, 6; print "Line: &lt;&lt;$_&gt;&gt;\n" for @lines; } </code></pre> <p>Output:</p> <pre><code>Raw: [[ {{Infobox programming language | name = Perl logo = paradigm = multi-paradigm: functional, imperative, object- | oriented (class-based), reflective, procedural, Event-driven, generic year = | 1987 designer = Larry Wall developer = Larry Wall latest_release_version = | 5.20.0&lt;ref&gt;&lt;/ref&gt; latest_release_date = latest preview version = | 5.21.0&lt;ref&gt;&lt;/ref&gt; latest preview date = turing-complete = Yes typing = Dynamic | influenced_by = AWK, Smalltalk 80, Lisp, C, C++, sed, Unix shell, Pascal | influenced = Python, PHP, Ruby, ECMAScript, LPC, Windows PowerShell, | JavaScript, Falcon, Perl 6, Qore programming_language = C operating_system = | Cross-platform license = GNU General Public License or Artistic License&lt;ref | name='licensing'&gt;&lt;/ref&gt; website = file_ext = .pl .pm .t .pod wikibooks = Perl | Programming }} 'Perl' is a family of high-level, general-purpose, interpreted, dynamic programming languages. The languages in this family include Perl 5 and Perl 6.&lt;ref&gt;&lt;/ref&gt; Though Perl is not officially an acronym,&lt;ref&gt;&lt;/ref&gt; there are various backronyms in use, such as: Practical [[data extraction|Extraction]] and Reporting Language.&lt;ref&gt;&lt;/ref&gt; Perl was originally developed by Larry Wall in 1987 as a general-purpose Unix scripting language to make report processing easier.&lt;ref name='sheppard00'&gt;&lt;/ref&gt; Since then, it has undergone many changes and revisions. The latest major stable revision of Perl 5 is 5.20, released in May 2014. Perl 6, which began as a redesign of Perl 5 in 2000, eventually evolved into a separate language. Both languages continue to be developed independently by different development teams and liberally borrow ideas from one another. The Perl languages borrow features from other programming languages including C, shell scripting (sh), AWK, and sed.&lt;ref name="perltimeline"&gt;&lt;/ref&gt; They provide powerful text processing facilities without the arbitrary data-length limits of many contemporary Unix commandline tools,&lt;ref name="programmingperl"&gt;&lt;/ref&gt; facilitating easy manipulation of text files. Perl 5 gained widespread popularity in the late 1990s as a CGI scripting language, in part due to its parsing abilities.&lt;ref name='roderick02'&gt;&lt;/ref&gt; In addition to CGI, Perl 5 is used for graphics programming, system administration, network programming, finance, bioinformatics, and other applications. It is nicknamed "the Swiss Army chainsaw &lt;!-- Note to editors. This should read *chainsaw*, not knife. Check the ref --&gt;of scripting languages" because of its flexibility and power,&lt;ref&gt;&lt;/ref&gt; and possibly also because of its "ugliness".&lt;ref&gt;&lt;/ref&gt; In 1998, it was also referred to as the "duct tape that holds the Internet together", in reference to both its ubiquitous use as a glue language and its inelegance.&lt;ref name='leonard98'&gt;&lt;/ref&gt; ]] Line: &lt;&lt;{{Infobox programming language&gt;&gt; Line: &lt;&lt;| name = Perl logo = paradigm = multi-paradigm: functional, imperative, object-&gt;&gt; Line: &lt;&lt;| oriented (class-based), reflective, procedural, Event-driven, generic year =&gt;&gt; Line: &lt;&lt;| 1987 designer = Larry Wall developer = Larry Wall latest_release_version =&gt;&gt; Line: &lt;&lt;| 5.20.0&lt;ref&gt;&lt;/ref&gt; latest_release_date = latest preview version =&gt;&gt; </code></pre>
<p>If you want five lines of data explicitly, then you can use the following regular expression <code>/((?:.*\n){5})/</code>:</p> <pre><code>use strict; use warnings; my $var = ''; $var .= "Line $_ of data\n" for (1..10); print "Before: &lt;&lt;$var&gt;&gt;\n"; if ($var =~ /((?:.*\n){5})/) { print "Five lines: &lt;&lt;$1&gt;&gt;\n"; } else { warn "No match, less than 5 lines"; } </code></pre> <p>Outputs:</p> <pre><code>Before: &lt;&lt;Line 1 of data Line 2 of data Line 3 of data Line 4 of data Line 5 of data Line 6 of data Line 7 of data Line 8 of data Line 9 of data Line 10 of data &gt;&gt; Five lines: &lt;&lt;Line 1 of data Line 2 of data Line 3 of data Line 4 of data Line 5 of data &gt;&gt; </code></pre> <p>If you want to always match if there is less than 5 lines available, you just need to adjust the regex slightly to: </p> <pre><code>if ($var =~ /((?:.*\n?){1,5})/) { </code></pre>