Inserting a hyphen when string changes from alpha to numeric
<p>Given a random alphanumeric string (A-Z0-9) between 1 to 10 characters long, I'd like to insert a hyphen when it changes from alpha to numeric, or numeric to alpha.</p> <p>I have something that works now, but I'm sure it performs as awful as it looks. I know there's a better way to handle this, but someone in the office made weak coffee this morning, or at least that's the excuse I'm going with. ;) </p> <p>I have to do this ~15 million times, so the faster, the better.</p> <p>Code snip:</p> <pre><code>my @letters = split //, $string; my $type; foreach my $letter ( @letters ) { if (! $type) { if ($letter =~ /^[A-Z]$/) { $type = 'a' } else { $type = 'd' } $string = $letter; next; } else { if ($type eq 'a') { if ($letter =~ /^[0-9]$/) { $string .= '-' . $letter; $type = 'd'; next; } else { $sring .= $letter; } } else { if ($letter =~ /^[A-Z]$/) { etc, etc. </code></pre> <p>Ugh, it hurts just looking at that.</p>
<p>This should work:</p> <pre><code>$string =~ s/([A-Z])([0-9])/$1-$2/g; $string =~ s/([0-9])([A-Z])/$1-$2/g; </code></pre> <p>Add the <code>/i</code> modifier if you want to to be case-insensitive.</p> <hr> <p>Probably faster (since it avoids captures), but requires 5.10:</p> <pre><code>$string =~ s/[A-Z]\K(?=[0-9])/-/g; $string =~ s/[0-9]\K(?=[A-Z])/-/g; </code></pre>