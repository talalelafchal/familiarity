How to listen to URL routes in perl
<p>I'm starting my first perl project, and wanted to know how to listen to different end points, I.e. <code>example.com/home</code> (how do you load an HTML page when someone visits this home route?</p> <p>Just a note that I'm not interested in using a framework for this particular project. Thanks</p>
<p>Well, I guess you could have a CGI program that interprets the path and takes the appropriate action. You could then combine that with a mod_rewrite rule that diverts all requests into that program.</p> <p>But it's all looking a bit kludgy and a framework would be a much better solution.</p>
<p>The simplest way to talk to a server is <a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface" rel="nofollow">CGI</a>. This is not Perl specific, but Perl was commonly used for it. It is very slow, but simple.</p> <p>Here is small demo. You put this in the cgi-bin directory of your server, and go go <a href="http://www.example.com/cgi-bin/cgidemo.cgi" rel="nofollow">http://www.example.com/cgi-bin/cgidemo.cgi</a> and back pops the content of the Perl @INC array.</p> <p>To hook it up to /home you could alias it in your .htaccess file.</p> <p>Of course, this is all ancient and slow stuff and has been far surpassed and sped up by fastcgi, mod_perl, and lots of other stuff. I like the Mojolicous framework myself.</p> <pre> <code> #!/usr/bin/perl # cgidemo.cgi - minimal CGI program use strict; use warnings; # Headers print "Content-type: text/plain\n"; # Blank line after header print "\n"; # Body print "Perl Include Path:\n"; print join("\n", @INC), "\n"; </code> </pre>