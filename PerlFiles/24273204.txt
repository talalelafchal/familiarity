Iterating through an array of Perl Hashes
<p>I have written a perl script which accessed JIRA REST API to GET a list of issues that match a specific JQL query. Sometimes thee results are only one issue and other times I get many back.</p> <pre><code>$client-&gt;GET( $apiPath.$jql.$fieldRes, $headers); #a perl hash of results my $response = from_json($client-&gt;responseContent()); </code></pre> <p>while $response is a perl hash, if I try to drill down into the hash I hit an issue. </p> <p>There is an array of "issues" within the hash.</p> <p>I am trying to pull data with "foreach" for each specific issue but I keep getting errors:</p> <pre><code>foreach my $issues ($response-&gt;{'issues'}) { print STDERR Dumper($issues-&gt;{'key'}); } </code></pre> <p>Error...</p> <pre><code>Pseudo-hashes are deprecated at script.pl line #. Argument "JIRA-10011" isn't numeric in hash element at script.pl line #. Bad index while coercing array into hash at script.pl line #. </code></pre> <p>Any help is appreciated</p>
<blockquote> <p>There is an array of "issues" within the hash.</p> </blockquote> <p>You cannot put arrays into hashes in Perl, this is only possible for array references. So you need to dereference it when iterating the hash(ref) with your <code>foreach</code>.</p> <pre><code>foreach my $issues ( @{ $response-&gt;{'issues'} } ) { print STDERR Dumper($issues-&gt;{'key'}); } </code></pre> <p>Since you will get one issue per iteration, you should rename <code>$issues</code> to <code>$issue</code> so you won't get confused later.</p>