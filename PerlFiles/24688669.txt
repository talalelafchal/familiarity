Return object handle from a subroutine
<p>I want to know if it is possible to return a object handle from a subroutine in a Perl program. I will use a specific example from a program that uses <a href="https://metacpan.org/pod/Mail::IMAPClient" rel="nofollow"><code>MAIL::IMAPClient</code></a></p> <p>Create client object handle</p> <pre><code>my $client = Mail::IMAPClient-&gt;new( Socket =&gt; $socket, User =&gt; $user, Password =&gt; $pass, ) or die "new(): $@"; </code></pre> <p>I would like to create this object handle from a sub routine instead</p> <pre><code>my $client = &amp;create_client_object; sub create_client_object { my $client = Mail::IMAPClient-&gt;new( Socket =&gt; $socket, User =&gt; $user, Password =&gt; $pass, ) or die "new(): $@"; return $client; } </code></pre> <p>If possible, what is the proper way to do this?</p>
<p>Yes, that works perfectly. Besides @Miller's comment, I'd recommend you to also pass the <code>$socket</code>, <code>$user</code> and <code>$pass</code> as parameters to your function instead of using them from context:</p> <pre><code>my $client = create_client_object($socket, $user, $pass); sub create_client_object { my ($socket, $user, $pass) = @_; my $client = Mail::IMAPClient-&gt;new( Socket =&gt; $socket, User =&gt; $user, Password =&gt; $pass, ) or die "new(): $@"; return $client; } </code></pre>