Perl push a key before a hash data set
<p>I managed to create a hash data set with a subroutine,</p> <pre><code>my %check_ip = ( "data1" =&gt; $ip1, "data2" =&gt; $ip2, "data3" =&gt; $ip3 ); 'data1' =&gt; '127.0.0.1', 'data2' =&gt; '192.168.0.1', 'data3' =&gt; '192.168.1.1' </code></pre> <p>This is a simple hash. I am looking to put another key behind this, so that this would become a hash of hash, and look like</p> <pre><code>config1 =&gt; 'data1' =&gt; '127.0.0.1', 'data2' =&gt; '192.168.0.1', 'data3' =&gt; '192.168.1.1', </code></pre> <p>What is the best way to do this? </p>
<p>Since a hash key can only have one value, the nested hash needs to be stored as a hash reference, which is what the curly braces <code>{}</code> are used for:</p> <pre><code>my %check_ip = ( config1 =&gt; { "data1" =&gt; $ip1, "data2" =&gt; $ip2, "data3" =&gt; $ip3, }, ); </code></pre> <p>See <a href="http://perldoc.perl.org/perldsc.html" rel="nofollow"><code>perldoc perldsc</code></a> for more information on Perl data structures.</p>
<p>To create a nested hash, you need a hash reference.</p> <pre><code>my %check_ip = ( data1 =&gt; $ip1, data2 =&gt; $ip2, data3 =&gt; $ip3, ); my %config = ( config1 =&gt; \%check_ip ); </code></pre>
<pre><code>#!/usr/bin/perl use strict; use warnings; my $ip1='127.0.0.1'; my $ip2='192.168.0.1'; my $ip3='192.168.1.1'; my %check_ip = ( config1 =&gt; { "data1" =&gt; $ip1, "data2" =&gt; $ip2, "data3" =&gt; $ip3, }, ); </code></pre> <p>Access like below:</p> <pre><code>print $check_ip{config1}{data1}; #output 127.0.0.1 </code></pre> <p><a href="http://ideone.com/26bchp" rel="nofollow"><strong>Demo</strong></a></p>