How to combine the output of regex and print in perl?
<p>Hi I have search result as,</p> <pre><code>"abc" </code></pre> <p>from </p> <pre><code>perl -lne 'print for /"name":"(.+?)"/g' file &gt; newfile </code></pre> <p>and </p> <pre><code>"def" </code></pre> <p>from</p> <pre><code>perl -lne 'print for /"title":"(.+?)"/g' file &gt; newfile </code></pre> <p>I'm trying to get the O/p as </p> <pre><code>abc:"def", </code></pre> <p>by combining both one liners. I tried with:</p> <pre><code>perl -lne 'print for /"name":"(.+?)","title":"(.+?)"/g' *.json &gt; newfile11 </code></pre> <p>but it didn't work</p>
<p>I think I figured this out based on the input from your other question.</p> <p>I'm assuming you have this as input:</p> <pre><code>{"card":{"cardName":"10AN10G","portSignalRates":["10AN10G-1-OTU2","10AN10G-1-OTU2E","10AN10G-1-TENGIGE","10AN10G-1-STM64"],"listOfPort":{"10AN10G-1-OTU2":{"portAid":"10AN10G-1-OTU2","signalType":"OTU2","tabNames":["PortDetails"],"requestType":{"PortDetails":"PTP"},"paramDetailsMap":{"PortDetails":[{"type":"dijit.form.TextBox","name":"signalType","title":"Signal Rate","id":"","options":[],"label":"","value":"OTU2","checked":"","enabled":"false","selected":""},{"type":"dijit.form.TextBox","name":"userLabel","title":"Description","id":"","options":[],"label":"","value":"","checked":"","enabled":"true","selected":""},{"type":"dijit.form.Select","name":"Frequency","title":"Transmit Frequency",}}}}}} </code></pre> <p>or at least a large text file containing those types of lines. You want to parse out the name and title from each line. You can do that with this one line.</p> <pre><code>Matt@MattPC ~/perl/testing/12 $ perl -ne 'if ( /"name":"([^"]+)","title":"([^"]+?)"/ ) { print $1 . ":\"" . $2 . "\",\n" }' input2.txt </code></pre> <p>which outputs:</p> <pre><code>signalType:"Signal Rate", </code></pre> <p>It works by capturing 2 group in the regex, one for the title and one for the name. The <code>-ne</code> flags go through each line the file and execute the code between the single quotes. <code>$1</code> and <code>$2</code> are the group we captured, and they are printed at the end.</p> <p>Just as a tip, it is much easier to help you if you post your input, expected output, errors you ran into, and code you've tried when asking question.</p> <hr> <p><strong>edit:</strong> just wanted to put a disclaimer that it is better to parse JSON with a module, because what if you have escaped <code>"</code> with in a title or name? This regex wouldn't pick it up, but JSON parsers can handle those types of cases for you.</p>