Win32::Console: InputChar and codepage 65001
<p>When I run this script in a Windows console where the active codepage is 65001 <code>InputChar</code> returns <code>undef</code> if I enter an <code>ö</code> (U+00F6). Does this mean that <code>InputChar</code> doesn't work with <code>cp65001</code>?</p> <pre><code>#!perl use warnings; use strict; use 5.10.0; use Devel::Peek; use Win32::Console; my $in = Win32::Console-&gt;new( STD_INPUT_HANDLE ); $in-&gt;Mode( ENABLE_PROCESSED_INPUT ); my $char = $in-&gt;InputChar(); Dump $char; say "{$char}"; </code></pre> <hr> <pre><code>C:&gt;chcp 65001 Active code page: 65001 C:&gt;perl.pl SV = NULL(0x0) at 0x12b6fac REFCNT = 1 FLAGS = (PADMY) Use of uninitialized value $char in concatenation (.) or string at ... line 21. {} </code></pre>
<p>If you look inside sub <a href="https://metacpan.org/source/JDB/Win32-Console-0.10/Console.pm" rel="nofollow">InputChar</a> you can see it uses <a href="https://metacpan.org/source/JDB/Win32-Console-0.10/Console.xs" rel="nofollow">_ReadConsole</a> which doesn't do unicode (i think char * isn't unicode)</p> <p>It also doesn't do unicode because of the way <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms684958(v=vs.85).aspx" rel="nofollow"> ReadConsole function (Windows) </a> is called, at least that is what documentation hints to me :)</p> <p><strong>update:</strong> OTOH, if I edit Win32-Console-0.10\Makefile.PL to add</p> <pre><code>DEFINE =&gt; ' -DUNICODE ', </code></pre> <p>and then recompile/reinstall Win32::Console, I can get <code>AöBöCöDö10</code> into the program using the following </p> <pre><code>my $chars = ShInputChar( $in, 10 ); sub ShInputChar { package Win32::Console; my($self, $number) = @_; return undef unless ref($self); $number = 1 unless defined($number); my $onumber = $number; ## double up or free to wrong pool, char versus wchar $number = 2 * $number; my $buffer = (" " x $number); my $readed = _ReadConsole($self-&gt;{'handle'}, $buffer, $number) ; my $err = sprintf "ErrSet \$!(%d)(%s)\n\$^E(%d)(%s)\n", $!,$!,$^E,$^E; use Encode; $buffer = Encode::decode('UTF-16LE', $buffer ); if ( $readed == $number or $onumber == $readed ) { return $buffer; } else { warn "wanted $number but read $readed returning buffer anyway"; return $buffer; } } </code></pre> <p>You should report this to the author , hes more knowledgeable about win32</p>
<p>I would be very cautious with <a href="http://search.cpan.org/~jdb/libwin32-0.29/" rel="nofollow"><code>libwin32</code></a> (of which <code>Win32::Console</code> is a part) as it was last updated over six years ago, in the early days of Windows Vista.</p> <p>You may want to try <a href="https://metacpan.org/module/Win32::Unicode::Console" rel="nofollow"><code>Win32::Unicode::Console</code></a> which has a very different API but is designed for your purpose.</p>