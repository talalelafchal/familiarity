svn merge using perl script
<p>This is my perl script to do svn merge.</p> <pre><code>$dir = 'D:\Transversal Unit\example\ace__project\branches\UAT'; print $dir."\n"; chdir($dir) or die "Fail $!"; $status = system("svn merge -c39,46 $sourceBranchURL"); print $status; </code></pre> <p>The problem in this is when the svn merge line is executed, the value of $status is always 0 whether there are conflicts or no. What I want is that if there are svn conflicts then I want to exit from the script and if no conflicts then further commit the code. I am not able to check for conflicts. Can anyone please help me in this?</p> <p>Thanks in advance...</p>
<p>With your approach of shelling out the commands, you could add an additional command which runs <code>svn status</code> and then parses the output for conflicts and make a decision based on this.</p> <p>See <a href="http://stackoverflow.com/questions/2882786/is-there-a-command-to-list-svn-conflicts">Is there a command to list SVN conflicts?</a> for regex examples...</p>
<blockquote> <p>The problem in this is when the svn merge line is executed, the value of $status is always 0 whether there are conflicts or no. </p> </blockquote> <p>That's not true. <code>svn merge</code> will return a non-zero status if the merge didn't work at all. For example, you didn't have a clean working directory. <code>svn merge</code> returns a non-zero value if the merge worked. And the merge works even if there are conflicts.</p> <p>Do a <code>--dry-run</code> first and open <code>svn merge</code> as a file handle:</p> <pre><code>use strict; use warnings; # I hope in your program, you're actually using these two pragmas # No you aren't. :-( # $dir = 'D:\Transversal Unit\example\ace__project\branches\UAT'; use feature qw(say); use autodie; my $dir = 'D:/Traversal Unit/example/ace__project/branches/UAT'; #Use forward slashes open my $merge, '|-', "svn merge -c39,46 --dry-run $sourceBranchURL"; </code></pre> <p>Now, you can read each line of output from your <code>svn merge</code> command and see if you have problems:</p> <pre><code>my $conflict_found; while ( my $line = &lt;$merge&gt; ) { chomp $line; if ( line =~ /^!/ ) { say "Conflict found: $line"; $conflict_found = 1; } } if ( $conflict_found ) { die qq(Conflicts were found. Do this by hand...); } # No conflicts, rerun `svn merge` without `--dry-run` ... </code></pre> <p>This way, you can check for conflicts before you actually run the merge command. If there are no conflicts, you can (almost) safely do the merge without problems.</p> <p>Remember that svn if there aren't conflicts doesn't mean the merge worked correctly. There may be a logical conflict even if the lines don't conflict:</p> <h3>Original file</h3> <pre><code>line #1 line #2 line #3 line #4 print "Foo = " + foo </code></pre> <h3>Change on trunk</h3> <pre><code>line #1 line #2 line #3 foo = "bar" line #4 print "Foo = " + foo </code></pre> <h3>Change on branch</h3> <pre><code>line #1 foo = "boof" line #2 line #3 line #4 print "Foo = " + foo </code></pre> <p>I am assuming that setting <code>foo</code> to <code>bar</code> on trunk and <code>boof</code> on the branch is a conflict. However, the merge will happily happen without conflicts:</p> <pre><code>line #1 foo = "boof" line #2 line #3 foo = "bar" line #4 print "Foo = " + foo </code></pre>