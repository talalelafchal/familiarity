merge partial matched strings
<p>I am struggling with trying to combine partially matched strings from two files.</p> <p>File 1 contains a list of unique strings. These strings are partially matched to a number of strings in File 2. How do I merge the rows in file 1 with file 2 for every matched case</p> <p>File1</p> <pre><code>mmu-miR-677-5p_MIMAT0017239 mmu-miR-181a-1-3p_MIMAT0000660 </code></pre> <p>File2</p> <pre><code>mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGA mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGACT mmu-miR-677-5p_TTCAGTGATGATTAGCTTCTGACT mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTAC mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTACC </code></pre> <p>Desired output</p> <pre><code>mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGA mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGACT mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_TTCAGTGATGATTAGCTTCTGACT mmu-miR-181a-1-3p_MIMAT0000660 mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTAC mmu-miR-181a-1-3p_MIMAT0000660 mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTACC </code></pre> <p>I have tried using <code>pmatch()</code> in R, but don't get it right. I looks like something perl would handle??</p> <p>Maybe something like this:</p> <pre><code>perl -ne'exec q;perl;, "-ne", q $print (/\Q$.$1.q;/?"$. YES":$. .q\; NO\;);, "file2" if m;^(.*)_pat1;' file1 </code></pre>
<p>Of course you may do it in R. Indeed, <code>pmatch</code>ing whole strings won't give you the desired result - you've got to match appropriate substrings.</p> <p>I assume that in file 1 the first identifier is 677 and not 667, otherwise it's hard to guess the matching scheme (I assume your example is only a part of a bigger database).</p> <pre><code>file1 &lt;- readLines(textConnection('mmu-miR-677-5p_MIMAT0017239 mmu-miR-181a-1-3p_MIMAT0000660')) file2 &lt;- readLines(textConnection('mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGA mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGACT mmu-miR-677-5p_TTCAGTGATGATTAGCTTCTGACT mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTAC mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTACC')) library(stringi) file1_id &lt;- stri_extract_first_regex(file1, "^.*?(?=_)") file2_id &lt;- stri_extract_first_regex(file2, "^.*?(?=_)") cbind(file1=file1[match(file2_id, file1_id)], file2=file2) ## file1 file2 ## [1,] "mmu-miR-677-5p_MIMAT0017239" "mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGA" ## [2,] "mmu-miR-677-5p_MIMAT0017239" "mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGACT" ## [3,] "mmu-miR-677-5p_MIMAT0017239" "mmu-miR-677-5p_TTCAGTGATGATTAGCTTCTGACT" ## [4,] "mmu-miR-181a-1-3p_MIMAT0000660" "mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTAC" ## [5,] "mmu-miR-181a-1-3p_MIMAT0000660" "mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTACC" </code></pre>
<p>You can <code>agrep</code> for fuzzy search. You should play with distance. Here I am fixing it manually to 11.</p> <p>Basically I am doing this to extract lines number that matches each word in file1:</p> <pre><code>sapply(file1,agrep,file2,max=11) $`mmu-miR-677-5p_MIMAT0017239` [1] 1 2 3 $`mmu-miR-181a-1-3p_MIMAT0000660` [1] 4 5 </code></pre> <p>To get the result of a data.frame:</p> <pre><code>do.call(rbind, lapply(file1, function(x) data.frame(file1=x, file2=agrep(x,file2,max=11,value=T)))) file1 file2 1 mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGA 2 mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGACT 3 mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_TTCAGTGATGATTAGCTTCTGACT 4 mmu-miR-181a-1-3p_MIMAT0000660 mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTAC 5 mmu-miR-181a-1-3p_MIMAT0000660 mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTACC </code></pre>
<p>This is a brief Perl solution, which saves all the data from <code>file1</code> in a hash and then retrieves it as <code>file2</code> is scanned</p> <pre><code>use strict; use warnings; use autodie; my @files = qw/ file1.txt file2.txt /; my %file1 = do { open my $fh, '&lt;', $files[0]; map /([^_]+)_(\S+)/, &lt;$fh&gt;; }; open my $fh, '&lt;', $files[1]; while (&lt;$fh&gt;) { my ($key) = /([^_]+)/; printf "%-32s%s", "${key}_$file1{$key}", $_; } </code></pre> <p><strong>output</strong></p> <pre><code>mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGA mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_CTTCAGTGATGATTAGCTTCTGACT mmu-miR-677-5p_MIMAT0017239 mmu-miR-677-5p_TTCAGTGATGATTAGCTTCTGACT mmu-miR-181a-1-3p_MIMAT0000660 mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTAC mmu-miR-181a-1-3p_MIMAT0000660 mmu-miR-181a-1-3p_ACCATCGACCGTTGATTGTACC </code></pre>