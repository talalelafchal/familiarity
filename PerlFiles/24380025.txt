Delete one character at End of File in PERL
<p>So I have encountered a problem while programming with PERL. I use a foreach loop to get some data out of the hash, so it has to loop through it.</p> <p><strong>The Code:</strong></p> <pre><code>foreach $title (keys %FilterSPRINTHASH) { $openSP = $FilterSPRINTHASH{$title}{openSP}; $estSP = $FilterSPRINTHASH{$title}{estSP}; $line = "'$title':{'openSP' : $openSP, 'estSP' : $estSP}\n"; print $outfile "$line\n"; } </code></pre> <p>The thing is, that I am creating a seperate File with the PERL's writting to a file expression, which will be a JSONP text (later used for HTML).</p> <p>Back to the problem:</p> <p>As JSONP requires comma's "," after every line that is not the last one, i had to put a comma at the end of line, <strong>however</strong> when the last line comes in, I have to remove the comma.</p> <p>I have tried with CHOP function, but not sure where to put it, since if I put it at the end of foreach, it will just chop the comma in $line, but this wont chop it in the new file I created.</p> <p>I have also tried with while (&lt;>) statement, with no success.</p> <p>Any ideas appreaciated.</p> <p>BR</p>
<p>You can check if it is the last iteration of the loop, then remove the comma from line.</p> <p>So something like</p> <pre><code>my $count = keys %FilterSPRINTHASH; #Get number of keys (scalar context) my $loop_count = 1; #Use a variable to count number of iteration foreach $title (keys %FilterSPRINTHASH){ $openSP = $FilterSPRINTHASH{$title}{openSP}; $estSP = $FilterSPRINTHASH{$title}{estSP}; $line = "'$title':{'openSP' : $openSP, 'estSP' : $estSP}\n"; if($loop_count == $count){ #this is the last iteration, so remove the comma from line $line =~ s/,+$//; } print $outfile "$line\n"; $loop_count++; } </code></pre>
<p>i would approach this by storing your output in an array and then joining that with the line separators you wish:</p> <pre><code>my @output; # storage for output foreach $title (keys %FilterSPRINTHASH) { # create each line my $line = sprintf "'%s':{'openSP' : %s, 'estSP' : %s}", $title, $FilterSPRINTHASH{$title}{openSP}, $FilterSPRINTHASH{$title}{estSP}; # and put it in the output container push @output, $line; } # join all outputlines with comma and newline and then output print $outfile (join ",\n", @output); </code></pre>
<p>Using <code>JSON</code> module is far less error prone; no need to reinvent the wheel</p> <pre><code>use JSON; print $outfile encode_json(\%FilterSPRINTHASH), "\n"; </code></pre>