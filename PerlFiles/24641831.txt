How to cancel a long time operation in WxPerl
<p>I have a program like this</p> <pre><code>... $self-&gt;{bn1}=Wx::Button-&gt;new( $tb1, -1, 'Start'); EVT_BUTTON( $self, $self-&gt;{bn1}, \&amp;on_click_start ); ... ... sub on_click_start { my( $this, $event ) = @_; $this-&gt;{bn1}-&gt;SetLabel("Cancel"); $event-&gt;Skip; for (...) { long_time_operation(); last if ( Cancel_clicked ); } } ... </code></pre> <p>My problem is when I click the <strong>Start</strong> button, <strong>on_click_start()</strong> will be called, and I want change the label of <strong>Start</strong> button to <strong>Cancel</strong>, that allow I to click the button to break out the <strong>long_time_operation()</strong> loop.</p> <p>How do I make right code for it?</p>
<p>The only real solution is to use multiple threads and perform the long operation in a background thread. If you want to keep your code simple, you can use <code>wxYield()</code> to handle the events from inside this event handler, but be aware that this may (and will) result in difficult to debug problems due to reentrancy, so at the very least you need to disable the rest of your UI if you're doing it like this.</p>
<p>Try with a wxTimer and start it in your on_click_start function. Put the long time operation code under the event of the timer (ensure that it dont trigger repeteadly, just stop the timer there too). Inside your long operation function use some global var to know if you want to cancel. In the event of your button now change the value of your global var so your long term code knows about that and cancels/break from the loop.</p> <p>I am not sure if a loop under the event of the timer can hang your UI, but it appears to use threads, so that may not happen. Try it anyway, i always use wxTimer when I need something like that (dont hanging the UI and not using threads directly).</p>