Communicating BigFloat between client and server using JSON in Perl
<p>I'm transmitting monetary values between client and server and I'm using <a href="https://metacpan.org/pod/Math%3a%3aBigFloat" rel="nofollow"><code>Math::BigFloat</code></a> (in Perl) to maintain the precision of the values. My problem is that when communicating between client and server, I'm using <a href="https://metacpan.org/pod/JSON" rel="nofollow"><code>JSON</code></a>, and am getting an error when using the <code>from_json</code> and <code>to_json</code> shortcuts in Perl.</p> <p>The error says I've not enabled either allow_blessed or convert_blessed. Is there a way enable these while still using the from_json and to_json shortcuts and not have to use the OO interface (<code>$json = JSON->new->allow_nonref;</code>)</p> <p>More generally, what is the correct way to handle JSON communication between server and client of high precision numeric types?</p>
<p>The easiest thing is probably to stringify the number, and then turn it back into a Math::BigFloat on the other side.</p> <p>For example:</p> <pre><code>package Client; use strict; use warnings; use Math::BigFloat; use JSON qw(to_json); my $pi = Math::BigFloat-&gt;bpi(1000); my $json = to_json { pi =&gt; $pi-&gt;bstr }; say $json; </code></pre> <p>And then:</p> <pre><code>package Server; use strict; use warnings; use Math::BigFloat; use JSON qw(from_json); my $json = '{ "pi":"3.14159" }'; my $hashref = from_json($json); my $pi = Math::BigFloat-&gt;new($hashref-&gt;{pi}); say $pi; </code></pre>