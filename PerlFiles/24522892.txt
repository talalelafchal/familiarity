Writing a script to show every permutations of a set of variables
<p>I am attempting to write a perl script which can figure out exactly how many permutations are possible from set of variables. The variables in question have a set number of options. </p> <p>For example:</p> <pre><code>Var1 [Yes|No] Var2 [Yes|No|Maybe] Var3 [1|2|3|4] Var4 [Yes|No] Var5 [Yes|No|Maybe] </code></pre> <p>However, there are about 15 different variables, and these may change. Can anyone provide a general idea of what logic to use in order to find every permutation of this data set?</p> <p>The only way I can think to do this is by storing everything in a data structure and using nested loops, but every time I try to write something it becomes a jumbled mess.</p> <p>Thanks in advance.</p>
<p>Since you didn't ask a specific question, I assume you need help finding an algorithm?</p> <ol> <li>For each line, <ol> <li>Parse the line to extract the tokens.</li> <li>For each permutations returned by any of a number of easy-to-find functions on CPAN, <ol> <li>Print the permutation.</li> </ol></li> </ol></li> </ol> <p>If you need any help with any specific aspect, show us what you tried so we can help fix your problem.</p>
<p>Using array <code>@c</code> to store indexes which are used to retrieve values from <code>@arr</code>,</p> <pre><code>my @arr = ( [qw/Yes No/], [qw/Yes No Maybe/], [qw/1 2 3 4/], [qw/Yes No/], [qw/Yes No Maybe/], ); my @c = (0) x @arr; ITER: while (1) { my @comb = map $arr[$_][ $c[$_] ], 0 .. $#arr; print join("|", @comb), "\n"; my $i = 0; ADVANCE_I: { if (++$c[$i] &gt; $#{ $arr[$i] }) { $c[$i] =0; last ITER if ++$i &gt; $#arr; redo ADVANCE_I; } } } </code></pre>
<p>Could just use simple recursion:</p> <pre><code>use strict; use warnings; my @options = map {/\[(.*?)\]/ ? [split /\|/, $1] : die $_} &lt;DATA&gt;; alloptions(\@options); sub alloptions { my $options = shift; my $index = shift || 0; my $vals = shift || []; for my $val (@{ $options-&gt;[$index] }) { if ($index == $#$options) { print "@$vals $val\n"; } else { alloptions($options, $index + 1, [@$vals, $val]); } } } __DATA__ Var1 [Yes|No] Var2 [Yes|No|Maybe] Var3 [1|2|3|4] Var4 [Yes|No] Var5 [Yes|No|Maybe] </code></pre> <p>Outputs:</p> <pre><code>Yes Yes 1 Yes Yes Yes Yes 1 Yes No Yes Yes 1 Yes Maybe Yes Yes 1 No Yes Yes Yes 1 No No Yes Yes 1 No Maybe Yes Yes 2 Yes Yes Yes Yes 2 Yes No Yes Yes 2 Yes Maybe Yes Yes 2 No Yes Yes Yes 2 No No Yes Yes 2 No Maybe Yes Yes 3 Yes Yes Yes Yes 3 Yes No Yes Yes 3 Yes Maybe Yes Yes 3 No Yes Yes Yes 3 No No Yes Yes 3 No Maybe Yes Yes 4 Yes Yes Yes Yes 4 Yes No Yes Yes 4 Yes Maybe Yes Yes 4 No Yes Yes Yes 4 No No Yes Yes 4 No Maybe Yes No 1 Yes Yes Yes No 1 Yes No Yes No 1 Yes Maybe Yes No 1 No Yes Yes No 1 No No Yes No 1 No Maybe Yes No 2 Yes Yes Yes No 2 Yes No Yes No 2 Yes Maybe Yes No 2 No Yes Yes No 2 No No Yes No 2 No Maybe Yes No 3 Yes Yes Yes No 3 Yes No Yes No 3 Yes Maybe Yes No 3 No Yes Yes No 3 No No Yes No 3 No Maybe Yes No 4 Yes Yes Yes No 4 Yes No Yes No 4 Yes Maybe Yes No 4 No Yes Yes No 4 No No Yes No 4 No Maybe Yes Maybe 1 Yes Yes Yes Maybe 1 Yes No Yes Maybe 1 Yes Maybe Yes Maybe 1 No Yes Yes Maybe 1 No No Yes Maybe 1 No Maybe Yes Maybe 2 Yes Yes Yes Maybe 2 Yes No Yes Maybe 2 Yes Maybe Yes Maybe 2 No Yes Yes Maybe 2 No No Yes Maybe 2 No Maybe Yes Maybe 3 Yes Yes Yes Maybe 3 Yes No Yes Maybe 3 Yes Maybe Yes Maybe 3 No Yes Yes Maybe 3 No No Yes Maybe 3 No Maybe Yes Maybe 4 Yes Yes Yes Maybe 4 Yes No Yes Maybe 4 Yes Maybe Yes Maybe 4 No Yes Yes Maybe 4 No No Yes Maybe 4 No Maybe No Yes 1 Yes Yes No Yes 1 Yes No No Yes 1 Yes Maybe No Yes 1 No Yes No Yes 1 No No No Yes 1 No Maybe No Yes 2 Yes Yes No Yes 2 Yes No No Yes 2 Yes Maybe No Yes 2 No Yes No Yes 2 No No No Yes 2 No Maybe No Yes 3 Yes Yes No Yes 3 Yes No No Yes 3 Yes Maybe No Yes 3 No Yes No Yes 3 No No No Yes 3 No Maybe No Yes 4 Yes Yes No Yes 4 Yes No No Yes 4 Yes Maybe No Yes 4 No Yes No Yes 4 No No No Yes 4 No Maybe No No 1 Yes Yes No No 1 Yes No No No 1 Yes Maybe No No 1 No Yes No No 1 No No No No 1 No Maybe No No 2 Yes Yes No No 2 Yes No No No 2 Yes Maybe No No 2 No Yes No No 2 No No No No 2 No Maybe No No 3 Yes Yes No No 3 Yes No No No 3 Yes Maybe No No 3 No Yes No No 3 No No No No 3 No Maybe No No 4 Yes Yes No No 4 Yes No No No 4 Yes Maybe No No 4 No Yes No No 4 No No No No 4 No Maybe No Maybe 1 Yes Yes No Maybe 1 Yes No No Maybe 1 Yes Maybe No Maybe 1 No Yes No Maybe 1 No No No Maybe 1 No Maybe No Maybe 2 Yes Yes No Maybe 2 Yes No No Maybe 2 Yes Maybe No Maybe 2 No Yes No Maybe 2 No No No Maybe 2 No Maybe No Maybe 3 Yes Yes No Maybe 3 Yes No No Maybe 3 Yes Maybe No Maybe 3 No Yes No Maybe 3 No No No Maybe 3 No Maybe No Maybe 4 Yes Yes No Maybe 4 Yes No No Maybe 4 Yes Maybe No Maybe 4 No Yes No Maybe 4 No No No Maybe 4 No Maybe </code></pre>