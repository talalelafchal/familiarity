In Perl, how to match several prefixes
<p>I have 2 input files. One is a list of prefix and lengths, like this:</p> <pre><code>101xxx 102xxx 30xx 31xx </code></pre> <p>(where x is any number)</p> <p>And another is a list of numbers.</p> <p>I want to iterate through the second file, matching each number against any of the prefix/lengths. This is fairly easy. I build a list of regexps:</p> <pre><code>my @regexps = ('101...', '102...', '30..', '31..'); </code></pre> <p>Then:</p> <pre><code>foreach my $regexp (@regexps) { if (/$regexp/) { # do something </code></pre> <p>But, as you can guess, this is slow for a long list.</p> <p>I could convert this to a single regexp:</p> <pre><code>my $super_regexp = '101...|102...|30..|31..'; </code></pre> <p>...but, what I need is to know <em>which</em> regexp matched the item, and what the ..s matched.</p> <p>I tried this:</p> <pre><code>my $catching_regexp = '(101)(...)|(102)(...)|(30)(..)|(31)(..)'; </code></pre> <p>but then I don't know whether to look in $1, $3, %5 or $7.</p> <p>Any ideas? How can I match against any of these prefix/lengths and know which prefix, and what the remaining digits where?</p>
<p><strong>Update:</strong></p> <p>I think I missed some of what you were going for. If different prefixes have different sub-expressions (<code>...</code> vs <code>..</code>) and you want to capture/reference what the sub-expression matched...you can use a lookbehind:</p> <pre><code>((?&lt;=101|102).{3}|(?&lt;=30|31).{2}) </code></pre> <p>This will capture everything, and if it is prefixed by <code>101|102</code> it will match 3 characters; if it is prefixed by <code>30|31</code>, it will match 2 characters. We only use one capture group, so your <code>xxx</code>'s will always be in <code>$1</code>.</p> <p><a href="http://regex101.com/r/aL9wK3" rel="nofollow"><strong>Demo</strong></a></p> <p>And if you also want to capture the prefix, you can <a href="http://regex101.com/r/iI0dN2" rel="nofollow">include a lazy capture group before the secondary grouping</a> of lookbehinds:</p> <pre><code>(.*?)((?&lt;=101|102).{3}|(?&lt;=30|31).{2}) </code></pre> <p>Your prefixes will be in group 1, and your suffixes in group 2.</p> <hr> <p>Use alternation within a group:</p> <pre><code>(101|102|30|31)... </code></pre> <p>This will create an extra captured group, though..so you can also use a "non-capturing" group:</p> <pre><code>(?:101|102|30|31)... </code></pre> <p><a href="http://regex101.com/r/qZ5yU0" rel="nofollow"><strong>Demo</strong></a></p> <hr> <p>You can do as much logic as you want to with this mentality. It's similar to how you would need to group conditionals in any language:</p> <pre><code>if(a === true &amp;&amp; (b === false || b === null)) {} </code></pre>
<p>You can use the <a href="http://perldoc.perl.org/perlretut.html#Alternative-capture-group-numbering" rel="nofollow">branch reset pattern</a>, if your Perl is sufficiently recent (5.10 and newer):</p> <pre><code>my $regex = qr/^(?|(101)(...)|(102)(...)|(30)(..)|(31)(..))$/; while (&lt;&gt;) { print "$1, $2\n" if /$regex/; } </code></pre>