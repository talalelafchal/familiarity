How to remove a text field on a CGI perl webpage?
<p>I am rewriting this question to make it specific: </p> <p>The requirement of the webpage is </p> <ol> <li>Read the rules from a file and populate the text-boxes when the webpage is loaded</li> <li>An add button to add additional textboxes </li> <li>A save button to save the rules ( including the additionally added ones back to the file) </li> <li>A delete button to delete the textboxes which are checked so that the rules in them are not stored back to the file.</li> </ol> <p>My approach : </p> <ol> <li>Use "read_rules" submodule to read the rules from the webpage and if its non empty then use "rule" submodule to print them on webpage. Here each line in the file is read and split with spaces and put in a array of hash and prints on the webpage ("rules" module).</li> <li>When the sumit button is pressed sumodule "save_rules" is called which saves the rules. The reverse way as in read_rules.</li> <li>An add button will add additional text areas.</li> <li><strong>A delete button should delete the text areas which are checked and reload the page so when the page is reloaded the text areas which were checked wont appear and hence when save button is pressed they are not saved in file</strong> ??? (this I have to implement) </li> </ol> <p>The code blocks of each submodule I have mentioned are below. </p> <p>This submodule to print the text boxes and checkbox: </p> <pre><code>sub rule { my($num,$rule) = @_; return join "\n", "&lt;tr&gt;&lt;td&gt;&lt;br&gt;", hidden( -name =&gt; "idx$num", -default =&gt; $rule-&gt;{idx}, ), checkbox( -name =&gt; "checkbox$num", -label =&gt; "", -value =&gt; "on", ), "&lt;td&gt;", textfield( -name =&gt; "repository$num", -size =&gt; 30, -default =&gt; $rule-&gt;{'repo'}, ), "&lt;td&gt;", textfield( -name =&gt; "branch$num", -size =&gt; 30, -default =&gt; $rule-&gt;{'branch'}, ), "&lt;td&gt;", textfield( -name =&gt; "file$num", -size =&gt; 30, -default =&gt; $rule-&gt;{'file'}, ), } </code></pre> <p>This sumodule to read the rules from file </p> <pre><code>sub read_rules { my $rule; @rules = ..# read the rules from a file, each line is read as an element of an array for $rule (@rules){ my $rec = {}; ($re,$br,$fi) = split (' ', $rule); $rec-&gt;{'repo'} = $re; $rec-&gt;{'branch'} = $br; $rec-&gt;{'file'} = $fi; push @config, $rec; } } </code></pre> <p>The sumodule to save the rule on webpage ( in text area) back to the file sub save_rules {</p> <pre><code> for ($i = 1; param("repository$i"); $i++) { $repo1 = param("repository$i"); $branch1 = param("branch$i"); $file1 = param("file$i"); my $record = {}; # save back $myrec-&gt;{'repo1'} $myrec-&gt;{'branch1'} $myrec-&gt;{'file1'} to file } } </code></pre> <p>Main function </p> <pre><code>print start_form(); read_rules(); Delete_all(); my $i = 0; if (@config) { foreach $conf (@config) { $i++; print rule($i,$conf); } print $table_header_string; if (param("action") eq "Add") { print(br,rule(++$i),hr); } print p( submit (-name =&gt; "action" , -value =&gt; "Add")); print p( submit (-name =&gt; "action" , -value =&gt; "Save")); print p( submit (-name =&gt; "action" , -value =&gt; "Delete")); print end_form(); exit 0; </code></pre> <p>Delete_rule submodule below has to be coded !! sub delete_rule(){ #................ }</p> <p>I would appreciate if some one tells me how to use javascript in cgi so I don't have to load webpage every time a button is pressed.</p>
<p><strong>Edited to address more specific question</strong></p> <p>Given that you don't want to reload the page each time the button is clicked, you are going to want to use JavaScript to do this. I'll explain how here, and you can <a href="http://jsfiddle.net/v43Va/2/" rel="nofollow">click here to see a working jsfiddle example</a>.</p> <pre><code>&lt;!doctype html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Remove Element On Button Click&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;input type="text" id="myTextBox" value="something here"&gt; &lt;input type="button" id="btnDelete"&gt; &lt;/body&gt; &lt;script&gt; document.getElementById('btnDelete').onclick = function () { var textbox = document.getElementById('myTextBox'); textbox.parentNode.removeChild(textbox); } &lt;/script&gt; &lt;/html&gt; </code></pre> <p>Notice that I changed the type of input element from <code>submit</code> to <code>button</code>. This automatically prevents the page from reloading.</p> <p>If you absolutely must use a <code>submit</code> input element (and the jsFiddle example does), you can prevent form submission by changing the Javascript thusly:</p> <pre><code>document.getElementById('btnDelete').onclick = function (evt) { if (!evt) var evt = window.event; if (evt.preventDefault) { evt.preventDefault(); } else { evt.returnValue = false; } var textbox = document.getElementById('myTextBox'); textbox.parentNode.removeChild(textbox); } </code></pre> <p>The JavaScript can be placed in an external file, if prefered. It's placed at the end of the HTML here so as to ensure that the DOM had fully loaded (and hence the button was available in the DOM) prior to attempting to attach an event handler.</p> <p>It was unclear to me whether there would be one or multiple 'Delete' buttons in your output, or if there would be one or multiple fields that would need to be removed, but this should point you in the right direction.</p> <p>This is a pure JavaScript solution. As @vol7ron correctly pointed out, there are JavaScript frameworks, like jQuery, that could be used to do this as well, and if you are already using such a framework it would be advantageous to utilize it, however no such framework is in anyway required to accomplish this.</p>