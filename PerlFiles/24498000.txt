Restoring correct line number with Keyword::Simple
<p>I'm using <a href="https://metacpan.org/pod/Keyword%3a%3aSimple" rel="nofollow">Keyword::Simple</a> to interface with the Perl keyword API to inject some custom code. Problem is, if my custom code has newlines in it, any errors in the code will be reported from the wrong line in the original file. For example:</p> <pre><code># KWTest.pm package KWTest; use strict; use warnings; use Keyword::Simple; sub import { my $class = shift; Keyword::Simple::define mydie =&gt; sub { my $ref = shift; substr $$ref, 0, 0, qq{\n\n\n\n\n die "oh noes!!!!"}; }; } 1; </code></pre> <p>Then</p> <pre><code>perl -MKWTest -E 'mydie' oh noes!!!! at -e line 6. </code></pre> <p>I know that <code>perl</code> will respect <code>#line</code> directives to change the reported line number, but in order to inject these in generated code I would need to know the pre-munged line number first.</p> <p>I suppose I could also do it by just making sure my generated code contains no newlines, but that seems less fun.</p>
<p>The trick is when you're parsing code, count how many line breaks you skip over, and then when you inject code, inject the same number of line breaks, and don't inject any unnecessary line breaks. It's a bit of work, but it <a href="https://metacpan.org/source/TOBYINK/Moops-0.031/t/03lines.t" rel="nofollow">can be done</a>.</p>