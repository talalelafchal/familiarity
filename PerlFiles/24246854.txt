Disallowed characters while passing cookies to a PHP site
<p>I am writing a perl program to get the content of one website. while passing cookie in the request, the response i am getting is <strong>Disallowed Key Characters.</strong>. The webpage, i am trying to get the content of, is designed using PHP. Is there any other way of passing cookies in a clean manner and get the content of the page,same as the browsers do? The perl snippet is as follows:</p> <pre><code>my $req = HTTP::Request-&gt;new(GET =&gt; $link); $req-&gt;header("Host" =&gt; "www.example.com/sms"); $req-&gt;header('User-Agent' =&gt; 'Mozilla/5.0 (Windows NT 6.1; rv:29.0) Gecko/20100101 Firefox/29.0'); $req-&gt;header("Accept" =&gt; "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"); $req-&gt;header("Accept-Language" =&gt; "en-us,en;q=0.5"); $req-&gt;header('Referer' =&gt; 'www.example.com/sms'); $req-&gt;header("Cookie" =&gt; 'ci_session=a:15:{s:10:"session_id";s:32:"6a023126d470b5c23231f38b00be945f";s:10:"ip_address";s:14:"122.165.230.17";s:10:"user_agent";s:76:"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:30.0) Gecko/20100101 Firefox/30.0";s:13:"last_activity";i:1402922915;s:9:"user_data";s:0:"";s:1:"u";s:7:"username";s:2:"id";s:2:"47";s:7:"uidtype";s:1:"0";s:2:"to";s:0:"";s:4:"from";s:0:"";s:6:"userid";s:0:"";s:3:"fto";s:0:"";s:5:"ffrom";s:0:"";s:12:"sendcontacts";s:0:"";s:6:"checks";s:0:"";}4bdd1a196f5e2fff297cbc0333fde8be'); $req-&gt;header("Connection" =&gt; "keep-alive"); my $res = $usragt-&gt;request($req); my $code = $res-&gt;code(); my $content = $res-&gt;content(); print "\n&lt;p&gt;$content&lt;/p&gt;\n"; </code></pre> <p><strong>Output:</strong></p> <pre><code>&lt;p&gt;Disallowed Key Characters.s:32:"6a023126d470b5c23231f38b00be945f"&lt;/p&gt; </code></pre>
<p>I was going to put this in a comment since it's not really an <em>answer</em>, but it's too long:</p> <p>I'm looking at the structure of your <em>cookie</em>, and it's a bit suspicious looking. Here's the breakdown of that cookie:</p> <pre><code>ci_session=a:15: { s:10:"session_id"; s:32:"6a023126d470b5c23231f38b00be945f"; s:10:"ip_address"; s:14:"122.165.230.17"; s:10:"user_agent"; s:76:"Mozilla/5.0 (X11;Ubuntu;Linux x86_64;rv:30.0) Gecko/20100101 Firefox/30.0"; s:13:"last_activity"; i:1402922915; s:9:"user_data"; s:0:""; s:1:"u"; s:7:"username"; s:2:"id"; s:2:"47"; s:7:"uidtype"; s:1:"0"; s:2:"to"; s:0:""; s:4:"from"; s:0:""; s:6:"userid"; s:0:""; s:3:"fto"; s:0:""; s:5:"ffrom"; s:0:""; s:12:"sendcontacts"; s:0:""; s:6:"checks"; s:0:""; } 4bdd1a196f5e2fff297cbc0333fde8be'); </code></pre> <p>That last line <strong>could</strong> be cookie data, but the rest looks like something else. Cookies are bits of data that point to a unique ID set by the server. They usually have a <em>name</em> and a <em>value</em> associated with it. </p> <p>The purpose of a cookie is to identify the browser that had previously visited the site. HTTP has no state, and cookies could help establish a state. For example, if you visit a store, a cookie could be set to represent your personal shopping cart. The items you buy won't be stored in the cookie -- only the cart ID. This way, the server can recognize you as you move around the store.</p> <p>A cookie could contain an id that recognizes you as a user. For example, I log into a site, and check the <em>keep me logged in</em> box. A cookie is set to identify my user ID. When I return to the site, the site sees the cookie that's associated with a particular ID and skips the login process.</p> <p>The point is that cookies themselves are usually short and sweet. Maybe 64 characters at the most. They may have an expiration date associated with it. Your <em>cookie</em> doesn't look like this. It's long, it's complex, and it contains a lot of stuff that are other parts of a header. I see IP address, Session_ID, User Agent, and what looks like some sort of query in that string. Much of it would change from system to system, so it'd make a terrible cookie.</p> <p>Did you check the return status code from that webpage? I wouldn't be surprised if it was a <code>200</code> OK code. If that's the case, it means you've successfully contacted the server, and talked to that PHP page. It's the PHP page that's sending you back the <em>error</em>. </p> <p>Since it's in the <code>session_id</code>, it could be that it's an invalid Session ID. Or, it could be almost anything else. You're talking to a PHP program, and it's hard to say what the error could possibly mean in that case.</p> <p>You may need to find out how to chat with this webpage you want to talk to. Find out exactly the headers you need. Using <code>curl</code>could help. You can play around with the <code>--data</code> headings and see what's going on.</p> <p>Sorry I can't give you a better answer than this.</p>