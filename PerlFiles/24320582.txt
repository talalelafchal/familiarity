Transforming CSV data into a hash using Perl
<p>I'm new to Perl. I'm trying to create a hash from a CSV file.</p> <p>My CSV data currently looks like this:</p> <pre class="lang-none prettyprint-override"><code>id,name,title,rating 123,Andrew,Book 1,3 1221,Abraham,Book 2,4 43,Annie,Book 3,1 </code></pre> <p>I'd like the hash to look like this</p> <pre class="lang-perl prettyprint-override"><code>$reviews = { review =&gt; [ { id =&gt; [ 123 ], name =&gt; [ Andrew ], title =&gt; [ "Book 1" ], rating =&gt; [ 3 ], }, { id =&gt; [ 1221 ], name =&gt; [ Abraham ], title =&gt; [ "Book 2" ], rating =&gt; [ 4 ]] }, { id =&gt; [ 43 ], name =&gt; [ Annie ], title =&gt; [ "Book 3" ], edition =&gt; [ 1 ], }, ] }; </code></pre> <p>But I'm getting this instead</p> <pre class="lang-perl prettyprint-override"><code>$VAR1 = { '123' =&gt; { 'name' =&gt; 'Andrew', 'title' =&gt; 'Book 1', 'id' =&gt; '123', 'rating' =&gt; '3', }, '1221' =&gt; { 'name' =&gt; 'Abraham', 'title' =&gt; 'Book 2', 'id' =&gt; '1221', 'rating' =&gt; '4', }, '43' =&gt; { 'name' =&gt; 'Annie', 'title' =&gt; 'Book 3', 'id' =&gt; '43', 'rating' =&gt; '1', } }; </code></pre> <p>Here's the code I'm using so far. My CSV is in the <code>output.csv</code> file and I'm printing the hash in the <code>hashr.txt</code> file</p> <pre class="lang-none prettyprint-override"><code>my %hash; open (RESULTS, "output.csv")|| die "Can't open output.csv: $!\n"; open (HASHR, "+&gt;hashr.txt")|| die "Can't open hashr.txt: $!\n"; while (&lt;RESULTS&gt;) { last if /id/ } my $labels = $_; #save last line to label keys chop $labels; while (&lt;RESULTS&gt;) { chomp; my @array = split /,/; my $index = 0; my %h = map { $_ =&gt; $array[$index++]} split( ",", $labels ); #my $key = "review"; #$hash{$key}=\%h; $hash{ $array[0] } = \%h; } print Dumper(\%hash); print HASHR Dumper(\%hash); close RESULTS; </code></pre>
<p>Your desired data structure is strange, but the following should get you closer to what you say you want.</p> <p>You probably could use a refresher of <a href="http://perldoc.perl.org/perldsc.html" rel="nofollow"><code>perldsc</code></a> to learn more about Complex Data Structures.</p> <pre><code>use strict; use warnings; my $header = &lt;DATA&gt;; chomp $header; my @headers = split /,/, $header; my @records; while (&lt;DATA&gt;) { chomp; my @cols = split /,/; my %hash; @hash{@headers} = map [$_], @cols; push @records, \%hash; } use Data::Dump; dd \@records; __DATA__ id,name,title,rating 123,Andrew,Book 1,3 1221,Abraham,Book 2,4 43,Annie,Book 3,1 </code></pre> <p>Outputs:</p> <pre><code>[ { id =&gt; [123], name =&gt; ["Andrew"], rating =&gt; [3], title =&gt; ["Book 1"] }, { id =&gt; [1221], name =&gt; ["Abraham"], rating =&gt; [4], title =&gt; ["Book 2"] }, { id =&gt; [43], name =&gt; ["Annie"], rating =&gt; [1], title =&gt; ["Book 3"] }, ] </code></pre>
<pre><code>review =&gt; [ { id =&gt; [ 123 ], name =&gt; [ Andrew ], title =&gt; [ "Book 1" ], rating =&gt; [ 3 ], }, '123' =&gt; { 'name' =&gt; 'Andrew', 'title' =&gt; 'Book 1', 'id' =&gt; '123', 'rating' =&gt; '3', }, my %h = map { $_ =&gt; $array[$index++]} split( ",", $labels ); to my %h = map { $_ =&gt; @{$array[$index++]}} split( ",", $labels ); </code></pre> <p>It's been years since I've touched perl, so that syntax is probably way off but the gist is you'll want to place the values generated into an array, then wrap it all in an array</p>