Perl Regex Trying to read macros in my comments
<p>I have a program that embeds commands into comments of XML files, properties files, and other files. I recognize three different types of comments:</p> <ul> <li>Perl and Shell script comments (Lines beginning with <code>#</code>)</li> <li>Python and Java style comments (Lines beginning with <code>//</code>)</li> <li>XML Style comments (Lines begin with <code>&lt;--</code> and end with <code>--&gt;</code></li> </ul> <p>One of the things I have is an IF macro where if a property is set to a particular value, I'll either comment out all of the following lines until I get to an embedded `ENDIF or leave them alone.</p> <p>Here's an example:</p> <pre><code># IF: MACHINE = SERVER # SERVER_PORT = 1022 # ENDIF: </code></pre> <p>Here's a similar example in XML format:</p> <pre><code>&lt;!-- IF: NOT MACHINE SERVER --&gt; &lt;server&gt;foo.vegicorp.com&lt;/server&gt; &lt;!-- ENDIF: --&gt; </code></pre> <p>What I need to capture:</p> <pre><code> 1. 2. 3. 4. 5. 6. 7. | | | | | | | &lt;!-- IF: NOT MACHINE = SERVER --&gt; </code></pre> <ol> <li>Beginning of a comment (must be in first column of file)</li> <li>The string <code>IF:</code></li> <li>An optional string <code>NOT</code> (Capture #1 if it exists)</li> <li>The property name (Capture #2)</li> <li>An <em>optional</em> equals sign</li> <li>The property value (Capture #3)</li> <li>An optional closing comment if this is an XML line</li> </ol> <p>Somehow, I'm simply not picking up the regular expression correctly. Here's what I have:</p> <pre><code>$if_line_re = qr@^(?:&lt;\!--|#|//)\s*IF:\s+(?:(NOT)\s+)?(\S+)\s+(?:=\s)?(\S+)(?:\s*--&gt;)?@i; </code></pre> <p>Here's my template file:</p> <pre><code># Macro: machine_type choice # Q: WHat type of machine is this? # C: Server:SERVER # C: Client:CLIENT # C: A type of toaster:TOASTER # Macro: QUESTION integer # Q: What is an example of a number question=%QUESTION% machine type = %machine_type% # IF: Machine = SERVER machine = server # ENDIF: # IF: NOT MACHINE = SERVER Machine = Toaster? Maybe Client? # ENDIF: # IF: Machine = Toaster machine = Definitely a toaster! # ENDIF: </code></pre> <p>Here's how the template is filled in:</p> <pre><code># Macro: machine_type choice # Q: WHat type of machine is this? # C: Server:SERVER # C: Client:CLIENT # C: A type of toaster:TOASTER # Macro: QUESTION integer # Q: What is an example of a number question=34 machine type = TOASTER # IF: Machine = SERVER --&gt; # machine = server # # ENDIF: # IF: NOT MACHINE = SERVER Machine = Toaster? Maybe Client? # ENDIF: # IF: Machine = Toaster # machine = Definitely a toaster! # # ENDIF: </code></pre> <p>I've added a few debugging lines to show what's going on:</p> <pre><code>DEBUG: if ( 0 and SERVER eq ) { at ./autoconfig.pl line 1048, &lt;$template_fh&gt; line 32. DEBUG: if ( not 0 and SERVER ne ) { at ./autoconfig.pl line 1063, &lt;$template_fh&gt; line 32. DEBUG: if ( 0 and SERVER eq ) { at ./autoconfig.pl line 1048, &lt;$template_fh&gt; line 32. DEBUG: if ( not 0 and SERVER ne ) { at ./autoconfig.pl line 1063, &lt;$template_fh&gt; line 32. DEBUG: if ( 1 and SERVER eq ) { at ./autoconfig.pl line 1048, &lt;$template_fh&gt; line 32. DEBUG: if ( not 1 and SERVER ne ) { at ./autoconfig.pl line 1063, &lt;$template_fh&gt; line 32. DEBUG: if ( 1 and SERVER eq ) { at ./autoconfig.pl line 1048, &lt;$template_fh&gt; line 32. DEBUG: if ( not 1 and SERVER ne ) { at ./autoconfig.pl line 1063, &lt;$template_fh&gt; line 32. DEBUG: if ( 1 and SERVER eq ) { at ./autoconfig.pl line 1048, &lt;$template_fh&gt; line 32. DEBUG: if ( not 1 and SERVER ne ) { at ./autoconfig.pl line 1063, &lt;$template_fh&gt; line 32. DEBUG: if ( 0 and Toaster eq ) { at ./autoconfig.pl line 1048, &lt;$template_fh&gt; line 32. DEBUG: if ( not 0 and Toaster ne ) { at ./autoconfig.pl line 1063, &lt;$template_fh&gt; line 32. DEBUG: if ( 0 and Toaster eq ) { at ./autoconfig.pl line 1048, &lt;$template_fh&gt; line 32. DEBUG: if ( not 0 and Toaster ne ) { at ./autoconfig.pl line 1063, &lt;$template_fh&gt; line 32. </code></pre> <p>As you can see, the value I'm matching the property against is not being picked up. My regular expression is matching the line, but not capturing the value of the property. Here's the code:</p> <pre><code> elsif ( $line =~ IF_LINE ) { my $negation = $1; my $parameter = uc $2; my $value = $3; my $if_clause; if ( $negation ) { $if_clause = If-&gt;new( $parameter, $value, 1 ); } else { $if_clause = If-&gt;new( $parameter, $value, 0 ); } push @macro_list, $if_clause; </code></pre>
<p>I added the "one or more" quantifier to the <code>(?:=\s)</code>, resulting in <code>(?:=\s+)</code>:</p> <pre><code>$if_line_re = qr@^(?:&lt;\!--|#|//)\s*IF:\s+(?:(NOT)\s+)?(\S+)\s+(?:=\s+)?(\S+)(?:\s*--&gt;)?@i; </code></pre> <p>Now I'm getting:</p> <pre><code>MATCH 1 1. [9-12] `NOT` 2. [13-20] `MACHINE` 3. [23-29] `SERVER` </code></pre>