Is it possible to pipe input to another script with '&lt;' using the system() in perl?
<p>I've looked at several similar questions but none of them seem to address this issue, or they use a form of piping that I'm unfamiliar with, or I'm using "piping" in place of the correct word.</p> <p>First, I'm on windows 7 and what I'm trying to do is get a Perl script to call and input to another Perl Script multiple times.</p> <p>The way I'm going about doing this is with the System() function.</p> <p>When put directly into the command line this works, although a little sloppy:</p> <pre><code>Functionalscript.pl &lt; InputFile &gt; OutputFile </code></pre> <p>That takes stuff from the input file performs the function and writes it to the output file flawlessly. However, when using the "system()" function in my calling script the input is not registered, but the output file is created (it's just blank).</p> <p>The problem is with:</p> <pre><code>system("Functionalscript.pl &lt; InputFile &gt; OutputFile") </code></pre> <p>For some reason when that is used the functionalscript does not receive the input as stdin. Is there a way to make this work?</p>
<p>According to <code>perldoc -f system</code> (<a href="http://perldoc.perl.org/functions/system.html" rel="nofollow">http://perldoc.perl.org/functions/system.html</a>):</p> <blockquote> <p>If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is /bin/sh -c on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to execvp , which is more efficient.</p> </blockquote> <p>Which means if your command has <code>&gt;</code> or <code>&lt;</code> in it it should be passed to the shell, and the input and output redirection should work as expected.</p>
<pre><code>system("x:/path/perl.exe Functionalscript.pl InputFile &gt; OutputFile") </code></pre> <p>Supplied by mpapec, Works. The "x:/path/perl.exe" had to be included.</p>