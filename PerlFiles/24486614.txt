Inserting hash elements from one hash to another while maintaining order of sequence
<p>I have a hash table </p> <pre><code>$mainhash{$position}{$base}{$score} </code></pre> <p>that stores each position of a dna sequence with the base that occurs and a score for the number of times it occurs . I also have another hash table</p> <pre><code>$i_hash{$position}{$base}{$score} </code></pre> <p>that holds the same information however only when insertion events occur. </p> <p>For every insertion position that exists, I would like to compare the score of that position to the score in %mainhash at that position. If it is greater, I need to insert the $base and $score from $i_hash to %mainhash, and shift every position downstream by that insertion. Sometimes these insertion events can occur consecutively.</p> <p>For instance, for this sequence</p> <pre><code>GATCCTGAACT </code></pre> <p>If there was an insertion of T at position 4, A for position 5 and C for position 6 (assuming the sequence starts from 0):</p> <p>after insertion it would look like this:</p> <pre><code>GATC^TAC^CTGAACT </code></pre> <p>Therefore, the original C that occurred at position 4 is now at position 7 and so on.</p> <p>Should i implement this by flattening %mainhash then use the substr function to insert bases? Os is there another way to do this? I need to maintain the integrity of the sequence position to report properly.</p> <p>Code:</p> <pre><code>my @consensus; for(my $k=0; $k&lt;$length; $k++) { my $pushbase; if (exists $i_hash{$k} &amp;&amp; exists $mainhash{$k}) { my $iscore; my $mscore; my $ipushbase; my $mpushbase; foreach my $ibase (keys %{$i_hash{$k}}) { $ipushbase = $ibase; $iscore = $i_hash{$k}{$ibase}; } foreach my $mbase (keys %{$mainhash{$k}}) { $mpushbase = $mbase; $mscore = $mainhash{$k}{$mbase}; } if ($iscore &gt; $mscore) { $pushbase = $i_hash{$k}{$ipushbase}; push @consensus, $pushbase; $pushbase = $mainhash{$k}{$mpushbase}; #insert the shifted position (does not handle consecutive insertion push @consensus, $pushbase; } else { $pushbase = $mainhash{$k}{$mpushbase}; push @consensus, $pushbase; } } } </code></pre> <p>This obviously does not handle consecutive insertions. I cant figure out how to handle consecutive insertions so that I can properly shift the positions downstream.</p>