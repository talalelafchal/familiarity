What is wrong with my perl regex
<p>I am trying to find bad records in a text file:</p> <p>the format of the data in the file is:</p> <pre><code>somedata\x1Fsomemoredata\x1F\n somedata2\x1Fsomemoredata2\x1F\n </code></pre> <p>(\x1F is the unit separator in hex value, this data is written out in another script using Perl's chr(31), which is the unit separator's ascii code)</p> <p>I have written this is in perl: </p> <pre><code>## the format of each record in the file: alphanumericdata\x1Falphanumericdata\x1F\n my $regex = "/[A-z0-9]+\\x1F[A-z0-9]+\\x1F\\n\$/"; print $regex; #### just opening file my $filename = "data.txt"; open(my $fh, "&lt;:encoding(UTF-8)", $filename) or die "Could not open file '$filename' $!"; ### reading file line by line while (my $row = &lt;$fh&gt;) { ## if line does not match format, print the culprit!!! if($row !~ $regex) { print $row; } } close $fh; </code></pre> <p>This prints each row but I know most of the rows are correctly formatted so something is off with my regex.</p> <p>Am I committing some noob mistake here??</p>
<p>What you want is <code>qr()</code>, which is the correct way to store a regex:</p> <pre><code>my $regex = qr([A-z0-9]+\x1F[A-z0-9]+\x1F\n$); </code></pre>
<p>The problem is that you are including the Perl match operator (Perl code) in your pattern.</p> <pre><code>my $pat = "^[A-z0-9]+\\x1F[A-z0-9]+\\x1F\\n\\z"; if ($row !~ m/$pat/) if ($row !~ /$pat/) # shortcut if ($row !~ $pat) # shortcut </code></pre> <hr> <p>It doesn't make sense to hardcode a pattern as a string literal, so let's pretend <code>$pat</code> is being read from a file. In that case, you'd want to pre-compile it.</p> <pre><code># Pretend we're reading ^[A-z0-9]+\x1F[A-z0-9]+\x1F\n\z from a file. my $pat = "^[A-z0-9]+\\x1F[A-z0-9]+\\x1F\\n\\z"; my $re = qr/$pat/; if ($row !~ m/$re/) if ($row !~ /$re/) # shortcut if ($row !~ $re) # shortcut </code></pre> <p>If you were hardcoding a file, you'd use <code>qr//</code> directly. It saves you from escaping a bunch of slashes.</p> <pre><code>my $re = qr/^[A-z0-9]+\x1F[A-z0-9]+\x1F\n\z/; if ($row !~ m/$re/) if ($row !~ /$re/) # shortcut if ($row !~ $re) # shortcut </code></pre> <p>In this case, there does not appear to be a reason to specify the pattern in advance. You could specify right in the match operator.</p> <pre><code>if ($row !~ m/^[A-z0-9]+\x1F[A-z0-9]+\x1F\n\z/) if ($row !~ /^[A-z0-9]+\x1F[A-z0-9]+\x1F\n\z/) # same </code></pre>