Fork in a loop. Simultaneous process
<p>I Didn't quite understand the fork function.</p> <p>How could i print output from the files simultaneously, use separate process for each file?</p> <pre><code>my $regex = $ARGV[0]; for (@ARGV[1 .. $#ARGV]){ open (my $fh, "&lt;", $_); foreach (&lt;$fh&gt;){ print "$1\n" if $_ =~ /(\b$regex\b)/; } } </code></pre>
<p>Presumably, you also want to limit the number of simultaneous processes. <a href="http://search.cpan.org/perldoc?Parallel%3a%3aForkManager" rel="nofollow">Parallel::ForkManager</a> makes this easy.</p> <pre><code>use Parallel::ForkManager qw( ); my $pm = Parallel::ForkManager-&gt;new($MAX_PROCESSES); my $filter = shift(@ARGV); $filter = qr/$filter/; for my $qfn (@ARGV) { $pm-&gt;start() and next; open(my $fh, '&lt;', $qfn) or die("Can't open \"$qfn\": $!\n"); while (&lt;$fh&gt;) { print "$1\n" if /(\b$regex\b)/; } } $pm-&gt;finish(); </code></pre> <p>If you didn't want to limit the number of simultaneous processes, it would look really similar.</p> <pre><code>my $filter = shift(@ARGV); $filter = qr/$filter/; for my $qfn (@ARGV) { fork() and next; open(my $fh, '&lt;', $qfn) or die("Can't open \"$qfn\": $!\n"); while (&lt;$fh&gt;) { print "$1\n" if /(\b$regex\b)/; } } 1 while wait() &gt; 0; </code></pre>