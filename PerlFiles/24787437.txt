Modifying hash slice gives inconsistent behavior
<p>I have a set of buckets, and a set of 'removals' that potentially contains more/less buckets than the set I'm interested in - I am trying to subtract the removal values from the buckets with hash slices, like so:</p> <pre><code>@buckets{keys %buckets} -= @remove{keys %buckets}; </code></pre> <p>However, it seems like only the LAST element of the hash ever gets modified - this is obviously inconsistent depending on the run-time order that the keys of the hash are returned.</p> <p>Is this not a valid way to use hash slices?</p> <p>Full Code:</p> <pre><code>use strict; use warnings; use Data::Dumper; my %buckets = ( a =&gt; 100, b =&gt; 200, c =&gt; 300, d =&gt; 400, ); my %remove = ( a =&gt; 1, b =&gt; 2, c =&gt; 3, d =&gt; 4, ); my %before = %buckets; @buckets{keys %buckets} -= @remove{keys %buckets}; # my @keys = keys %buckets; # @buckets{@keys} -= @remove{@keys}; # Gives same behavior warn Data::Dumper-&gt;Dump([ \%buckets ], ['buckets_after']); </code></pre> <p>Sample output:</p> <pre><code>% perl perltest.pl $buckets_after = { 'd' =&gt; 400, 'c' =&gt; 300, 'a' =&gt; 100, 'b' =&gt; 198 }; % perl perltest.pl $buckets_after = { 'c' =&gt; 300, 'd' =&gt; 400, 'b' =&gt; 200, 'a' =&gt; 99 }; % perl perltest.pl $buckets_after = { 'a' =&gt; 100, 'd' =&gt; 400, 'b' =&gt; 200, 'c' =&gt; 297 }; </code></pre>
<p>Nothing specific to the hash slice operator here, it's just that the <code>-=</code> operator doesn't distribute over a list.</p> <p>This doesn't work either, for the same reason:</p> <pre><code>($a,$b) = (10,20); ($a,$b) -= (1,1); print "$a $b\n"; </code></pre> <p>Write the loop explicitly to get what you want:</p> <pre><code>$buckets{$_} -= $remove{$_} for keys %buckets; </code></pre>