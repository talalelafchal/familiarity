Perl alternation match behaves differently with parentheses
<p>Can someone explain why my match behaves differently whether or not the alternation is enclosed within a capture group? </p> <p>Is this possibly due to the old version of Perl (which I have no control over, sadly), or am I misunderstanding something? My understanding was that the parentheses were a convention for some people but otherwise unnecessary in this case.</p> <pre><code>[~]$ perl -v This is perl, v5.6.1 built for PA-RISC1.1-thread-multi (with 1 registered patch, see perl -V for more detail) Copyright 1987-2001, Larry Wall Binary build 633 provided by ActiveState Corp. http://www.ActiveState.com Built 12:17:09 Jun 24 2002 Perl may be copied only under the terms of either the Artistic License or the GNU General Public License, which may be found in the Perl 5 source kit. Complete documentation for Perl, including FAQ lists, should be found on this system using `man perl' or `perldoc perl'. If you have access to the Internet, point your browser at http://www.perl.com/, the Perl Home Page. [~]$ perl -e 'print "match\n" if ("getnew" =~ /^get|put|remove$/);' match [~]$ perl -e 'print "match\n" if ("getnew" =~ /^(get|put|remove)$/);' [~]$ </code></pre>
<p>By design, an "or" <code>|</code> is isolated to a capture group if it is enclosed in parenthesis.</p> <p>The the second regex uses parenthesis around the 3 words, so it is equivalent to the following by the transitive property:</p> <pre><code>if ("getnew" =~ /^get$/ || "getnew" =~ /^put$/ || "getnew" =~ /^remove$/) { print "match\n" ; } </code></pre> <p>However, the first regex has no parenthesis, so the "or" effects the entire expression including the boundary conditions. It matches because the first test, <code>/^get/</code>, succeeds:</p> <pre><code>if ("getnew" =~ /^get/ || "getnew" =~ /put/ || "getnew" =~ /remove$/) { print "match\n" ; } </code></pre>
<p><code>^get|put|remove$</code> finds <code>^get</code> or <code>put</code> or <code>remove$</code>. So, "getnew" matches the pattern because it starts with <code>get</code>.</p> <p>Whereas <code>^(get|put|remove)$</code> finds <code>^get$</code> or <code>^put$</code> or <code>^remove$</code>.</p>