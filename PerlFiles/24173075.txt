Replacing string in file with perl
<p>I have a list of about 10 servers that I would like to change a string in all 10 servers.</p> <p>I have written a script that looks at the file and with a loop and should use <code>perl -i -pe</code> to change the line <code>/opt/nimsoft/bin/niminit "" "start"</code> to <code>#/opt/nimsoft/bin/niminit "" "start"</code> (add a # to comment out)</p> <pre><code>oldstring = /opt/nimsoft/bin/niminit "" "start" newstring = #/opt/nimsoft/bin/niminit "" "start" </code></pre> <p>I am having trouble escaping the /, I have tried \ and \Q and \E. Any ideas?</p> <pre><code> for i in `cat $file` do echo "Disable application on startup" oldstring=start /opt/nimsoft/bin/niminit "" "start" newstring=#start /opt/nimsoft/bin/niminit "" "start" ssh -t $i sudo perl -p -i -e 's/oldstring/newstring/g' /etc/rc.tcpip # /etc/rc.tcpip:start /opt/nimsoft/bin/niminit "" "start" echo "===============================================" done </code></pre>
<p>Perl will permit the use of delimiters other than /. You might try ~ or { } pairs. Also, sed might be easier to use than a Perl script.</p>
<p>If you use <code>s{}{}</code> instead of <code>s///</code>, you won't have to worry about escaping the forward slashes.</p> <p>The following adds a comment before the string that you wanted to match if it isn't already commented:</p> <pre><code>perl -i -pe 's{(?&lt;!#)(?=start /opt/nimsoft/bin/niminit "" "start")}{#}' /etc/rc.tcpip </code></pre>