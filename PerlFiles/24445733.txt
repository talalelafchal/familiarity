Perl Read XML value
<pre><code>use strict; use warnings; use XML::LibXML; my $xml = XML::LibXML-&gt;load_xml(IO =&gt; \*DATA); for my $role ($xml-&gt;findnodes('//@role')) { print $role-&gt;value; } __DATA__ &lt;?xml version='1.0'?&gt; &lt;employee&gt; &lt;name&gt;Smith&lt;/name&gt; &lt;age&gt;43&lt;/age&gt; &lt;sex&gt;M&lt;/sex&gt; &lt;department role='manager'&gt;Operations&lt;/department&gt; &lt;/employee&gt; </code></pre> <p>Above code returns "Role = Manager". How to get other values? For an example <code>Name</code>.<code>age</code>,<code>sex</code> and <code>department</code>. </p> <p><strong>EDITED</strong></p> <pre><code>use strict; use warnings; use XML::LibXML; my $xml = XML::LibXML-&gt;load_xml(IO =&gt; \*DATA); for my $employee ($xml-&gt;findnodes('//Copy')) { print "Name: ", $employee-&gt;findvalue('//body'), "\n"; print " Role: ", $employee-&gt;findvalue('CopyElement/@CopyElementType'), "\n"; } __DATA__ &lt;?xml version="1.0" encoding="UTF-8" standalone="no" ?&gt; &lt;CopyContent AgentName="" AgentVersion="" noNamespaceSchemaLocation="" xmlns1=""&gt; &lt;RevisionHistory RevisionNumber=""&gt; &lt;Revision Author="tester" RevisionNumber="01" TimeStamp="2014052103:51:04" Type=""/&gt; &lt;/RevisionHistory&gt; &lt;Project ProjectID="112233" ProjectName="" Region=""&gt; &lt;POAs&gt; &lt;POA ID="" Locales="" Name=""/&gt; &lt;/POAs&gt; &lt;/Project&gt; &lt;Copy&gt; &lt;CopyElement CopyElementType="template_name" CopySourceRef="" ID="" LinkedState="NotLinkedToArtwork" Locale="" POAs="" Panels="" SourceRef=""&gt; &lt;body&gt; &lt;countrycode/&gt; &lt;p&gt;auto-template1&lt;/p&gt; &lt;/body&gt; &lt;/CopyElement&gt; &lt;GraphicElement DescriptiveName="legendimages" ID="0001" Type="link" ref=" file:////Volumes/Schawk Asia/Asia ProdArt/297620A/090 Deliverables/Legend/97005846_D_Legend_Legend.pdf"/&gt; &lt;GraphicElement DescriptiveName="pallet_pattern" ID="0001" Type="link" ref=" file:////Volumes/Tornado Shipper Library/P&amp;amp;G/Pantene/Asia/T03 Pallet Pattern/PAL_23x3x69_P&amp;amp;G 1329_100_V0001.pdf"/&gt; &lt;CopyElement CopyElementType="WorkerName" CopySourceRef=" A6" ID="" LinkedState="NotLinkedToArtwork" Locale="English" POAs="" Panels="" SourceRef=" Brand Name"&gt; &lt;body&gt; &lt;countrycode/&gt; &lt;p&gt;Alan Smith&lt;/p&gt; &lt;/body&gt; &lt;/CopyElement&gt; &lt;CopyElement CopyElementType="EmpName" CopySourceRef=" A6" ID="" LinkedState="NotLinkedToArtwork" Locale="English" POAs="" Panels="" SourceRef=" Brand Name"&gt; &lt;body&gt; &lt;countrycode/&gt; &lt;p&gt;Brendan Froesr&lt;/p&gt; &lt;/body&gt; &lt;/CopyElement&gt; &lt;/Copy&gt; &lt;Private/&gt; &lt;/CopyContent&gt; </code></pre> <p><strong>Output</strong><br> <img src="https://i.stack.imgur.com/tQ1XG.png" alt="enter image description here"></p>
<p>It helps if your sample data actually includes more than just a root node. The following should demonstrate how to pull child nodes and attributes.</p> <p>For examples of xpaths, just check out: <a href="http://msdn.microsoft.com/en-us/library/ms256086%28v=vs.110%29.aspx" rel="nofollow">XPath Examples</a></p> <pre><code>use strict; use warnings; use XML::LibXML; my $xml = XML::LibXML-&gt;load_xml(IO =&gt; \*DATA); for my $employee ($xml-&gt;findnodes('//employee')) { print "Name: ", $employee-&gt;findvalue('name'), "\n"; print " Role: ", $employee-&gt;findvalue('department/@role'), "\n"; } __DATA__ &lt;?xml version='1.0'?&gt; &lt;root&gt; &lt;employee&gt; &lt;name&gt;Smith&lt;/name&gt; &lt;age&gt;43&lt;/age&gt; &lt;sex&gt;M&lt;/sex&gt; &lt;department role='manager'&gt;Operations&lt;/department&gt; &lt;/employee&gt; &lt;employee&gt; &lt;name&gt;John&lt;/name&gt; &lt;age&gt;34&lt;/age&gt; &lt;sex&gt;M&lt;/sex&gt; &lt;department role='janitor'&gt;Maintenance&lt;/department&gt; &lt;/employee&gt; &lt;employee&gt; &lt;name&gt;Sally&lt;/name&gt; &lt;age&gt;18&lt;/age&gt; &lt;sex&gt;F&lt;/sex&gt; &lt;department role='director'&gt;Human Resources&lt;/department&gt; &lt;/employee&gt; &lt;/root&gt; </code></pre> <p>Outputs:</p> <pre><code>Name: Smith Role: manager Name: John Role: janitor Name: Sally Role: director </code></pre> <p>For your revised XML, the following might get closer to what you want:</p> <pre><code>for my $copy ($xml-&gt;findnodes('//Copy/CopyElement')) { (my $body = $copy-&gt;findvalue('body')) =~ s/^\s+|\s+$//g; (my $type = $copy-&gt;findvalue('@CopyElementType')) =~ s/^\s+|\s+$//g; print &lt;&lt;"END_COPY"; Name: $body Role: $type END_COPY } </code></pre>