perl - how to get all similar matched substrings using RegEx
<p>I want to parse a webpage (from lynda.com) and get all titles and links of courses. So I used <a href="https://metacpan.org/pod/LWP%3a%3aUserAgent" rel="nofollow"><code>LWP::UserAgent</code></a> to get the url and then I tried to get titles and links using the following codes:</p> <pre><code>#!/usr/bin/perl use LWP::UserAgent; use strict; use warnings; my $ua = new LWP::UserAgent; my $response = $ua-&gt;get('http://www.lynda.com/search?q=android'); unless ($response-&gt;is_success) { die $response-&gt;status_line; } my $content = $response-&gt;decoded_content(); if (utf8::is_utf8($content)) { binmode STDOUT,':utf8'; } else { binmode STDOUT,':raw'; } $content =~ s/[\h\v]+/ /g; $content =~ s/\r|\n//g; $content =~ s/&lt;\/span&gt;|&lt;span&gt;//g; # Links my @links = ($content =~ m/&lt;a id="course-result-info.*href="(.*)\?.*class="title"&gt;/g); # titles my @titles = ($content =~ m/&lt;a id="course-result-info.*class="title"&gt; (.*)&lt;\/a&gt; &lt;span class="author"&gt;/g); print join(", ", @titles); print "\n---------------------------\n"; print join(", ", @links); </code></pre> <p>But I only got the last matched one (i.e. <em>Developing Applications for Amazon Kindle Devices</em>).</p>
<p>Your regex parsing was broken because you were using greedy matching <code>.*</code> instead of non-greedy <code>.*?</code>.</p> <p>However, the much better solution is not to use regular expressions at all, but to instead use an actual HTML Parser such as <a href="https://metacpan.org/pod/Mojo%3a%3aDOM" rel="nofollow"><code>Mojo::DOM</code></a> with the full power of css selectors.</p> <p>The following uses <a href="https://metacpan.org/pod/Mojo%3a%3aUserAgent" rel="nofollow"><code>Mojo::UserAgent</code></a> which is installed with <a href="https://metacpan.org/pod/Mojolicious" rel="nofollow"><code>Mojolicious</code></a> to download the webpage and then uses <code>Mojo::DOM</code> to parse the returned results. There is a nice 8 minute tutorial on this framework at <a href="http://mojocasts.com/e5" rel="nofollow"><code>Mojocast Episode 5</code></a>.</p> <pre><code>#!/usr/bin/perl use strict; use warnings; use Mojo::UserAgent; my $url = 'http://www.lynda.com/search?q=android'; my $dom = Mojo::UserAgent-&gt;new-&gt;get($url)-&gt;res-&gt;dom; # Process all links for my $link ($dom-&gt;find('a[id^="course-result-info"]')-&gt;each) { printf "%s\n %s\n", $link-&gt;all_text(), $link-&gt;{href}; } </code></pre> <p>Outputs:</p> <pre><code>Android Studio First Look http://www.lynda.com/Android-tutorials/Android-Studio-First-Look/143103-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Android SDK Essential Training http://www.lynda.com/Android-tutorials/Android-SDK-Essential-Training/143102-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Distributing Android Apps http://www.lynda.com/Android-tutorials/Distributing-Android-Apps/143101-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Building and Monetizing Game Apps for Android http://www.lynda.com/Android-tutorials/Building-Monetizing-Game-Apps-Android/107169-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Building a Note-Taking App for Android http://www.lynda.com/Android-tutorials/Building-Note-Taking-App-Android/122466-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Android SDK: Local Data Storage http://www.lynda.com/Android-tutorials/Android-SDK-Local-Data-Storage/112584-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Android 4.1 SDK Jelly Bean New Features http://www.lynda.com/Android-tutorials/Android-SDK-41-Jelly-Bean-New-Features/107922-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Building Mobile Apps with Google Maps Android API v2 http://www.lynda.com/Android-tutorials/Building-Mobile-Apps-Google-Maps-Android-API-v2/133347-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Building Android and iOS Applications with Flex http://www.lynda.com/Flash-Builder-4-5-tutorials/Building-Android-and-iOS-Applications-with-Flex/80254-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Flash Professional CS5: Creating a Simple Game for Android Devices http://www.lynda.com/Flash-CS5-tutorials/flash-professional-cs5-creating-a-simple-game-for-android-devices/74928-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Java Essential Training http://www.lynda.com/Java-tutorials/Essential-Training/86005-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Up and Running with Java Applications http://www.lynda.com/Android-tutorials/Up-Running-Java-Applications/94344-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Building Mobile Apps for Multiple Devices with Flash Professional http://www.lynda.com/Flash-Professional-CS5-5-tutorials/Building-Mobile-Apps-for-Multiple-Devices-with-Flash-Professional/89049-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 Developing Applications for Amazon Kindle Devices http://www.lynda.com/Android-tutorials/Developing-Applications-Amazon-Kindle-Devices/117102-2.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aandroid%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2 </code></pre>
<p>Since you're parsing HTML by hand already, you might want to use non-greedy quantifiers, ie. <code>.*?</code> in all places instead of <code>.*</code>, and make use of <code>/s</code> modifier as <code>.</code> doesn't match newline by default.</p> <pre><code>my @links= $content =~ /&lt;a id="course-result-info.*href="(.*?)\?.*?class="title"&gt;/sg; </code></pre>
<p>Try these regexes:</p> <pre><code>my @links = ($content =~ m/&lt;a id="course-result-info[^&gt;]*href="([^"]*)"[^&gt;]*class="title"&gt;/g); # titles my @titles = ($content =~ m/&lt;a id="course-result-info[^&gt;]*class="title"&gt; ([^&lt;]*)&lt;\/a&gt; &lt;span class="author"&gt;/g); </code></pre>