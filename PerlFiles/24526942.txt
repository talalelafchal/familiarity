How to find patterns across multiple lines using perl
<p>I want to grep some string spread along multiple lines withing some begin and end pattern</p> <p>Example:</p> <pre class="lang-none prettyprint-override"><code>MediaHelper-&gt;fetchStrings( names =&gt; [ //Here new line may or many not be **'ubp-firstrun_heading', 'firstrun_text', '_firstrun-or-start_search', 'installed'** //may end here also ); ]); </code></pre> <p>using perl or grap how I can get list 4 strings here begin pattern is <code>MediaHelper-&gt;fetchStrings(names =&gt; [</code> and end pattern is <code>);</code></p> <p>Or any other suggesting using other commands like grep or sed or awk ?</p>
<p>Just process the file in slurp mode instead of line by line:</p> <pre><code>perl -0777 -ne 'print $1 while m{MediaHelper-&gt;fetchStrings(names\s*=&gt;\s*\[(.*?)\]}g' file </code></pre> <h3>Explanation:</h3> <p><strong>Switches</strong>: </p> <ul> <li><code>-0777</code>: Slurp mode instead of line by line</li> <li><code>-n</code>: Creates a <code>while(&lt;&gt;){..}</code> loop for each line in your input file. </li> <li><code>-e</code>: Tells <code>perl</code> to execute the code on command line. </li> </ul>
<p>Try this:</p> <pre><code>sed -n '/MediaHelper-&gt;fetchStrings( names =&gt;/,/);/ p' &lt;yourfile&gt; </code></pre> <p>Or, if you want to skip the delimiting lines, this:</p> <pre><code>sed -n '/MediaHelper-&gt;fetchStrings( names =&gt;/,/);/ {/MediaHelper-&gt;fetchStrings( names =&gt;/b; /^);/b; p}' &lt;yourfile&gt; </code></pre>
<p>If I understand your question, you need to match all strings in all lines (and not just the MediaHelper thing).</p> <p>If this is the case, then sed is the right tool, because it is by default line-oriented. </p> <p>In our case, if you want to match the string in every line:</p> <pre><code>sed "s/.*\('.*'\).*/\1/" &lt;your_file&gt; </code></pre> <p>Hope it helps</p> <p>Edit: To be more descriptive, first we need to match the whole line (that's the first and the last .*) and then we enclose in parenthesis the part of the line we want to print, which in our case is everything inside single quotes. The number 1 before the last delimiter denotes that we want to print the first (in our case it is the last also) parenthesis.</p>