Using Perl FileHandle with a scalar containing string instead of filename
<p>My script download a plain text file using from the internet using LWP::Simple's get() function.</p> <p>I'd the like to process this string in a filehandle way. I found this 'elegant' (well, I like it) way of doing this from <a href="http://www.perlmonks.org/?node_id=745018" rel="nofollow">http://www.perlmonks.org/?node_id=745018</a> .</p> <pre><code>my $filelike = get($url); # whole text file sucked up in single string open my $fh, '&lt;', \$filelike or die $!; while (&lt;$fh&gt;) { # do wildly exciting stuff; }; </code></pre> <p>But I like using FileHandle; however, I've not found a way of doing the above using it. So:</p> <pre><code>my $filelike = get($url); my $fh = new FileHandle \$filelike; # does not work my $fh = new FileHandle $filelike; # does not work either </code></pre> <p>Any ideas?</p> <p>Thanks.</p>
<p>FileHandle provides an <code>fdopen</code> method which can give you a FileHandle object from a symbol reference. You can open a raw filehandle to the scalar ref and then wrap that in a FileHandle object.</p> <pre><code>open my $string_fh, '&lt;', \$filelike; my $fh = FileHandle-&gt;new-&gt;fdopen( $string_fh, 'r' ); </code></pre> <p>(Also, see <a href="http://stackoverflow.com/a/429798/20745">this answer</a> for why you should use <code>Class-&gt;new</code> instead of the indirect <code>new Class</code> notation.)</p>
<p>Do you realize that all file handles are objects of the IO::Handle? If all you want is to use the file handle as an object, you don't have to do anything at all.</p> <pre><code>$ perl -e' open my $fh, "&lt;", \"abcdef\n"; STDOUT-&gt;print($fh-&gt;getline()); ' abcdef </code></pre> <p>Note: In older versions of Perl, you will need to add <code>use IO::Handle;</code>.</p>