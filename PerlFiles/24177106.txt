Calling sub dynamically using perl
<p>I have 4 sub rountines (sub room1 {do stuuf...}, sub room2{do stuff...}, sub room3{do other stuff...}) that will each do different things inside the routine. </p> <p>What I want to do is to be able to dynamically call a routine based on a variable name.</p> <p>For exmaple, </p> <blockquote> <pre><code>if ($currentRoom == 1) { &amp;room1; } if ($currentRoom == 2) { &amp;room2; } if ($currentRoom == 3) { &amp;room3; } </code></pre> </blockquote> <p>What I would rather do, is just call the correct sub routine using $currentRoom as the value after &amp;room. Something like &amp;room{$currentRoom};</p> <p>Can this be done and if so, how can I achieve this.</p>
<p>Create a hash relating room numbers to subroutine references:</p> <pre><code>my %room_actions = ( 1 =&gt; \&amp;room1, 2 =&gt; \&amp;room2, 3 =&gt; \&amp;room3, ); if ($room_actions{$currentRoom}) { $room_actions{$currentRoom}-&gt;(); } else { die "room doesn't exist: $currentRoom"; } </code></pre>
<p>You could try this:</p> <pre><code>use strict; use warnings; sub test1 {print 1} sub test2 {print 2} my $test = 1; { # naked block, to make no strict 'refs' not global no strict 'refs'; &amp;{'test'.$test}(); } </code></pre> <p>Output:</p> <pre><code>1 </code></pre> <p>but be prepared, if you try to access a sub (e.g. <code>3</code> at code above), which does not exists, you will get a warning:</p> <pre><code>Undefined subroutine &amp;main::test3 called at test.pl ..... </code></pre>
<p>This is almost 2 years late, but I landed here after a somehow related search and I was struck by the lack of this solution:</p> <pre><code>__PACKAGE__-&gt;can('room' . $currentRoom)-&gt;(); </code></pre> <p>You can also add some custom error checking:</p> <pre><code>if (my $sub = __PACKAGE__-&gt;can('room' . $currentRoom)) { $sub-&gt;(); } </code></pre> <p>This is a kind of quick and dirty dispatch table, using <code>can</code> instead of a hash access but without giving up any safenets.</p>