Intersection of multidimensional hashes in Perl
<p>I am trying to determine the part of a nested hash that is not in common with another hash. For example:</p> <pre><code>my $p = {a =&gt; {b =&gt; 'b', c =&gt; 'c'}, d =&gt; 'd'}; my $q = {a =&gt; {c =&gt; 'c', f =&gt; 'f'}, e =&gt; 'e'}; </code></pre> <p>I would like to have a function <code>hash_unique</code> that returns the part of <code>$q</code> that is not in <code>$p</code>:</p> <pre><code>my $r = hash_unique($q, $p); </code></pre> <p>It should give <code>$r = {a =&gt; {f =&gt; 'f'}, e =&gt; 'e'}</code>. Note: Only the keys of the hashes should be checked, difference in value is ignored.</p>
<p>I found a nice solution using <a href="http://search.cpan.org/~bolav/Hash-Diff-0.005/lib/Hash/Diff.pm" rel="nofollow">Hash::Diff</a> :</p> <pre><code>use Data::Dump qw(dump); use Hash::Diff qw(left_diff); my $p={a=&gt;{b=&gt;'b',c=&gt;'c'},d=&gt;'d'}; my $q={a=&gt;{c=&gt;'c',f=&gt;'f'},e=&gt;'e'}; my $r=left_diff($q,$p); dump($r); </code></pre> <p>gives me the correct solution:</p> <pre><code>{ a =&gt; { f =&gt; "f" }, e =&gt; "e" } </code></pre>