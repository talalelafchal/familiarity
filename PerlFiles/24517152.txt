Perl: Constructing simple regular expression during runtime
<p>I am trying to construct a small regex during runtime, but somehow it never matches -- what am I doing wrong?</p> <pre><code>my $word = quotemeta("test"); my $lines = "just a test to testing find tester testönig something fastest out pentest"; my $rule = "m/" . $word . "/g"; my $regex = qr/$rule/; while ($lines =~ $regex) { # this never happens... print "\nFound pattern: '$&amp;'"; } </code></pre>
<p>This might be what you want:</p> <pre><code>#!/usr/bin/perl use strict; use warnings; my $word = quotemeta("test"); my $lines = "just a test to testing find tester testönig something fastest out pentest"; my $regex = qr/$word/; while ($lines =~ /$regex/g) { print "\nFound pattern: '$&amp;'"; } </code></pre> <p>You cannot use <code>/g</code> directly with <code>qr</code>. </p>
<p>Your code:</p> <pre><code>my $word = quotemeta("test"); my $rule = "m/" . $word . "/g"; my $regex = qr/$rule/; </code></pre> <p>is the same as this:</p> <pre><code>my $word = quotemeta("test"); my $rule = "m/test/g"; # interpolated $word my $regex = qr~m/test/g~; # interpolated $rule </code></pre> <p>That is, it matches the literal string "<code>m/test/g</code>" and nothing else.</p> <p><a href="http://stackoverflow.com/users/328977/buff">buff</a> has already given pretty much the same code I would have suggested, except that I recommend avoiding the use of <code>$&amp;</code> due to a performance penalty as noted in <a href="http://perldoc.perl.org/perlvar.html" rel="nofollow" title="perlvar">perlvar</a>:</p> <blockquote> <p>The use of this variable anywhere in a program imposes a considerable performance penalty on all regular expression matches. To avoid this penalty, you can extract the same substring by using <code>@-</code>. Starting with Perl v5.10.0, you can use the <code>/p</code> match flag and the <code>${^MATCH}</code> variable to do the same thing for particular match operations.</p> </blockquote>