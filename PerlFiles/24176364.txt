Creating Hash with keys only
<p>Can only keys be pushed in PERL hash, I mean, Can hash be created without corresponding values?</p> <p>I want to create a hash which behave just like array i.e. hash with only keys but not corresponding values. Example is given below:</p> <pre><code>my %feedHash; while(&lt;CFG&gt;) { chomp($_); my @val=split(/:/,$_); chomp($val[0]); my $feedId=$val[0]; if(!exists $feedHash{$feedId}) { print "\n$feedId Feed is not present"; $hash{$feedId} = undef; mkdir "LoadReports/$feedId" or die $!; } else { print '\nFeed is already present'; } } </code></pre> <p>It is giving message: "Feed is not present" even for same feed id second time in loop </p>
<p>You can make hash with your keys, where values are set to <code>undef</code></p> <pre><code>my %hash; @hash{qw(key1 key2 key3)} = (); </code></pre> <p>to check/set for particular hash key,</p> <pre><code>if (!exists $hash{key4}) { $hash{key4} = undef } </code></pre>
<p>You're essentially wanting a <code>%seen</code> style hash.</p> <p>You get no benefit from not actually giving the hash a true boolean value, and actually get additional headaches. I therefore suggest that you style your code like the following:</p> <pre><code>my %seen_feed; while (&lt;CFG&gt;) { chomp; my ($id, @vals) = split ':'; if (! $seen_feed{$id}++) { print "\n$id Feed is not present"; mkdir "LoadReports/$id" or die $!; } else { print '\nFeed is already present'; } } </code></pre>