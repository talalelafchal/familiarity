Given a Perl DateTime object, how do I output &quot;1st, 2nd, 3rd, 4th of the month&quot;
<p>I can't find a <code>DateTime::Format::</code> module that outputs the day of the month properly. e.g. Using <code>DateTime-&gt;strftime</code> instead of outputting "19 July", I want to output "19th July".</p> <p><a href="https://metacpan.org/pod/DateTime%3a%3aFormat%3a%3aNatural%3a%3aLang%3a%3aEN" rel="nofollow">DateTime::Format::Natural::Lang::EN</a> <em>parses</em> dates like that, but I need the opposite - an output formatter.</p> <p>I don't want to use Date::Calc or any other date module (but would consider non-date modules), and I don't want to have to write it myself.</p> <p>For reference: <a href="https://metacpan.org/pod/DateTime" rel="nofollow">DateTime docs</a>, where the <a href="https://metacpan.org/pod/DateTime#strftime-Patterns" rel="nofollow">strftime patterns</a> don't appear to include "1st, 2nd, 3rd, 4th", etc.</p>
<p>Perhaps you could write some kind of custom formatter (and then release it to CPAN!) This gets you some of the way there...</p> <pre><code>package DateTime::Ordinated; use strict; use warnings; use base 'DateTime'; use Lingua::EN::Numbers::Ordinate; sub day { my $self = shift; my $day = $self-&gt;SUPER::day; return ordinate($day); } 1; </code></pre> <p>And to test...</p> <pre><code>$ perl -MDateTime::Ordinated -E'$d=DateTime::Ordinated-&gt;now;say $d-&gt;day' 19th </code></pre>