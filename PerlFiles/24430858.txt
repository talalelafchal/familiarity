Perl open file with variable in name
<p>Why is this example not working?</p> <pre><code>#!/usr/bin/perl use POSIX qw(strftime); use Time::Local; my $date = strftime "%Y-%m-%d", localtime; my $command = "ls clients/*/ERRORi/" . $date . "/*s"; @result = `$command`; foreach $group (@result) { my $file = '/opt/' . $group; open( my $input_fh, '&lt;', $file) || die "Can't open $file: $!"; print $input_fh; } </code></pre> <p>it will return:</p> <pre><code>Can't open /opt/clients/cli8832/ERRORi/2014-06-25/file.564159972s : No such file or directory at ./my.pl line 12. </code></pre> <p>but if I do <code>ls /opt/clients/cli8832/ERRORi/2014-06-25/file.564159972s</code> it works</p>
<p>That's a poor example to be learning from.</p> <ul> <li>Include <a href="http://perldoc.perl.org/strict.html" rel="nofollow"><code>use strict;</code></a> and <a href="http://perldoc.perl.org/warnings.html" rel="nofollow"><code>use warnings</code></a> in EVERY perl script.</li> <li>Include <a href="http://perldoc.perl.org/autodie.html" rel="nofollow"><code>use autodie;</code></a> anytime you're doing file processing</li> <li>And finally, instead of shelling out to <code>ls</code>, just use a file <a href="http://perldoc.perl.org/functions/glob.html" rel="nofollow"><code>glob</code></a>. This will remove the need to <a href="http://perldoc.perl.org/functions/chomp.html" rel="nofollow"><code>chomp</code></a>.</li> </ul> <p>Then following is a cleaned up version of that example, although the last line is probably also a bug.</p> <pre><code>#!/usr/bin/perl use strict; use warnings; use autodie; use POSIX qw(strftime); use Time::Local; my $date = strftime "%Y-%m-%d", localtime; for my $group (glob "clients/*/ERRORi/$date/*s") { my $file = '/opt/' . $group; open my $input_fh, '&lt;', $file; print $input_fh; } </code></pre>
<p>Your <code>$file</code> variable contains a trailing linefeed character, whereas your actual file name doesn't.</p> <p>Your ought to <code>chomp</code> it out.</p>