Profiling an IIS website in perl
<p>I’m trying to profile a website I have to work on in IIS, in Perl. The website uses <a href="https://metacpan.org/pod/Catalyst" rel="nofollow"><code>Catalyst</code></a>. I’m using <a href="https://metacpan.org/pod/Devel::NYTProf" rel="nofollow"><code>Devel::NYTProf</code></a> to profile it.</p> <p>By default, the profile file is written in <code>./nytprof.out</code>. I don’t have access to the command line used to launch the perl, nor to pass arguments (I use <code>use Devel::NYTProf</code> to enable profiling in my perl file).</p> <p>But I can’t find the file… Do you have an idea where it’d be? How could I profile my website with NYTProf a better way?</p>
<p>I assume you mean IIS.</p> <p>Have you checked the user the web server is running as has write permission to likely folders? It use to run as IANONUSR (IIRC) or similar, which had very controlled permissions for obvious reasons.</p> <p>The IIS FastCGI module lets you set environment variables for the FastCGI processes, which should let you set out_file for NYTPROF. If all else fails you can hack Run.pm in NYTPROF and change the location that way, crude but at least you know where it is trying to write to.</p> <p>I salute your efforts, I would probably just port the application to run under Linux. First time getting NYTProf working under Linux was hard enough, especially as the processes have to terminate normally, so the FastCGI processes got a method added to make them die when I fetched a specific URL, which I'd keep fetching till all the processes were dead.</p> <p>That said NYTProf was well worth the effort on Linux, was able to track down a regular expression that was eating vast amounts of CPU, and didn't even need to be called 99.9% of the time it was. Experience on Windows was "fork" was a performance killer, but I think Microsoft fixed that somewhat since my IIS days.</p>