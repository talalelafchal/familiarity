Joining intervals in perl
<p>First let me show an example:</p> <p>I have one set of intervals like</p> <pre><code>[1,4],[5,15],[16,20] </code></pre> <p>and the other one like</p> <pre><code>[2,3],[6,14] </code></pre> <p>and I want it become one set like</p> <pre><code>[1,2],[3,4],[5,6],[7,15],[16,20] </code></pre> <p>I am not sure what this operation is called though, forget me if the title was misleading. Is there a CPAN module with I can use or is it better to come up with my own solution? Is there a general well known algorithm?</p>
<p>Using the <code>pairs</code> function from List::Util is a possible solution.</p> <pre><code>#!/usr/bin/perl use strict; use warnings; use List::Util 'pairs'; my @a1 = ([1,4],[5,15],[16,20]); my @a2 = ([2,3],[6,14]); my @new = pairs sort {$a &lt;=&gt; $b} map {@$_} @a1, @a2; use Data::Dumper; print Dumper \@new; </code></pre> <p>This prints</p> <pre><code>$VAR1 = [ [ 1, 2 ], [ 3, 4 ], [ 5, 6 ], [ 14, 15 ], [ 16, 20 ] ]; </code></pre>
<p>Step by step approach: </p> <pre><code>#!/usr/bin/perl use Data::Dumper; my @set1 = ([1,4],[5,15],[16,20]); my @set2 = ([2,3],[6,14]); # Make the tuples into an unsorted list my @nums = (); foreach my $tuple (@set1,@set2) { foreach my $num (@{$tuple}) { push @nums, $num; } } # Sort the list my @sorted = sort {$a &lt;=&gt; $b} @nums; print "@sorted\n"; # Retuple my @finalset = (); while(my @tuple = splice(@sorted,0,2)) { push @finalset, \@tuple; } print Dumper(\@finalset); </code></pre>