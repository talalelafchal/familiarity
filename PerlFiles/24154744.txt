Dynamically sorting array of hash by multiple keys in perl
<p>While looking for some pointers, on how to sort array of hash by multiple values, I came across the following solution: <a href="http://stackoverflow.com/questions/10395383/sorting-an-array-of-hash-by-multiple-keys-perl">Sorting array of hash by multiple keys</a>.</p> <p>But, cannot seem to figure out a way to do this dynamically.</p> <p>Say, if the number of parameters (here: hash key) that one would like to sort would depend on user input.</p> <p>Using the same example, as used by the user in the linked question:</p> <pre><code>$arr_ref = [ { 'brand' =&gt; 'A', 'supplier' =&gt; 'X', 'PO' =&gt; '2' }, { 'brand' =&gt; 'B', 'supplier' =&gt; 'Y', 'PO' =&gt; '1' }, { 'brand' =&gt; 'B', 'supplier' =&gt; 'X', 'PO' =&gt; '2' }, { 'brand' =&gt; 'A', 'supplier' =&gt; 'X', 'PO' =&gt; '1' }, { 'brand' =&gt; 'B', 'supplier' =&gt; 'X', 'PO' =&gt; '1' } </code></pre> <p>];</p> <p>The user can provide whether they want to sort it by just 'brand' , 'brand' and 'supplier' or all three of them.</p>
<p>Create a subroutine that does the sorting. It accepts any number of keys to do the comparison:</p> <pre><code>use strict; use warnings; my @array = ( { 'brand' =&gt; 'A', 'supplier' =&gt; 'X', 'PO' =&gt; '2' }, { 'brand' =&gt; 'B', 'supplier' =&gt; 'Y', 'PO' =&gt; '1' }, { 'brand' =&gt; 'B', 'supplier' =&gt; 'X', 'PO' =&gt; '2' }, { 'brand' =&gt; 'A', 'supplier' =&gt; 'X', 'PO' =&gt; '1' }, { 'brand' =&gt; 'B', 'supplier' =&gt; 'X', 'PO' =&gt; '1' }, ); sub custom_sort { my ($x, $y, @keys) = @_; for (@keys) { my $cmp = $x-&gt;{$_} cmp $y-&gt;{$_}; return $cmp if $cmp; } return 0; } my @sorted = sort {custom_sort($a, $b, 'brand', 'supplier', 'PO')} @array; use Data::Dump; dd @sorted; </code></pre> <p>Outputs:</p> <pre><code>( { brand =&gt; "A", PO =&gt; 1, supplier =&gt; "X" }, { brand =&gt; "A", PO =&gt; 2, supplier =&gt; "X" }, { brand =&gt; "B", PO =&gt; 1, supplier =&gt; "X" }, { brand =&gt; "B", PO =&gt; 2, supplier =&gt; "X" }, { brand =&gt; "B", PO =&gt; 1, supplier =&gt; "Y" }, ) </code></pre>