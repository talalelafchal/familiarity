Capture Output to stream and store as a string variable
<p>Although this question relates to 'BioPerl', the question, I believe, is probably more general than that. </p> <p>Basically I have produced a <a href="http://search.cpan.org/~cjfields/BioPerl-1.6.923/Bio/Tree/TreeI.pm" rel="nofollow">Bio::Tree::TreeI</a> object and I am trying to convert that into a string variable. </p> <p>The only way I can come close to converting that to a string variable is to write that tree to a stream using:</p> <pre><code># a $tree = Bio::Tree::TreeI-&gt;new() (which I know is an actual tree as it prints to the terminal console) my $treeOut = Bio::TreeIO-&gt;new(-format =&gt; 'newick') $treeOut-&gt;write_tree($tree) </code></pre> <p>The output of ->write_tree is "Writes a tree onto the stream" but how do I capture that in a string variable as I can't find another way of returning a string from any of the functions in <a href="http://search.cpan.org/~cjfields/BioPerl-1.6.901/Bio/TreeIO.pm" rel="nofollow">Bio::TreeIO</a> </p>
<p>You can redirect standard output to variable,</p> <pre><code>my $captured; { local *STDOUT = do { open my $fh, "&gt;", \$captured; $fh }; $treeOut-&gt;write_tree($tree); } print $captured; </code></pre>
<p>There is an easier way to accomplish the same goal by setting the file handle for BioPerl objects, and I think it is less of a hack. Here is an example:</p> <pre><code>#!/usr/bin/env perl use strict; use warnings; use Bio::TreeIO; my $treeio = Bio::TreeIO-&gt;new(-format =&gt; 'newick', -fh =&gt; \*DATA); my $treeout = Bio::TreeIO-&gt;new(-format =&gt; 'newick', -fh =&gt; \*STDOUT); while (my $tree = $treeio-&gt;next_tree) { $treeout-&gt;write_tree($tree); } __DATA__ (A:9.70,(B:8.234,(C:7.932,(D:6.321,((E:2.342,F:2.321):4.231,((((G:4.561,H:3.721):3.9623, I:3.645):2.341,J:4.893):4.671)):0.234):0.567):0.673):0.456); </code></pre> <p>Running this script prints the newick string to your terminal, as you would expect. If you use <a href="https://metacpan.org/pod/Bio%3a%3aPhylo" rel="nofollow">Bio::Phylo</a> (which I recommend), there is a <code>to_string</code> method (IIRC), so you don't have to create an object just to print your trees, you can just do <code>say $tree-&gt;to_string</code>.</p>