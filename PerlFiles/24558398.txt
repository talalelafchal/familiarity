Using reference file to find desired data in another file - Perl
<p>I used a Perl script to compare two arrays and retrieve data of interest. Now I want to use that list of retrieved data to get desired information from another list, using only the first part as an identifier but pulling all the information in that line.</p> <p>Example data:</p> <p>Reference:</p> <pre><code>apple orange pear </code></pre> <p>Search list:</p> <pre><code>apple 439 plum 657 orange 455 </code></pre> <p>Result:</p> <pre><code>apple 439 orange 455 </code></pre> <p>I've tried doing this with <code>Array::Compare</code> but haven't had any luck as it compares the entire line not just the first portion.</p> <p>Thanks!</p> <h1>EDIT: Thanks to DVK I now have the following code:</h1> <pre><code>#!/usr/bin/perl use strict; use warnings; use File::Slurp; #Convert the first file into an array of keys @keys my @keys = read_file('Matching_strains.txt'); #Convert the second file into an array of lines @lines2 my @lines = read_file('output2.txt'); #Convert that array of lines into a hash using map and split my %data = map { split(/\s+/, $, 2) } @lines; # 2 limits # of entries #Get a list of data for which keys are in the first list my %final = map { exists $data{$_} ? ( $_=&gt;$data{$_} ) : () } @keys; #Print that hash out print "%final\n"; </code></pre> <p>But I'm getting a number found where operator expected for the my %data, I've consulted perldoc but I'm not sure what number its referring to. Thanks!</p>
<p>This sort of thing should achieve what you're after:</p> <pre><code>use warnings; use strict; open my $file1, '&lt;', 'in.txt' or die $!; open my $file2, '&lt;', 'in.2.txt' or die $!; my (%keys, %data); while(&lt;$file1&gt;){ chomp; $keys{$_} = 1; } while(&lt;$file2&gt;){ chomp; my @split = split/\s/; $data{$split[0]} = $split[1]; } foreach (keys %keys){ print "$_ $data{$_}\n" if exists $data{$_}; } </code></pre> <hr> <pre><code>apple 439 orange 455 </code></pre>
<ul> <li><p>Convert the first file into an array of keys <code>@keys</code></p> <p>Left as excercise for the reader</p></li> <li><p>Convert the second file into an array of lines <code>@lines2</code></p> <p>Left as excercise for the reader</p></li> <li><p>Convert that array of lines into a hash using <code>map</code> and <code>split</code></p> <p><code>my %data = map { split(/\s+/, $, 2) } @lines; # 2 limits # of entries</code> </p></li> <li><p>Get a list of data for which keys are in the first list</p> <p><code>my %final = map { exists $data{$_} ? ( $_=&gt;$data{$_} ) : () } @keys;</code></p></li> <li><p>Print that hash out</p></li> </ul>