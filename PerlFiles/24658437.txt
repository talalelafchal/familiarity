Formatdb error message in perl module
<p>I'm using Unus, which is Perl package for phylogenomic analyses. In this package, the blast-2.2.25 is used because the package uses the formatdb program, as follows:</p> <pre><code>if ( ( grep { $self-&gt;{'program'} eq $_ } qw(blastn tblastx tblastn) ) &amp;&amp; !( -e $self-&gt;{'db'} . ".nin" || -e $self-&gt;{'db'} . ".nal" ) ) { system( $self-&gt;{'formatdb'}, '-i', $self-&gt;{'db'}, '-o', 'T', '-p', 'F' ) == 0 or LOGDIE "Error running formatdb: $!"; } elsif ( ( grep { $self-&gt;{'program'} eq $_ } qw(blastp blastx) ) &amp;&amp; !( -e $self-&gt;{'db'} . ".pin" || -e $self-&gt;{'db'} . ".pal" ) ) { system( $self-&gt;{'formatdb'}, '-i', $self-&gt;{'db'}, '-o', 'T', '-p', 'T' ) == 0 or LOGDIE "Error running formatdb: $!"; } </code></pre> <p>However, there is a constant error message that is blocking Unus. </p> <pre class="lang-none prettyprint-override"><code>[formatdb] WARNING: Cannot add sequence number 6 (lcl|XamC:6) because it has zero-length. [formatdb] WARNING: Cannot add sequence number 1 (lcl|Xam_:1) because it has zero-length. [formatdb] FATAL ERROR: Fatal error when adding sequence to BLAST database. [formatdb] WARNING: Cannot add sequence number 41 (lcl|Xamc:41) because it has zero-length. [formatdb] FATAL ERROR: Fatal error when adding sequence to BLAST database. [formatdb] WARNING: Cannot add sequence number 7 (lcl|XamF:7) because it has zero-length. [formatdb] WARNING: Cannot add sequence number 144 (lcl|Xam0:144) because it has zero-length. </code></pre> <p>I inspected the sequences, and they don´t have zero-length. Unus is running with 27 genomas of Xanthomonas​. Also, the input sequences were obtained after using the extract program in glimmer3. A example of a input sequence is:</p> <pre class="lang-none prettyprint-override"><code>&gt; orf00002 3568 4905 len=1338 GTGATTGTTTTTAAAGGAAATTTAGGGGCCGAAACCCTGTGTTTACCGCCCTGTTTTCTC ACAAACAAGCTGTGGATAAGCGAAAGCACCTCCACAGGCCCTATTTTTATCCACATGTTA TCCCCTGCCTGTCCGGTCATTCCTGGCGGCCATGTCTGCACGGTTTCATGCCGATCCCGT ATCCTTCGAACCGACCGGCATGCCGGATTACAGCCCAGAGCACACCGATCGATGCATGTA GTGCGGTTGTCCATTCATCGGCTTCGTCGGTTTCAAACCGTCGAGCTTCATCCCTCCAGT GCCTTGAATCTGCTGACCGGCGACAACGGCGCGGGCAAGACCAGCGTGCTCGAAGCGCTA CACCTGATGGCTTACGGCCGCAGCTTCCGCGGGCGCGTCCGCGACGGCCTGATCCAACAA GGCGCCAACGACCTCGAAGTGTTCGTGGAGTGGAAAGAAGGCGGCGGCGCTGCGGTCGAG CGGACGCGTCGGGCTGGCTTGCGTCATAGCGGGCAGGAATGGACAGGGCGCCTGGACGGG GAAGACGTGGCGCAGCTTGGCTCTCTTTGCGCTGCGCTGGCAGTGGTGACGTTCGAGCCC GGCAGCCACGTATTGATCAGTGGCGGTGGTGAACCCCGCCGCCGTTTTCTGGATTGGGGC CTGTTCCACGTGGAACCCGATTTTCTAACCTTGTGGCGCCGCTATGCGCGAGCCCTCAAA &gt;orf00004 5020 7464 len=2445 ATGACCGACGAACAAAACACCCCGCCAACACCCAACGGCACCTACGACTCCAGCAAGATC ACCGTGCTGCGTGGCCTGGAAGCCGTCCGCAAGCGTCCCGGCATGTATATCGGCGACGTC CATGACGGCACCGGCCTGCATCACATGGTGTTCGAGGTGGTCGACAACTCGGTCGACGAA GCCCTTGCCGGGCATGCCGACGACATCGTGGTAAAAATCCTGGCCGATGGCTCGGTGGCG GTCTCCGACAACGGGCGCGGCGTGCCGGTCGACATCCACAAGGAAGAAGGCGTGTCGGCG GCCGAGGTGATCCTCACCGTGCTCCACGCCGGCGGCAAGTTCGACGACAACAGCTACAAG GTCTCCGGCGGCCTGCACGGCGTTGGCGTCTCGGTGGTCAACGCGTTGTCAGAGCACCTG TGGCTGGATATCTGGCGCGACGGCTTCCACTACCAGCAGGAATACGCGCTGGGCGAGCCG CAGTACCCGCTCAAGCAGCTGGAAGCCTCGACCAAGCGCGGTACCACGCTGCGCTTCAAG CCGTCCGTGGCCATCTTCAGCGACGTCGAGTTCCATTACGACATCCTGGCGCGGCGCCTG CGCGAGCTGTCCTTCCTCAATTCTGGCGTCAAGATCACCTTGATCGACGAGCGCGGCGAA GGCCGTCGCGACGATTTCCATTACGAAGGCGGCATCCGCAGCTTCGTGGAGCATCTGGCG CAGCTGAAGTCGCCGCTGCACCCGAATGTGATCTCGGTGACCGGCGAGCACAACGGCATC ATGGTGGACGTGGCCCTGCAATGGACCGACGCCTACCAGGAAACCATGTACTGCTTCACC </code></pre> <p>Whan can I do to solve the problem?, or Should I change the code in the part, where Unus is using formatdb ? Finally, I used Unus with 4 Shigella genomes before, and it didn´t have this problem.</p>
<p>The error looks as though it originates from formatdb itself rather than Unus, so modifying Unus may not help. Even though the fasta file appears fine on the surface, formatdb is saying that it's not happy with it.</p> <p>One possible issue is in your first example fasta sequence. There shouldn't be a space between ">" and "orf00002". This could potentially be causing the errors.</p> <p>In case it isn't, try checking your fasta file for special characters, especially Unix/Windows/Mac line endings, or for some other format-compatibility issue. Notepad++ is helpful for revealing otherwise-invisible special characters.</p> <p>If you can't find any obvious issues, try making a small database of just one or two fasta sequences until you get it working, then add others back in.</p> <p>Regarding special characters, if formatdb still complains after checking/modifying what you can find, consider checking for character encoding issues. This happened to me once with blastn. In my (copy/pasted) command I had an "o" character, which looked exactly like a normal "o" character to me, yet blastn refused to work until I replaced it with a keyboard-generated "o". It turns out that the copied character was encoded in Unicode or ANSI (don't recall) and blastn or bash couldn't deal with it.</p>