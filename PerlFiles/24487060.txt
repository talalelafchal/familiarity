character position in string
<p>I have a data frame with character strings in <code>column1</code> and ID in <code>column2</code>. The string contains <code>A,T,G or C</code>. I would like to print the lines that have an <code>A</code> at position 1. Then I would like to print the lines that have <code>A</code> at position 2 and so on and save them in separate files. So far I have used biostrings in R for similar analysis, but it won't work for this problem exactly. I would like to use perl. </p> <pre><code>Sequence ID TATACAAGGGCAAGCTCTCTGT mmu-miR-381-3p TCGGATCCGTCTGAGCT mmu-miR-127-3p ATAGTAGACCGTATAGCGTACG mmu-miR-411-5p ...... 600 more lines </code></pre>
<p>Biostrings will work perfectly, and will be pretty fast. Let's call your DNA stringset <code>mydata</code></p> <pre><code>HasA &lt;- sapply(mydata,function(x) as.character(x[2]) == "A") </code></pre> <p>Now you have a vector of TRUE or FALSE indicating which sequence has an A at position 2. You can make that into a nice data frame like this</p> <pre><code>HasA.df &lt;- data.frame("SeqName" = names(mydata), "A_at_2" = HasA) </code></pre>
<p>Not sure about the expected result,</p> <pre><code> mydata &lt;- read.table(text="Sequence ID TATACAAGGGCAAGCTCTCTGT mmu-miR-381-3p TCGGATCCGTCTGAGCT mmu-miR-127-3p ATAGTAGACCGTATAGCGTACG mmu-miR-411-5p",sep="",header=T,stringsAsFactors=F) mCh &lt;- max(nchar(mydata[,1])) #gives the maximum number of characters in the first column sapply(seq(mCh), function(i) substr(mydata[,1],i,i)=="A") #gives the index </code></pre> <p>You can use <code>which</code> to get the index of the row that satisfies the condition for each position</p> <pre><code> res &lt;- stack(setNames(sapply(seq(mCh), function(i) which(substr(mydata[,1],i,i)=="A")),1:mCh))[,2:1] tail(res, 5) #for the 13th position, 1st and 3rd row of the sequence are TRUE ind values #11 13 1 #12 13 3 #13 14 2 #14 15 3 #15 20 3 </code></pre> <p>use the index <code>values</code> to extract the rows. For the 1st position</p> <pre><code> mydata[res$values[res$ind==1],] # Sequence ID # 3 ATAGTAGACCGTATAGCGTACG mmu-miR-411-5p </code></pre>
<p>Using a perl one-liner</p> <pre><code>perl -Mautodie -lane ' BEGIN {($f) = @ARGV} next if $. == 1; my @c = split //, $F[0]; for my $i (grep {$c[$_] eq "A"} (0..$#c)) { open my $fh, "&gt;&gt;", "$f.$i"; print $fh $_; } ' file </code></pre>