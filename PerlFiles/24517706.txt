Finding appropriate equivalents of LDAP commands in Perl (Originally written in C)
<p>I am currently tasked with upgrading an old c script to perl, the functionality of which is essentially to go through LDAP records and lock/unlock various accounts. I apologize if I'm giving either too much or too little information, this is my first question.</p> <p>What I'm struggling with is finding A: documentation on a few constants I'm seeing and B: finding appropriate subroutines in perl which are comparable to some c functions. Perhaps I don't even need them, I'm hoping someone will be able to clarify. </p> <p>Here is a block of the relevant c code:</p> <pre><code>int auth_method = LDAP_AUTH_SIMPLE; int desired_version = LDAP_VERSION3; if (ldap_set_option (ld, LDAP_OPT_PROTOCOL_VERSION, &amp;desired_version) != LDAP_OPT_SUCCESS) { ldap_perror (ld, "ldap_set_option failed!"); exit (EXIT_FAILURE); } if (ldap_bind_s (ld, root_dn, root_pw, auth_method) != LDAP_SUCCESS) { ldap_perror (ld, "ldap_bind failed"); exit (EXIT_FAILURE); } </code></pre> <p>Now, as far as the constants with which I'm concerned, I have thus far been unable to see what integer is represented by <code>LDAP_AUTH_SIMPLE</code> or <code>LDAP_VERSION3</code> (although the latter I can assume.) And even more importantly than that, I have been wholly unsuccessful with finding a perl function in Net::LDAP anywhere which enables the setting of options in this way, or really in any way.</p> <p>Am I looking in the wrong places? I can assure you I did more than a few minutes of "googling" becaure deciding to come to you all. I didn't want to ask a stupid question. Thank you in advance, and please let me know if more/less information is needed or if I could be doing anything else differently or better. Thank you.</p> <p>EDIT: I realized the first if statement can be entirely circumvented by setting the version when contstructing the LDAP object, although I would still like to know how to set the options in perl, the documentation I have found hasn't been very helpful vis-a-vis syntax and constants/what the variables expect, mostly I have gleaned this information from empirical examples.</p> <p>My question about the constants remains, mostly out of curiosity and potential future need (I'm not very far into this script conversion and don't want to let things like this pile up)</p>
<p>The documentation for the Net::LDAP <a href="https://metacpan.org/pod/distribution/perl-ldap/lib/Net/LDAP.pod#CONSTRUCTOR" rel="nofollow">constructor</a> specifies a <code>version</code> field and specifically says that LDAPv3 is the default. LDAP simple authentication is done by providing the cleartext password in the <code>bind</code> method. So this should be the rough equivalent of what you want:</p> <pre><code>use strict; use warnings; use Net::LDAP; my $root_dn = '...'; my $root_pw = '...'; my $ldap = Net::LDAP-&gt;new( $root_dn ); # LDAPv3 by default my $mesg = $ldap-&gt;bind( $root_dn, password =&gt; $root_pw ); if ( $mesg-&gt;code ) { die "LDAP error: " . $mesg-&gt;error; } </code></pre> <p>The above should get you started but may not be completely correct. It's been about a billion years since I've done anything with LDAP.</p>