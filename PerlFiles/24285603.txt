uninitialized value error in perl
<p>I'm pretty new to perl (and programming in general but I'm used to Python). </p> <pre><code>use strict; use warnings; use diagnostics; my $simple_variable = "string"; print my $simple_variable; </code></pre> <p>Basically I want to know why this script returns an uninitialized value error, since the variable is clearly defined. </p> <p>Thanks</p>
<p><code>my</code> creates a variable and initializes it to undef (scalars) or empty (arrays and hashes). It also returns the variable it creates.</p> <p>As such, </p> <pre><code>print my $simple_variable; </code></pre> <p>is the same thing as</p> <pre><code>my $simple_variable = undef; print $simple_variable; </code></pre> <p>You meant to do</p> <pre><code>my $simple_variable = "string"; print $simple_variable; </code></pre> <p>I'm not sure why you are asking this because Perl already told you as much. Your program outputs the following:</p> <pre><code>"my" variable $simple_variable masks earlier declaration in same scope at a.pl line 6 (#1) (W misc) A "my", "our" or "state" variable has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier variable will still exist until the end of the scope or until all closure referents to it are destroyed. </code></pre> <p>Note how the new declaration has the effect of "effectively eliminating all access to the previous instance".</p>