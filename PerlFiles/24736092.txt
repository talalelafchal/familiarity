Defining hash value depending on the hash itself in perl
<p>I want to fix the following code in such a way so as to have the desired output as given below. But i find both the print statements dont work at same time.</p> <p><strong>Code:</strong></p> <pre><code>our %HASH=( elem1=&gt;["FD1","FD2",$arr_path[0]], elem2=&gt;["FD4","FD5",$arr_path[1]], ); my @arr_path=( "/abc/def/$HASH{elem1}[0].ctrl", "/abc/def/$HASH{elem1}[1].ctrl" ); print "\nPrinting path from HASH :". $HASH{"elem1"}[2]; print "\nPrinting path from arr_path :". $arr_path[0]; print "\n"; </code></pre> <p><strong>Obtained output:</strong></p> <pre><code>Printing path from HASH : Printing path from arr_path :/abc/def/FD1.ctrl </code></pre> <p><strong>Desired output:</strong></p> <pre><code>Printing path from HASH :/abc/def/FD1.ctrl Printing path from arr_path :/abc/def/FD1.ctrl </code></pre>
<p>You can't make two variables that depend on each other.</p> <p>What you could do is something like:</p> <pre><code>our %HASH=( elem1=&gt;["FD1","FD2",], elem2=&gt;["FD4","FD5",], ); my @arr_path=( "/abc/def/$HASH{elem1}[0].ctrl", "/abc/def/$HASH{elem1}[1].ctrl" ); $HASH{elem1}[2] = $arr_path[0]; $HASH{elem2}[2] = $arr_path[1]; </code></pre> <p>but that's a bit confusing.</p> <p>I think that you need to re-think your data structures and fetch the data from one structure, calculating the dependent information that you need. (If performance is an issue, use memoization.)</p>