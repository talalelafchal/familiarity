How to make this quicker?
<p>I have a Perl script that uses SSH to log into servers on a text document, or what ever you choose the script to use, and executes a set command.</p> <p>This script takes too long to go through a list of, say, 70, and sometimes it will also just randomly stop. It says it's still executing the script, but it stops sending commands. </p> <p>I need a way to prevent it freezing, and also to make run much more quickly</p> <pre><code>#!/usr/bin/perl use Net::SSH2; open(fh,'&lt;','servers.txt'); @newarray; while (&lt;fh&gt;){ @array = split(':',$_); push(@newarray,@array); } $a=0; $b=1; $c=2; while ($c &lt;= scalar(@newarray)){ $ssh = Net::SSH2-&gt;new(); if ($ssh-&gt;connect($newarray[$c])) { if ($ssh-&gt;auth_password($newarray[$a],$newarray[$b])) { $channel = $ssh-&gt;channel(); $channel-&gt;exec('cd /tmp &amp;&amp; perl p.pl'); $channel-&gt;close; print "Command sent to --&gt; ".$newarray[$c]."\n"; } else { print "Could not authenticate to host $newarray[$c]\n"; } } else { print "Could not connect to host $newarray[$c]\n"; } $a += 3; $b += 3; $c += 3; } </code></pre>
<p>You can easily parallelize the tasks with <a href="http://search.cpan.org/~dlux/Parallel-ForkManager-0.7.5/ForkManager.pm" rel="nofollow">ForkManager</a></p> <pre><code>#!/usr/bin/perl use Net::SSH2; use Parallel::ForkManager; ####################### # Written by Iyzan # ####################### open(fh,'&lt;','servers.txt'); @newarray; while (&lt;fh&gt;){ @array = split(':',$_); push(@newarray,@array); } # make 10 workers my $pm = new Parallel::ForkManager(10); for (my $i=0; $i &lt; scalar(@newarray); $i+=3) { # fork a worker $pm-&gt;start and next; $a = $i; $b = $i+1; $c = $i+2; $ssh = Net::SSH2-&gt;new(); if ($ssh-&gt;connect($newarray[$c])) { if ($ssh-&gt;auth_password($newarray[$a],$newarray[$b])) { $channel = $ssh-&gt;channel(); $channel-&gt;exec('cd /tmp &amp;&amp; perl p.pl'); $channel-&gt;close; print "Command sent to --&gt; ".$newarray[$c]."\n"; } else { print "Could not authenticate to host $newarray[$c]\n"; } } else { print "Could not connect to host $newarray[$c]\n"; } # exit worker $pm-&gt;finish; } $pm-&gt;wait_all_children; </code></pre>