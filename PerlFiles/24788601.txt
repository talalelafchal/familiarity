perl error &quot;out of memory&quot; glibc detected - how to fix
<p>I got this crazy message:</p> <pre><code>Out of memory! *** glibc detected *** perl: double free or corruption (!prev): 0x00000003f8f89690 *** ======= Backtrace: ========= /lib64/libc.so.6[0x372bc75916] /lib64/libc.so.6[0x372bc78443] /usr/lib64/perl5/CORE/libperl.so(Perl_pregfree+0xd1)[0x3c5da74581] /usr/lib64/perl5/CORE/libperl.so(Perl_op_clear+0xeb)[0x3c5da3829b] /usr/lib64/perl5/CORE/libperl.so(Perl_op_free+0x15c)[0x3c5da3670c] /usr/lib64/perl5/CORE/libperl.so(Perl_op_free+0xbc)[0x3c5da3666c] ======= Memory map: ======== 00400000-00401000 r-xp 00000000 08:01 2229974 /usr/bin/perl 00601000-00603000 rw-p 00001000 08:01 2229974 /usr/bin/perl 0146c000-3f90ce000 rw-p 00000000 00:00 0 [heap] 372b800000-372b820000 r-xp 00000000 08:01 4587522 /lib64/ld-2.12.so ...(alot of these).... =&gt;&gt; PBS: job killed: vmem 17400672256 exceeded limit 17179869184 </code></pre> <p>When I ran a script that I have used many times before (smallish files 5-10gb) on a larger file (50gb). I googled around and don't really understand what my code problem could be in relation to those answers so here's my code:</p> <pre><code> my ($ethnicity) = @ARGV; my @map; open ($fh, "&lt;", "/path/$filename") or die ("Unable to open input file: $!"); open ($fh4, "&lt;", "/path/$filename") or die ("Unable to open input file: $!"); my @ID = &lt;$fh4&gt;; open ($fh2, "&gt;", "/path/$filename") or die ("Unable to open output file: $!"); open ($fh3, "&gt;", "/path/$filename") or die ("Unable to open output file: $!"); my $i=0; my $j=0; print "The .ped and .map files are being generated\n"; while( my $line = &lt;$fh&gt; ){ if ($.&lt;3){ $map[$j] = $line; $j++;} else{ my $temp = $line; $temp =~ m/(\d*) (.*)/; chomp($temp); my $ID = $1; print "$ID- "; my $geno = $2; $geno =~ s /([ATCG])([ATCG])/$1 $2/g; $temp = $ID[$i]; $temp =~ m/(\d*) (1 0 0 [012] [012])/; print "$1\n"; if($ID eq $1){ print $fh2 "$ID $2 $geno\n"; $i++;} else{next;} } } close $fh; close $fh2; </code></pre> <p>What have I done wrong? I thought I coded it to look line by line, and write out to the file line by line to save memory. </p>
<p>You're loading the entire file opened as <code>$fh4</code> into memory, but there's no reason to.</p> <pre><code>my $line_from_fh4 = &lt;$fh4&gt;; my ($id_from_fh4, $rest_from_fh4) = $line_from_fh4 =~ m/(\d*) (1 0 0 [012] [012])/; while(my $line = &lt;$fh&gt;) { if ($.&lt;3) { push @map, $line; next; } chomp($line); my ($ID, $geno) = $line =~ m/(\d*) (.*)/; $geno =~ s/[ATCG]\K(?=[ATCG])/ /g; print "$ID- $id_from_fh4\n"; if ($ID eq $id_from_fh4){ print $fh2 "$ID $rest_from_fh4 $geno\n"; $line_from_fh4 = &lt;$fh4&gt;; ($id_from_fh4, $rest_from_fh4) = $line_from_fh4 =~ m/(\d*) (1 0 0 [012] [012])/; } } </code></pre>