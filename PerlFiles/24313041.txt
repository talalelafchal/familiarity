Why is the server returned the result for a different submit than selected by perl HTML::Form and LWP::UserAgent?
<p>I want to process a number of files with <a href="http://2struc.cryst.bbk.ac.uk/twostruc" rel="nofollow">http://2struc.cryst.bbk.ac.uk/twostruc</a>; to automate this I wrote a perl script using perl's HTML::Form.</p> <p>This server has a two step submit process: first, upload a file or enter an id; second, select the methods to be used and the output (by chosing one of five submits). </p> <p>The first step works, but for the second step I seem to be unable to chose any submit button other than the first, even though my script output confirms that I selected the one I want (different from the first).</p> <p>The two core parts of the code are below, the request function:</p> <pre><code>sub create_submit_request { my $form_arrayref = shift; my $form_action = shift; my $value_hashref = shift; my $submit_name = shift; my $submit_index = shift; my $found_form = 0; my $form; foreach my $this_form( @$form_arrayref) { printf( "# Found form with action=%s\n", $this_form-&gt;action); if( $this_form-&gt;action eq $form_action) { $found_form = 1; $form = $this_form; } } die( "# Error: No form with action $form_action") if( $found_form == 0); my @inputs = $form-&gt;inputs; my $inputs_string; foreach my $input( @inputs) { my $input_name = defined( $input-&gt;name) ? $input-&gt;name : "&lt;unnamed_input&gt;"; my $input_value = defined( $input-&gt;value) ? $input-&gt;value : ""; $inputs_string .= $input_name.( length( $input_value) &gt; 0 ? "=".$input_value : "")." (".$input-&gt;type."); "; } printf( "# Available input names: %s\n", $inputs_string); printf( "# Filling in form data\n"); while( my( $key, $value) = each( %$value_hashref)) { $form-&gt;value( $key, $value); } my @submit_buttons = $form-&gt;find_input( $submit_name, "submit", $submit_index); # 1-based counting for the index die( "# Error: Can only handle a single submit, but found ".scalar( @submit_buttons)) if( scalar( @submit_buttons) != 1); my %submit_hash = %{ $submit_buttons[ 0]}; # DEBUG printf( "# Use submit: %s\n", Data::Dumper-&gt;Dump( [ \%submit_hash ])); return $form-&gt;click( %submit_hash); } </code></pre> <p>and the code using it:</p> <pre><code>my $request = HTTP::Request-&gt;new( GET =&gt; $url_server); my $response = $useragent-&gt;request( $request); # the first page contains the pdb id input and file upload inputs my @forms = HTML::Form-&gt;parse( $response); my %value_hash = ( "file" =&gt; $pdb_file); # the submit buttons have no name, use undef; chose the first one (w/o javascript) $request = create_submit_request( \@forms, $form_action1, \%value_hash, undef, 1); printf( "# Submitting to server\n"); $response = $useragent-&gt;request( $request); # the first page contains the pdb id input and file upload inputs @forms = HTML::Form-&gt;parse( $response); %value_hash =( "dsspcont" =&gt; "on", "stride" =&gt; "on"); # this form has 5 submit buttons; select the 5th $request = create_submit_request( \@forms, $form_action2, \%value_hash, undef, 5); printf( "# Submitting to server\n"); $response = $useragent-&gt;request( $request); my $response_content = $response-&gt;content; printf( "# Response content: %s\n", $response_content); </code></pre> <p>Even though the script prints</p> <pre><code># Use submit: $VAR1 = { 'name' =&gt; 'function_sequenceStructureAlignment', 'onclick' =&gt; 'this.form.target=\'_blank\';return true;', 'type' =&gt; 'submit', 'value' =&gt; 'Sequence Structure Alignments', 'value_name' =&gt; '' }; </code></pre> <p>which is the 5th submit button in the second step, the response is equivalent to pressing the first submit button.</p> <p>To test the server itself, the file 1UBI.pdb can be downloaded from <a href="http://www.rcsb.org/pdb/files/1UBI.pdb" rel="nofollow">http://www.rcsb.org/pdb/files/1UBI.pdb</a> and uploaded to the server. The full script is at <a href="http://pastebin.com/bSJLvNfc" rel="nofollow">http://pastebin.com/bSJLvNfc</a> and can be run with</p> <pre><code>perl 2struc.pl --pdb 1UBI.pdb </code></pre> <p>Why is the server returning a different output/submit that I seem to select in the script? </p> <p>(It seems it's not dependend on cookies, because I can clear them after the first step, and still get the correct result for the second step in a web browser.)</p>
<p>You gave a hash as selector for click, which is wrong (see documentation how to specify the selector). But because you have already found the correct submit element you could simply call click directly on it:</p> <pre><code>--- orig.pl +++ fixed.pl @@ -87,7 +87,7 @@ # DEBUG printf( "# Use submit: %s\n", Data::Dumper-&gt;Dump( [ \%submit_hash ])); - return $form-&gt;click( %submit_hash); + return $submit_buttons[0]-&gt;click($form); } sub predict_pdb </code></pre>