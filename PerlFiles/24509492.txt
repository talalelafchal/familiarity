perl - some substitute with regex
<p>Can someone explain to me the following, what does it means start with substitute:</p> <pre><code>$delta_Value[$j] =~ s/(^.{12}).*$/$1/; </code></pre> <p>I want to know if it means that a <code>.</code> is at the beginning of the line and what it says next.</p>
<p>This code will keep the 12 first characters and discard the rest. Using regex is not the best way of doing this though...</p> <p><code>^</code> means the start of the string<br> <code>.</code> is a placeholder for <em>any character</em>.<br> <code>{12}</code> means <em>12 times</em> <code>.*$</code> means <em>everything until the end of the string</em><br> and finally <code>$1</code> means <em>take the content in the first pair of parentheses</em><br> <code>/</code> are just separators in Perl syntax: first part is the pattern, second part is the replacement string.</p> <hr> <p>Equivalent code:</p> <pre><code>$delta_Value[$j] = substr $delta_Value[$j], 0, 12 </code></pre>
<ul> <li><code>^</code> start matching with beginning of the string</li> <li><code>(..)</code> capture group (first is <code>$1</code>, second <code>$2</code>, etc.)</li> <li><code>.{12}</code> match any char except newline exactly 12 times (and store into <code>$1</code>)</li> <li><code>.*$</code> match any char except newline till end of string</li> <li><code>/$1/</code> replacement part of <code>s///</code> where everything matched so far is replaced with <code>$1</code></li> </ul> <p>Same could be achieved by matching only first 12 chars, instead of whole string,</p> <pre><code>$delta_Value[$j] = $1 if $delta_Value[$j] =~ /(^.{12})/; </code></pre>
<p>It means for position <code>$j</code> of Array <code>delta_value</code> delete everything but the first 12 characters</p> <p>Perldoc is your friend: <a href="http://perldoc.perl.org/perlre.html" rel="nofollow">http://perldoc.perl.org/perlre.html</a></p>
<p>The substitution operator matches and captures the first <code>12</code> characters at the beginning of the string while removing everything after that position and replaces the string with what was matched in the capturing group.</p> <p><strong>Explanation</strong>:</p> <pre><code>( # group and capture to \1: ^ # the beginning of the string .{12} # any character except \n (12 times) ) # end of \1 .* # any character except \n (0 or more times) $ # before an optional \n, and the end of the string </code></pre>