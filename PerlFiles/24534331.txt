Regex to get paths in rails app
<p>I am writing a perlscript to glob all the files using the git log from my rails app. I need help capturing paths from a git stat output.</p> <p>example : </p> <pre><code> app/controllers/bottled_lot_controller.rb | 18 -\ app/models/kastar.rb | 18 -\ app/helpers/bottled_helper.rb | 18 -\ </code></pre> <p>My regexp is not working for the all the lines like these anyone have a better idea?</p> <pre><code>[a-z]*\/[a-z]*\/[a-z || _ ]*.rb </code></pre>
<p>Because the data is from a git log, I think we can assume more well formed data then one would find in a general file system search. Namely, it's probably sufficient to just look for the <code>.rb</code> extension as the hard boundary condition.</p> <p>I'd therefore probably just use the following regex:</p> <pre><code>(?:\w+/)*\w+\.rb </code></pre>
<p>Your pattern contains some mistakes, but it could work for you if you used the <code>/x</code> modifier so that embedded spaces were insignificant</p> <p>Like this</p> <pre><code>use strict; use warnings; while (&lt;DATA&gt;) { next unless /([a-z]*\/[a-z]*\/[a-z || _ ]*.rb)/x; print $1, "\n"; } __DATA__ app/controllers/bottled_lot_controller.rb | 18 -\ app/models/kastar.rb | 18 -\ app/helpers/bottled_helper.rb | 18 -\ </code></pre> <p><strong>output</strong></p> <pre><code>app/controllers/bottled_lot_controller.rb app/models/kastar.rb app/helpers/bottled_helper.rb </code></pre> <p>The problem is that the character class <code>[a-z || _ ]</code> matches a single character that may be a lower case letter, a space, a pipe <code>|</code> or an underscore <code>_</code>. A repeated character inside a character class has no additional effect, and since there are no pipe characters in your data you simply need to avoid matching space characters, which is the effect that the <code>/x</code> modifier has.</p> <p>The character class you want here is just <code>[a-z_]</code>, and as you can change the regex delimiter to avoid having to escape the slash, the complete pattern would look like</p> <pre><code>m{([a-z]+/[a-z]+/[a-z_]+\.rb)} </code></pre> <p>And if you change the <code>next unless</code> line in the above program to</p> <pre><code>next unless m{([a-z]+/[a-z]+/[a-z_]+\.rb)}; </code></pre> <p>then it continues to work correctly, but this time for the right reasons!</p> <hr> <p><strong>Update</strong></p> <p>Since you have indicated that you also want to accept paths that start with zero or more path segments, you should use this pattern instead</p> <pre><code>next unless m{ ( (?: [a-z]+/ )* [a-z_]+\.rb ) }x; </code></pre>
<p>Input:</p> <pre><code>appTestParent/app/models/bottled_lot_controller.rb rb rb | 18 -\ app/controllers/bottled_lot_controller.rb | 18 -\ app/models/kastar.rb | 18 -\ app/helpers/bottled_helper.rb | 18 -\ app/bottled_helper.rb | 18 -\ bottled_helper.rb | 18 -\ </code></pre> <p>You could try the following regexp: <code>[a-z_]*?\/*?.*[.]rb</code> which will give you the following output:</p> <pre><code>appTestParent/app/models/bottled_lot_controller.rb app/controllers/bottled_lot_controller.rb app/models/kastar.rb app/helpers/bottled_helper.rb app/bottled_helper.rb bottled_helper.rb </code></pre>