Perl suppress backtick output with ping
<p>Suppressing system output from Perl code. </p> <p>This code works fine functionally until I run into a hostname that can't resolved and want to suppress the output of a unresolvable domain.</p> <p>If in the lists.hosts file there is a domain that can't be resolved, the screen output will contain: "ping: cannot resolve XXX.com: Unknown host"</p> <pre><code>my $ip; open(HOSTLIST, "lists.hosts"); # Load domains @hosts = &lt;HOSTLIST&gt;; chomp($host); foreach $host (@hosts) { $results = `ping -c 1 $host`; $record++; my $pos = index($results, $find); if (($results =~ /ttl=/) || ($results =~ /data bytes/)) { #$count++; chomp($host); if (($results =~ /(?&lt;=bytes from)(.*)(?=:)/) != 0) { ($ip) = ($results =~ /(?&lt;=bytes from)(.*)(?=:)/); } elsif (($results =~ /(?&lt;=\()(.*)(?=\))/) != 0) { ($ip) = ($results =~ /(?&lt;=\()(.*)(?=\))/); } print "Record: $record Host: $host IP:$ip Status: Passed"; print "\n"; #print ("*** Record# $record: Ping Test Succeeded for Server: $host ***\n"); #print ("$results\n"); } else { $count++; chomp($host); #print ("*** Record# $record: Ping Test Failed for Server: $host ***\n"); print "Record: $record Host: $host Status: Failed\n"; #print ("$results\n"); } } close(HOSTLIST); exit($errorcode); </code></pre>
<p>Your invocation of <code>ping</code> needs to capture stderr:</p> <pre><code>ping -c 1 $host 2&gt;&amp;1 </code></pre> <p>Also, you're not checking the return of your <code>open</code>, which you should do always. Finally, you should be using <code>use warnings;</code> and <code>use strict;</code> at the top.</p>