perl date time quandry
<p>I am trying to use perl date/time and also get file date info. I started with this routine:</p> <pre><code>sub getTime { @arrayDate = localtime(time); ($strSec,$strMin,$strHr,$strDate,$strMo,$strYr,$strDOW,$strDOY,$strDST) = localtime(time); $strYr += 1900; $strMo += 1; if (length($strMo) &lt; 2) { $strMo = "0" . $strMo } if (length($strDate) &lt; 2) { $strDate = "0" . $strDate } if (length($strHr) &lt; 2) { $strHr = "0" . $strHr } if (length($strMin) &lt; 2) { $strMin = "0" . $strMin } if (length($strSec) &lt; 2) { $strSec = "0" . $strSec } $strDateTime = "$strYr$strMo$strDate $strHr:$strMin:$strSec"; } </code></pre> <p>Which worked fine.<br> Then I needed to get file date info using <code>$file1date = ctime(stat($flatFile1)-&gt;mtime);</code>.<br> Here is where the confusion begins. If I add <code>use File::stat</code> and <code>use Time::localtime</code> to get the file date to work, the first routine stops working and gives me this as output: <code>1900010 0:0:Time::tm=ARRAY(0x9a7b98)</code><br> So in order to get both to work I had to change the date routine to this:</p> <pre><code>sub getTime { $strMon = localtime-&gt;mon(); $strMday = localtime-&gt;mday(); $strYear = localtime-&gt;year(); $strHour = localtime-&gt;hour(); $strMin = localtime-&gt;min(); $strSec = localtime-&gt;sec(); $strYear += 1900; $strMon += 1; if (length($strMon) &lt; 2) { $strMon = "0" . $strMon } if (length($strMday) &lt; 2) { $strMday = "0" . $strMday } if (length($strHour) &lt; 2) { $strHour = "0" . $strHour } if (length($strMin) &lt; 2) { $strMin = "0" . $strMin } if (length($strSec) &lt; 2) { $strSec = "0" . $strSec } $strDateTime = "$strYear$strMon$strMday $strHour:$strMin:$strSec"; } </code></pre> <p>... which I'm sure is not efficient. What's the right way to do this?</p>
<p>I'd like to advise you to use <a href="http://perldoc.perl.org/Time/Piece.html" rel="nofollow"><code>Time::Piece</code></a>.</p> <p>The above core module alters the behavior of <a href="http://perldoc.perl.org/functions/localtime.html" rel="nofollow"><code>localtime</code></a> to return an object of type <code>Time::Piece</code> that has a <code>strftime</code> function. The following are your two goals performed with this module:</p> <pre><code>use strict; use warnings; use Time::Piece; use File::stat; print "Current time: " . localtime-&gt;strftime("%Y%m%d %H:%M:%S") . "\n"; print "Script created: " . localtime(stat($0)-&gt;ctime)-&gt;strftime("%Y%m%d %H:%M:%S") . "\n"; </code></pre> <p>Outputs:</p> <pre><code>Current time: 20140624 19:18:17 Script created: 20140624 15:54:36 </code></pre>
<p>I wouldn't say that there's anything <em>wrong</em> with the second method. My only suggestion would be to use <code>sprintf</code> to format <code>$strDateTime</code> instead of a block of <code>if</code> statements:</p> <pre><code>sub getTime { $strDateTime = sprintf("%04d%02d%02d %02d:%02d:%02d", localtime-&gt;year() + 1900, localtime-&gt;mon() + 1, localtime-&gt;mday(), localtime-&gt;hour(), localtime-&gt;min(), localtime-&gt;sec()); } </code></pre> <p>For reference: the field <code>%04d</code> means a decimal (<code>d</code>) field of length <code>4</code>, padded with <code>0</code>. Using fixed-length, padded decimal fields is a quick and easy way to format numbers.<br> You can see the whole guide on sprintf <a href="http://perldoc.perl.org/functions/sprintf.html" rel="nofollow">in the documentation</a>.</p>