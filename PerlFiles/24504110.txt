Perl/awk/sed Program to convert rows to columns between identifiers
<p><strong>My Input File Format:</strong></p> <pre><code>.set ABC col2=123 col3=xyz col4=bcd col5=efg .set prs col3=456 col5=kda </code></pre> <p><strong>My output format:</strong></p> <pre><code>ABC~123~xyz~bcd~efg prs~~456~~kda </code></pre> <p>Thanks</p>
<p>Every set in separate line, delimited by <code>~</code>,</p> <pre><code>perl -pe 'chomp; s|^(?=\.set)|\n| or s|^|~|' file </code></pre> <p>output</p> <pre><code>.set ABC~col2=123~col3=xyz .set prs~col2=456~col3=kda </code></pre> <p>If leading and trailing newline matters,</p> <pre><code>perl -nE 'chomp; s|^(?=\.set)|\n| or s|^|~| if $. &gt;1;print}{say' file </code></pre> <p><em>Update:</em></p> <pre><code>perl -pe 'chomp; s|^(?=\.set)|\n| or s|^\w+=|~|' file </code></pre> <p>output</p> <pre><code>.set ABC~123~xyz .set prs~456~kda </code></pre>
<p>Using <code>awk</code></p> <pre><code>awk '{printf (/^\.set/?RS:"~")"%s",$0} END {print ""}' file .set ABC~col2=123~col3=xyz .set prs~col2=456~col3=kda </code></pre> <p>If a blank line at the top of the output is a problem, do:</p> <pre><code>awk 'NR&gt;1{printf "%s"(/^\.set/?RS:"~"),a} {a=$0} END {print a}' file .set ABC~col2=123~col3=xyz .set prs~col2=456~col3=kda </code></pre> <p><code>/^\.set/</code> does line start with <code>.set</code>?<br> <code>?RS</code> yes, use <code>RS</code> a new line<br> <code>:"~" no, use</code>~` as field separator.<br></p> <p>So this is just a test in the formatting to see if you should use newline or <code>~</code> </p> <hr> <p>Updated to get correct result after OP change requested output.</p> <pre><code>awk -F= 'NR&gt;1{printf "%s"(/^\.set/?RS:"~"),a} {a=/^\.set/?$0:$2} END {print a}' file .set ABC~123~xyz .set prs~456~kda </code></pre>