System command output leaking - perl
<p>just starting to use Perl here. I previously have successfully used backticks to capture system command output in Perl, such as: </p> <pre><code>my @sysOut = `cleartool checkout -nc \"$file\"`; # works fine! </code></pre> <p>but I have run into some trouble, and even after looking around for some time I didn't find the solution to this problem. I am trying to write a Perl script to check in a list of checked out files <code>(@allfiles)</code> using cleartool, except if any are identical to their predecessor, then un-checkout them. </p> <p>The way I am (...failing at!) detecting whether they are identical or not is to get the output from the check in attempt, see if it matches <code>/error.*identical/i</code>, and then if so uncheckout the file. However, for some reason the output seems to bypassing the array I am passing it into.<br> See code which generates this problem:</p> <pre><code>foreach my $file (@allfiles){ chomp( my @checkInErr = `cleartool checkin -nc \"$file\"`); foreach my $err (@checkInErr) { # if no error, checkin done if ($err =~ m/error.*identical/i) { # if there is error: print $err; print "No change detected: unchecking out.\n"; # uncheckout same version system "cleartool uncheckout -rm -cact \"$file\""; } } } </code></pre> <p>Here is my command line output (as if I had just used a system() call):</p> <pre><code>cleartool: Error: Unable to check in "a5TI.txt". cleartool: Error: By default, won't create version with data identical to predecessor. cleartool: Error: Unable to check in "a6cm.txt". cleartool: Error: By default, won't create version with data identical to predecessor. cleartool: Error: Unable to check in "a6FT.txt". cleartool: Error: By default, won't create version with data identical to predecessor. cleartool: Error: Unable to check in "a6pm.txt". cleartool: Error: By default, won't create version with data identical to predecessor. cleartool: Error: Unable to check in "a6TI.txt". cleartool: Error: By default, won't create version with data identical to predecessor. </code></pre> <p><strong>SOLUTION:</strong> check std error stream as well when grabbing output (in retrospect this makes sense as I was trying to parse error messages... oh well)</p> <pre><code>my @checkInErr = `cleartool checkin -nc \"$file\" 2&gt;&amp;1`; </code></pre>
<p>It's possible the error output from cleartool is not coming out on Standard Output (stdout). With any luck, it's coming out on Standard Error (stderr). If so, this should work:</p> <pre><code>system "cleartool uncheckout -rm -cact \"$file\" 2&gt;&amp;1"; </code></pre>