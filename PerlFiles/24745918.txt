function call in perl
<p>As a part of my course work I have been learning perl programming language for the first time in last the few weeks. I have been writing small functions and making function calls. I have written a function for string matching.</p> <pre><code>use strict; use warnings; sub find_multi_string { my ($file, @strings) = @_; my $fh; open ($fh, "&lt;$file"); #store the whole file in an array my @array = &lt;$fh&gt;; for my $string (@strings) { if (grep /$string/, @array) { next; } else { die "Cannot find $string in $file"; } } return 1; } find_multi_string('file name', 'string1','string2','string3','string4','string 5'); </code></pre> <p>In the above script I'm passing the arguments in the function call. The script works. But I'd like to know if there is way to specify the file name and string1... string n in an array in the program itself and just make the function call.</p> <pre><code>find_multi_string(); </code></pre>
<p>That would be a mistake, always pass parameters and return values to your subroutines.</p> <p>What you're describing is essentially using subroutines solely to subdivide and document your code. If you were to do that, it would better to just remove the subroutine entirely and include a comment before the section of code.</p> <p>Overall, your code looks good as is. You probably will want to use <code>quotemeta</code> though, and your logic can be simplified a little:</p> <pre><code>use strict; use warnings; use autodie; sub find_multi_string { my ($file, @strings) = @_; # Load the file my $data = do { open my $fh, "&lt;", $file; local $/; &lt;$fh&gt; }; for my $string (@strings) { if ($data !~ /\Q$string/) { die "Cannot find $string in $file"; } } return 1; } find_multi_string('file name', 'string1','string2','string3','string4','string 5'); </code></pre>
<p>A few improvements of your original code:</p> <ul> <li>use <a href="https://metacpan.org/pod/autodie" rel="nofollow">autodie</a></li> <li>use 3-args <a href="http://perldoc.perl.org/functions/open.html" rel="nofollow">open</a></li> <li>as you want to check anywhere in the file, just load the file as a single string</li> <li>if the matching string are just text without metacharacters from regexp, just use the <a href="http://perldoc.perl.org/functions/index.html" rel="nofollow">index</a> function</li> </ul> <p>Your question is about passing the function arguments from your program. I suspect that you are looking for <code>@ARGV</code>. See <a href="http://perldoc.perl.org/perlvar.html" rel="nofollow">perlvar</a>.</p> <p>Here is the modified code:</p> <pre><code>use strict; use warnings; use autodie; sub find_multi_string { my ($file, @strings) = @_; my $content = do { open my $fh, '&lt;', $file; local $/; &lt;$fh&gt; }; foreach (@strings) { die "Cannot find $string in $file" unless index($content, $_) &gt;= 0; } return 1; } find_multi_string(@ARGV); </code></pre>