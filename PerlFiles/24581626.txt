Can't understand perl regex to unquote meta
<p>I came across this awesome regex:</p> <p><code>s/((?:\\[a-zA-Z\\])+)/qq[qq[$1]]/eeg</code> </p> <p>It does magic, but is so obscure I can't understand it. It works very well:</p> <pre><code>echo 'a\tb\nc\r\n' | perl -lpe 's/((?:\\[a-zA-Z\\])+)/qq[qq[$1]]/eeg' a b c </code></pre> <p>Let us watch it with <code>cat -A</code> :</p> <pre><code>echo 'a\tb\nc\r\n' | perl -lpe 's/((?:\\[a-zA-Z\\])+)/qq[qq[$1]]/eeg' | cat -A a^Ib$ c^M$ $ </code></pre> <p>I will keep it for future reference, but it would be really cool to understand it. I know <code>/ee</code> modifier evaluates <code>RHS</code>, but what are those <code>qq</code>s? Is the function <code>qq</code> for double quotes ? I would appreciate if someone could explain.</p> <p>PS. I found this regex <a href="https://groups.google.com/forum/#!topic/comp.lang.perl.misc/LSdUAeBUkx0" rel="nofollow">here</a></p>
<p>In perl re's you have single and double quotes, where "$foo" is expanded and '$foo' is literal.</p> <p>The <code>q</code> operator lets you set which character does <code>'</code> The <code>qq</code>operator sets the character for <code>"</code>.</p> <p>So in the awesome example, <code>[</code> is getting set to expand variables, and perl magic is making it more readable by pairing <code>]</code> with <code>[</code>. So it's expanding the variable twice, which without that highlighting would be deeply mysterious, and the <code>"</code> quotes get very confusing when mixed in with shell quoting.</p> <p>A simple example to try out :</p> <pre><code>% perl -E '$foo=bar; say qq[$foo];' bar % </code></pre>
<p><code>qq</code> is the interpolating quote operator. It's the same thing as putting a string between double quotes, but can use open-close character pairs like <code>[]</code> here. This has the advantage that you can nest it, which you couldn't do with double quotes.</p>