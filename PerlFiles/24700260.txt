I cannot Connect to any HTTPS site using LWP::UserAgent
<p>I am trying to create a script that simply just connect to a website. However, for some reason it will not connect to anything that is using HTTPS. </p> <p>We have a proxy enabled here. However, I believe the proxy is not the problem, because if I were to connect to an HTTPS inside the network that does not tunnel through a proxy it still fails. </p> <p>If I were to run this program on any site that is not using HTTPS, I can get through and the script works as intended.</p> <p>What I'm wondering is what could possible by blocking the script from connecting to any SSL secured sites. </p> <p>Here is the code that I wrote:</p> <pre><code>$ENV{HTTPS_DEBUG} = 1; my $ua = LWP::UserAgent-&gt;new( keep_alive =&gt; 1); $ua-&gt;agent('Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36'); my $pac = HTTP::ProxyPAC-&gt;new( URI-&gt;new("http://pacfilelocation:8080/pac_file.pac") ); my $res = $pac-&gt;find_proxy("https://www.google.com"); if ($res-&gt;direct) { print "No Proxy Needed\n"; } elsif ($res-&gt;proxy) { print "Proxy: " . $res-&gt;proxy . "\n"; $ENV{HTTPS_PROXY} = $res-&gt;proxy; $ENV{HTTP_PROXY} = $res-&gt;proxy; $ua-&gt;env_proxy; } my $req = new HTTP::Request('GET', 'https://www.google.com/'); $req-&gt;header('Accept' =&gt; 'text/html'); $req-&gt;header('Host', 'www.google.com'); my $res2 = $ua-&gt;request($req); if ( $res2-&gt;is_success ) { print $res2-&gt;decoded_content; } else { print "Error: " . $res2-&gt;status_line . "\n"; } </code></pre> <p>The HTTPS_DEBUG feature for some reason does not output the debug, which makes this all the more hard to solve.</p> <p>When running the script I get a generic error:</p> <pre><code> Error: 500 Can't connect to www.google.com:443 </code></pre> <p>Any help would be great!</p>
<p>Please make sure, that you use at least version 6.06 of LWP::UserAgent and version 6.06 of LWP::Protocol::https. Any versions before do not have proper support for https proxy, at least not when using IO::Socket::SSL as the underlying SSL library. </p> <p>To get the versions you are running:</p> <pre><code>use LWP::UserAgent; use LWP::Protocol::https; print "LWP::UserAgent: ".LWP::UserAgent-&gt;VERSION,"\n"; print "LWP::Protocol::https: ".LWP::Protocol::https-&gt;VERSION,"\n"; </code></pre> <p>If you use anything less than the required versions upgrade. While this is easy for LWP::UserAgent, cpan might not install the newest version of LWP::Protocol::https by default, see <a href="http://www.nntp.perl.org/group/perl.libwww/2014/05/msg7718.html">http://www.nntp.perl.org/group/perl.libwww/2014/05/msg7718.html</a>. In this case you have to get it explicitly from <a href="http://search.cpan.org/~mschilli/LWP-Protocol-https-6.06/">http://search.cpan.org/~mschilli/LWP-Protocol-https-6.06/</a>.</p> <p>If you are on a recent Debian system or Ubuntu >=14.04 you will still have version 6.04 of LWP::Protocol::https, but this includes already the necessary patches for proper https proxy support.</p> <p>The other alternative would be to use the old Net::SSL/Crypt::SSLeay backend for LWP, but I advice against it, because it does not implement all necessary certificate checks and thus mounting a man-in-the-middle attack against it is easy. </p>