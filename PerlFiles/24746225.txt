Parsing a text config file in perl
<p>Hi guys so I have a config text file that looks like this.</p> <pre><code>$name search_key,0x0 $name2 search_key2,0x1 </code></pre> <p>each block can have multiple entries like below</p> <pre><code>$name search_key1,0x1 search_key2,0x0 </code></pre> <p>There may also be more than one value.</p> <pre><code>$name search_key, 0x1, 0x0 </code></pre> <p>What I am aiming to do is use each $name to rename a file, then the key word will be searched in the file and the value changed e.g search_key1 might have an original value of 0x0 which will be changed to 0x1.</p> <p>I have finished the second part of what I am aiming to do, be hard coding the values into my script, but I can't for the life of me figure out what way I should parse the file and I have been stuck on it so long all my ideas are stale any one have any advice? I don't even know which direction to take at this stage </p>
<p>I would suggest using yaml for your config file instead of writing your own parser config file and parser.</p> <p>Here's what a yaml file of data like yours might look like.</p> <pre><code>--- - file - key: search_key: search: 0x1 name: Name - file - key: search_key1: search: 0x1 search_key2: search: 0x0 name: Name2 - file - key: search_key3: replace: 0x0 search: 0x1 name: Name3 </code></pre> <p>Here's what the data might look like:</p> <pre><code>my $data = [ file =&gt; { name =&gt; 'Name', key =&gt; { 'search_key' =&gt; { search =&gt; '0x1' } } }, file =&gt; { name =&gt; 'Name2', key =&gt; { search_key1 =&gt; { search =&gt; '0x1' }, search_key2 =&gt; { search =&gt; '0x0' } } }, file =&gt; { name =&gt; 'Name3', key =&gt; { search_key3 =&gt; { search =&gt; '0x1', replace =&gt; '0x0' } } } ]; </code></pre> <p>so <code>$data-&gt;[2]-&gt;{file}-&gt;{name}</code> would be <code>Name3</code>. <code>$data-&gt;[2]-&gt;{file}-&gt;{key}-&gt;{search_key3}-&gt;{search}</code> would be <code>0x1</code> and the associated <code>-&gt;{replace}</code> would be <code>0x0</code>.</p> <p>If you set your data up this way, you can use a for loop to traverse the elements of the $data arrayref.</p>