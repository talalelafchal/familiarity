Replace text between 2 strings (inclusive)
<p>Is there a perl one-liner that could replace some text between 2 strings (inclusive)? For example in the text below I need to replace everything between <em>'rrpv_bits = 2'</em> and <em>'options.cacheline_size'</em> with 'num_sets = 512' everywhere in the text where these 2 tag strings are found. So the original text would look like the desired one.</p> <p>Original:</p> <pre><code> repl = ReplacementPolicy(rrpv_bits = 2, ins = 2, num_sets = l2_cache.size.getValue() / options.l2_assoc / options.cacheline_size, assoc = options.l2_assoc) </code></pre> <p>Desired:</p> <pre><code> repl = ReplacementPolicy(num_sets = 512, assoc = options.l2_assoc) </code></pre> <p>If a perl one-liner can't do that then is there anything else (Linux, one-liner) that can?</p> <p>Thank you</p>
<p>If they always exist together, a perl one-liner:</p> <pre><code>perl -0777 -pe 's/rrpv_bits = 2.*?options\.cacheline_size/num_sets = 512/gs' file.txt &gt; newfile.txt </code></pre> <p>However, this approach is likely too greedy. What would happen if the first boundary matches but not the second in a ReplacePolicy call? Then the regex will just eat up all the lines until it finds a second ReplacePolicy that does contain the end condition.</p> <p>Therefore, to protect against this, we can limit the characters between boundary conditions to only allow balanced parenthesis. This would lock the matching to within the parameters of a ReplacePolicy:</p> <pre><code>perl -0777 -pe 's/rrpv_bits = 2((?:[^()]*|\((?1)\))*)options\.cacheline_size/num_sets = 512/gs;' file.txt &gt; newfile.txt </code></pre> <h3>Explanation:</h3> <p><strong>Switches</strong>: </p> <ul> <li><code>-0777</code>: Slurp the entire file</li> <li><code>-p</code>: Creates a <code>while(&lt;&gt;){...; print}</code> loop for each &ldquo;line&rdquo; in your input file. </li> <li><code>-e</code>: Tells <code>perl</code> to execute the code on command line. </li> </ul>