Perl command line - assume while loop around
<p>Can anyone explain the difference in output of the two perl (using cygwin) commands below:</p> <pre><code>$ echo abc | perl -n -e 'if ($_ =~ /a/) {print 1;}' </code></pre> <p>prints :</p> <p><code>1</code></p> <pre><code>$ echo abc | perl -e 'if ($_ =~ /a/) {print 1;}' </code></pre> <p>The first prints '1' while second one outputs blank?</p> <p>Thanks</p>
<p><code>-n</code> switch adds <code>while</code> loop around your code, so in your case <code>$_</code> is populated from standard input. In second example there is no <code>while</code> loop thus <code>$_</code> is leaved undefined.</p> <p>Using Deparse you can ask perl to show how your code is parsed,</p> <pre><code>perl -MO=Deparse -n -e 'if ($_ =~ /a/) {print 1;}' LINE: while (defined($_ = &lt;ARGV&gt;)) { if ($_ =~ /a/) { print 1; } } </code></pre> <hr> <pre><code>perl -MO=Deparse -e 'if ($_ =~ /a/) {print 1;}' if ($_ =~ /a/) { print 1; } </code></pre>