Perl regular expressions matching Unicode
<p>I'm trying to write a function in Perl that will read a string, locate a specific Mac unicode character, and will change that character to its corresponding Windows unicode character. I'm a new to Perl, but I understand how to write code for basic replacement regular expressions. I'm just not sure how to match specific characters that are different across platforms. Any insight would be helpful. Thanks</p>
<p>The code you want will look like the following:</p> <pre><code>open(my $fh_in, '&lt;:encoding(...)', $qfn_in ) or die $!; open(my $fh_out, '&gt;:encoding(...)', $qfn_out) or die $!; while (&lt;$fh_in&gt;) { s/.../.../g; print($fh_out $_); } </code></pre> <p>You haven't specified the encoding of the input file, the encoding you want for the output file, which character you want to replace and which character you want to replace it with, so you'll need to fill in those blanks.</p> <hr> <p>Given the encoding of the input file, you can determine the character you want to replace using the following:</p> <pre><code>use charnames ':full'; open(my $fh_in, '&lt;:encoding(...)', $qfn_in) or die $!; while (&lt;$fh_in&gt;) { for (map ord, split //) { printf("U+%04X %s\n", $_, charnames::viacode($_)); } print("\n"); } </code></pre> <p>You might be trying to replace</p> <pre><code>U+2019 RIGHT SINGLE QUOTATION MARK (â€™) </code></pre> <p>with</p> <pre><code>U+0027 APOSTROPHE (') </code></pre> <p>which you can do with</p> <pre><code>s/\x{2019}/\x{0027}/g; </code></pre>