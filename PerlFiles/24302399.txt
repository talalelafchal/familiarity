Perl subroutine - return
<p>The following code is to make a hash dynamically. If I don't give a <code>return</code> statement in the <code>else</code> part of the subroutine, I get </p> <pre><code>$VAR1 = { 'fruit' =&gt; { 'apple' =&gt; 'skin' } }; </code></pre> <p>but If give the <code>return</code> statement I get </p> <pre><code>$VAR1 = { 'fruit' =&gt; { 'apple' =&gt; { 'red' =&gt; 'skin'} } }; </code></pre> <p>which is what I want.<br> What makes this difference. Can someone please educate me. </p> <pre><code>sub construct_hash{ my ($hash, $value, $head, @tail ) = @_; if(@tail){ $hash = { $head =&gt; construct_hash(\%{$hash}, $value, shift @tail, @tail)} ; }else{ $hash-&gt;{$head} = $value; return $hash; } } my %h; my @keys = qw (fruit apple red); my $value = 'skin'; print Dumper construct_hash(\%h, $value, shift @keys, @keys); </code></pre>
<p>If you don't specify what to return from a subroutine, Perl returns the value of the last expression evaluated (see <a href="http://p3rl.org/return" rel="nofollow">return</a>). In this case, it means the subroutine returns the <code>$hash-&gt;{$head}</code> in the <code>else</code> branch.</p>