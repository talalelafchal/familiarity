Perl regex not-match-strings operation
<p><strong>What I have so far:</strong></p> <p>Here is the regex I created</p> <pre><code> if ( /PRINT\((\s*\n*\t*)[A-Z]+_[A-Z]*(_*)(DBG|NOT|UNC)/ ) { next; } </code></pre> <p>Currently it executes <code>next</code>when it detects </p> <pre><code>PRINT(ABC_XYZ_DBG... PRINT(ABC_XYZ_NOT... PRINT(ABC_UNC... </code></pre> <p>and it doesn't execute <code>next</code> when it is</p> <pre><code>PRINT(ABC_XYZ_ERR... PRINT(ABC_XYZ_WRN... PRINT(ABC_ERR... </code></pre> <p><strong>I want to change it to:</strong></p> <p>I want to modify it so it will execute <code>next</code> for everything other than <code>_ERR</code> or <code>_WRN</code></p> <pre><code>PRINT(ABC_XYZ_ERR... PRINT(ABC_XYZ_WRN... PRINT(ABC_ERR... </code></pre> <p>I tried the following but it didn't match anything</p> <pre><code> my $ERR = qr/ERR/; my $WRN = qr/WRN/; if ( /PRINT\((\s*\n*\t*)[A-Z]+_[A-Z]*(_*)(?!$ERR|$WRN)/ ) { next; } </code></pre> <p>I am making some mistake in the not-match <code>(?!$ERR)</code> operator but I don't know how to correct it. I appreciate your inputs in advance.</p>
<pre><code>next unless ( /PRINT\((\s*\n*\t*)[A-Z]+_[A-Z]*(_*)(ERR|WRN)/ ); </code></pre>
<p>You can match <code>(ERR|WRN)</code> instead of <code>(DBG|NOT|UNC)</code> and then negate it with <code>!</code>.</p> <p>You can use <code>\s*</code> instead of <code>\s*\t*\n*</code> because <code>\s</code> matches any whitespace.</p> <pre><code>if ( ! /PRINT\((\s*)[A-Z]+_[A-Z]*(_*)(ERR|WRN)/ ) { next; } </code></pre> <p><strong>Input:</strong></p> <pre><code>PRINT(ABC_XYZ_DBG... PRINT(ABC_XYZ_NOT... PRINT(ABC_UNC... PRINT(ABC_XYZ_ERR... PRINT(ABC_XYZ_WRN... PRINT(ABC_ERR... </code></pre> <p><strong>One-liner:</strong></p> <pre><code>perl -nle 'if ( ! /PRINT\((\s*)[A-Z]+_[A-Z]*(_*)(ERR|WRN)/ ) { next; } print' input.txt </code></pre> <p><strong>Output:</strong></p> <pre><code>PRINT(ABC_XYZ_ERR... PRINT(ABC_XYZ_WRN... PRINT(ABC_ERR... </code></pre>