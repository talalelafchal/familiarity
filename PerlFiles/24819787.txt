How to remove a JSON object in perl
<p>I am working on a JSON config file (logstash-forwarder) in which I want to add or remove data with a perl script (It is a script used to deploy or undeploy jboss webapps and it could then be used to update logstash forwarder configuration).</p> <p>I have no problem with adding and modifying the configuration file but I can't find the right way to remove an object.</p> <p>Here is an example of the config.json file:</p> <pre><code>{ "network" : { "timeout" : 15, "ssl ca" : "/etc/logstash-forwarder/cert/logstash-forwarder.crt", "servers" : [ "server1@domain:5043", "server2@domain:5043" ] }, "files" : [ { "fields" : { "environment" : "TEST1,TEST23", "application" : "application1", "type" : "jboss" }, "paths" : [ "/path/to/application1/logs/*.log" ] }, { "fields" : { "environment" : "TEST2", "application" : "application2", "type" : "jboss" }, "paths" : [ "/path/to/application2/logs/*.log" ] } ] } </code></pre> <p>And the part of the code I am using to delete an object (when the webapp is undeployed):</p> <pre><code>removeLogStashConf { use JSON qw(encode_json decode_json); my ( $application ) = @_; my $app_path = "/path/to/$application/*.log"; local $/; open( my $fh, "&lt;", "$Param::logstash_conf_file" ); my $json = &lt;$fh&gt;; close $fh; my $data = JSON::decode_json($json); }; my @files = @{ $data-&gt;{'files'} }; my $file_level = undef; foreach my $f (@files) { my @paths = @{ $f-&gt;{"paths"} }; foreach my $path (@paths) { if ( $path eq $app_path ) { $file_level = $f; } } } for (keys %$file_level) { delete $file_level-&gt;{$_}; } my $encoded = JSON-&gt;new-&gt;utf8-&gt;pretty-&gt;encode($data); open( $fh, "&gt;", "$Param::logstash_conf_file" ); print $fh $encoded; } </code></pre> <p>When I try to remove, say, application2, the result I get in config.json file is:</p> <pre><code>{ "network" : { "timeout" : 15, "ssl ca" : "/etc/logstash-forwarder/cert/logstash-forwarder.crt", "servers" : [ "server1@domain:5043", "server2@domain:5043" ] }, "files" : [ { "fields" : { "environment" : "TEST1,TEST23", "application" : "application1", "type" : "jboss" }, "paths" : [ "/path/to/application1/logs/*.log" ] }, {} ] } </code></pre> <p>How can I get rid of that remaining <strong>empy curly brackets</strong> ("<strong>{}</strong>" or "<strong>{},</strong>" if I remove an application that is not the last of the array) that prevent me to do further parsing and that let me with an untidy config.json file.</p> <p>I could surely find a solution with a sed but is there something cleaner?</p> <p>Thank you in advance for your help.</p>
<p>Emptying hash is not enough to delete it from array.</p> <p>You can use <code>splice</code> or just copy all needed records to a new array:</p> <pre><code>my $data = JSON::decode_json($json); my @files = @{ $data-&gt;{'files'} }; my @new_files; foreach my $f (@files) { my @paths = @{ $f-&gt;{paths} }; foreach my $path (@paths) { unless ( $path eq $app_path ) { push @new_files, $f; } } } $data-&gt;{files} = \@new_files; </code></pre>