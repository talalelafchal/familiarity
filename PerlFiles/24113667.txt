Perl: how to make date as argument to perl script
<p>Manually I run script from terminal like this:</p> <pre><code># perl renew.pl 2014-06-09 data.xml </code></pre> <p>where 2014-06-09 is today's date and data.xml is file which script updates.</p> <p>I'd like to run this script with cron, so I need inserting current date automatically. I've tried something like </p> <pre><code># perl renew.pl date +"%Y/%m/%d" data.xml &lt;br&gt; or &lt;br&gt; # perl renew.pl 'date +"%Y/%m/%d"' data.xml&lt;br&gt; or &lt;br&gt; # TODAY=`date '+%Y%m%d'`; perl renew.pl TODAY data.xml </code></pre> <p>But always got response like:</p> <p><em>Use of uninitialized value in numeric ge (>=) at /usr/lib/perl5/site_perl/5.8.8/Date/Calc/PP.pm line 1547, line 523. Date::Calc::PP::Add_Delta_Days(): Date::Calc::Add_Delta_Days(): not a valid date at renew.pl</em></p> <p>Are there any other variants to insert date as arguments? </p>
<p>Could try either of the following in <code>bash</code>:</p> <pre><code>export TODAY=$(date +%Y%m%d); perl renew.pl $TODAY data.xml </code></pre> <p>Or without the intermediate variable:</p> <pre><code>perl renew.pl $(date +%Y%m%d) data.xml </code></pre> <p>You can also just edit your <code>renew.pl</code> to default to today's date when only called with 1 parameter:</p> <pre><code>use strict; use warnings; use Time::Piece; unshift @ARGV, localtime-&gt;strftime("%Y-%m-%d") if @ARGV == 1; </code></pre> <p>And then:</p> <pre><code>perl renew.pl data.xml </code></pre>
<p>I'm not sure what shell crond uses. Maybe it's your login shell? If it uses <code>sh</code> or <code>bash</code> like it does for me, you want</p> <pre><code>perl renew.pl "`date +"%Y/%m/%d"`" data.xml </code></pre> <p>or the more readable</p> <pre><code>perl renew.pl "$( date +"%Y/%m/%d" )" data.xml </code></pre> <p><code>`...`</code> aka <code>$( ... )</code> execute the command therein, and interpolates its output. The surrounding double quotes escapes spaces and whatnot so that the result is passed as a single argument. (They're not needed here. I use them out of habit. Better safe than sorry.)</p> <hr> <p>Let's look at what you tried:</p> <ul> <li><p><code>perl renew.pl date +"%Y/%m/%d" data.xml</code> passes <code>date</code>, <code>+%Y/%m/%d</code> and <code>data.xml</code> as arguments.</p> <p>Missing the backticks mentioned earlier.</p></li> <li><p><code>perl renew.pl 'date +"%Y/%m/%d"' data.xml</code> passes <code>date +"%Y/%m/%d"</code> and <code>data.xml</code> as aguments.</p> <p>Missing the backticks mentioned earlier.</p></li> <li><p><code>TODAY=<code>date '+%Y%m%d'</code>; perl renew.pl TODAY data.xml</code> passes <code>TODAY</code> and <code>data.xml</code> as arguments.</p> <p>You finally used backticks, but you didn't actually use the variable in which you stored the result. You should have used <code>"$TODAY"</code> instead of <code>TODAY</code>.</p></li> </ul>