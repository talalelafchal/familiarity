split string at every character
<p>I want to split every character in a string and output it as comma or tab separated characters: I need to use <code>file_in</code> and <code>file_out</code> since I have very many lines.</p> <p>input</p> <pre><code>TTTGGC TTTG TGCAATGG .... .... </code></pre> <p>output</p> <pre><code>T,T,T,G,G,C T,T,T,G T,G,C,A,A,T,G,G </code></pre> <p>I have used this, but it prints every character vertically:</p> <pre><code> /usr/bin/perl use strict; use warnings; my $data = 'Becky Alcorn'; my @values = split(undef,$data); foreach my $val (@values) { print "$val\n"; } exit 0; </code></pre>
<p>In R, you can use <code>strsplit</code> and <code>paste</code>:</p> <pre><code>Strings &lt;- c("TTTGGC","TTTG","TGCAATGG") vapply(strsplit(Strings, ""), function(x) paste(x, collapse=","), character(1L)) # [1] "T,T,T,G,G,C" "T,T,T,G" "T,G,C,A,A,T,G,G" </code></pre> <p>You can write the output using <code>writeLines</code>, specifying <code>sep = "\n"</code> if required.</p>
<p>Or with the <code>stringr</code> package:</p> <pre><code>txt &lt;- c("TTTGGC", "TTTG", "TGCAATGG") unlist(str_split(string=txt, pattern= "")) [1] "" "T" "T" "T" "G" "G" "C" "" "T" "T" "T" "G" "" "T" "G" "C" "A" "A" "T" "G" "G" </code></pre>
<p>awk one-liner:</p> <pre><code>awk -v FS='' -v OFS="," '$1=$1' file </code></pre>
<pre><code>open my $in, '&lt;','in.txt'; open my $out, '&gt;', 'out.txt'; while(&lt;$in&gt;){ chomp; my @split = split(//); print $out join ",", @split; print $out "\n"; } </code></pre>
<p>Your code uses a loop to print the values of <code>@values</code> one per line, so the computer does what you told it to. Try:</p> <pre><code>print join ",", @values; </code></pre> <p>or even condense your code all the way down to:</p> <pre><code>print join ",", split //, $data; </code></pre>
<p>Using perl one-liner,</p> <pre><code>perl -F -lane 'print join ",", @F' file </code></pre> <p>output</p> <pre><code>T,T,T,G,G,C T,T,T,G T,G,C,A,A,T,G,G </code></pre>
<p>Here's a quick and easy method that uses base R functions. The documentation for <code>paste</code> actually notes that <code>paste</code> can be used as the "the opposite" of <code>strsplit</code></p> <p><code>paste0</code> with <code>collapse = ","</code> is nice here</p> <pre><code>&gt; txt &lt;- c("TTTGGC", "TTTG", "TGCAATGG") ## your data &gt; sapply(strsplit(txt, ""), paste0, collapse = ",") # [1] "T,T,T,G,G,C" "T,T,T,G" "T,G,C,A,A,T,G,G" </code></pre>