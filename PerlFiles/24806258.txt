How to convert Perl bigrat to bignum?
<p>I have a huge rational number, which I need to convert to a decimal number. How can I do this?</p> <p>The rational was created like this:</p> <pre><code>my $t; { use bigrat; $t = (3 ** 1000) / (2 ** 1000); } </code></pre> <p>I need to get the result $t in decimal form (integer part -dot- a few decimal digits)</p> <p>How can I do that conversion?</p>
<p>That's the same as</p> <pre><code>use Math::BigRat qw( ); my $t = (Math::BigRat-&gt;new(3) ** Math::BigRat-&gt;new(1000)) / (Math::BigRat-&gt;new(2) ** Math::BigRat-&gt;new(1000)); </code></pre> <p><a href="http://search.cpan.org/perldoc?Math::BigRat" rel="nofollow">Math::BigRat</a> provides</p> <ul> <li><p><code>-&gt;as_float()</code> to get a Math::BigFloat</p></li> <li><p><code>-&gt;numify()</code> to get a regular floating point number scalar.</p></li> </ul>
<p><code>bigrat</code> tries to do everything transparently by overloading operators so that you can work without being aware of the underlying objects being used. But it can't always get everything right, and you need to use <code>Math::BigRat</code> directly to get the necessary control over the format of the intermediate numbers.</p> <p>This code does what you ask. The parameter to <code>as_float</code> says how many digits you want in the output. Since 3<sup>1000</sup> &#xf7; 2<sup>1000</sup> is greater than 1e176 you need something more than 176 to show the decimal point at all. A value of 200 shows the first 23 decimal places.</p> <pre><code>use strict; use warnings; use 5.010; use Math::BigRat; my $t = do { my $num = Math::BigRat-&gt;new(3) ** 1000; my $den = Math::BigRat-&gt;new(2) ** 1000; $num / $den; }; say $t-&gt;as_float(200); </code></pre> <p><strong>output</strong></p> <pre><code>123384059690617347922743909948678005742186900514842808542522975184329422623652841193932245134021231941529455308114511924428000273557831297406949841351167568024301164105271903064.98735542425778400198655 </code></pre>