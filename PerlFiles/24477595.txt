Perl Catalyst Catalyst::Controller::REST with HTML
<p>Trying to use REST services with Catalyst. </p> <p>I can get a response sent back with JSON, however, how do I do so if I wanted an HTML template to be rendered. I have:</p> <pre><code> package MM::Controller::User::Test; use Moose; use namespace::autoclean; BEGIN { extends 'Catalyst::Controller::REST' } sub thing : Local : ActionClass('REST') { } sub thing_GET { my ( $self, $c ) = @_; # Return a 200 OK, with the data in entity # serialized in the body $c-&gt;{stash}-&gt;{template} = "a.tt"; $self-&gt;status_ok( $c, entity =&gt; { some =&gt; 'data', foo =&gt; 'is real bar-y', }, ); } 1; </code></pre> <p>And my jQuery:</p> <pre><code> $(document).ready(function() { $.ajax({ type : "GET", url : "/user/test/thing", data : {}, dataType: "html", success : function(data, textStatus) { console.log(data); } }); }); </code></pre> <p>It works if dataType is "json" perfectly (Object {foo: "is real bar-y", some: "data"} ), however, how do I get Catalyst to return some HTML so jQuery can place it. I obtain a "415 (Unsupported Media Type) " message. Am I just not using the REST properly?</p>
<p>If all you want to return is some HTML ready to be injected into your page, you may be over-complicating it by attempting to use REST as well.</p> <p>I would try configuring this as a regular action <code>BEGIN { extends 'Catalyst::Controller' }</code> and see what you get by just handing off to the template and removing the <code>$self-&gt;status_ok()</code> call.</p> <p>That is certainly how I have built Catalyst AJAX calls that return template output.</p>