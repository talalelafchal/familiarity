Read config hash-like data into perl hash
<p>I have a config file <code>config.txt</code> like</p> <pre><code>{sim}{time}{end}=63.1152e6; {sim}{output}{times}=[2.592e6,31.5576e6,63.1152e6]; {sim}{fluid}{comps}=[ ['H2O','H_2O'], ['CO2','CO_2'],['NACL','NaCl'] ]; </code></pre> <p>I would like to read this into a perl hash,</p> <pre><code>my %h=read_config('config.txt'); </code></pre> <p>I have checked out module <a href="http://search.cpan.org/~minimal/Config-Hash-0.920/lib/Config/Hash.pm" rel="nofollow">Config::Hash</a> , but it does not offer the same input file format.</p>
<p>Can roll your own. Uses <a href="https://metacpan.org/pod/Data%3a%3aDiver" rel="nofollow"><code>Data::Diver</code></a> for traversing the hash, but could do that manually as well.</p> <pre><code>use strict; use warnings; use Data::Diver qw(DiveVal); my %hash; while (&lt;DATA&gt;) { chomp; my ($key, $val) = split /\s*=\s*/, $_, 2; my @keys = $key =~ m/[^{}]+/g; my $value = eval $val; die "Error in line $., '$val': $@" if $@; DiveVal(\%hash, @keys) = $value; } use Data::Dump; dd \%hash; __DATA__ {sim}{time}{end}=63.1152e6; {sim}{output}{times}=[2.592e6,31.5576e6,63.1152e6]; {sim}{fluid}{comps}=[ ['H2O','H_2O'], ['CO2','CO_2'],['NACL','NaCl'] ]; </code></pre> <p>Outputs:</p> <pre><code>{ sim =&gt; { fluid =&gt; { comps =&gt; [["H2O", "H_2O"], ["CO2", "CO_2"], ["NACL", "NaCl"]] }, output =&gt; { times =&gt; [2592000, 31557600, 63115200] }, time =&gt; { end =&gt; 63115200 }, }, } </code></pre> <p>Would be better if you could come up with a way to not utilize <a href="http://perldoc.perl.org/functions/eval.html" rel="nofollow"><code>eval</code></a>, but not knowing your data, I can't accurately suggest an alternative.</p> <h3>Better Alternative, use a JSON or YAML</h3> <p>If you're picking the data format yourself, I'd advise using <a href="https://metacpan.org/pod/JSON" rel="nofollow"><code>JSON</code></a> or <a href="https://metacpan.org/pod/distribution/YAML/lib/YAML.pod" rel="nofollow"><code>YAML</code></a> for saving and loading your config data.</p> <pre><code>use strict; use warnings; use JSON; my %config = ( sim =&gt; { fluid =&gt; { comps =&gt; [["H2O", "H_2O"], ["CO2", "CO_2"], ["NACL", "NaCl"]] }, output =&gt; { times =&gt; [2592000, 31557600, 63115200] }, time =&gt; { end =&gt; 63115200 }, }, ); my $string = encode_json \%config; ## Save the string to a file, and then load below: my $loaded_config = decode_json $string; use Data::Dump; dd $loaded_config; </code></pre>