how to split 2 hashes into 3 hashes?
<p>How can I split 2 hashes, that contain some common keys, into 3 hashes, when:</p> <pre><code>%input_hash_1 = ( key1 =&gt; 1, key2 =&gt; 2, key3 =&gt; 3, , key4 =&gt; 4 ); %input_hash_2 = ( key3 =&gt; 3, key4 =&gt; 4, key5 =&gt; 5, , key6 =&gt; 6 ); </code></pre> <p>and the output required is:</p> <pre><code>%output_hash_1 = ( key1 =&gt; 1, key2 =&gt; 2 ); # keys in input_hash_1 &amp;&amp; not in input_hash_2 %output_hash_2 = ( key3 =&gt; 3, key4 =&gt; 4 ); # keys in input_hash_1 &amp;&amp; in input_hash_2 %output_hash_3 = ( key5 =&gt; 5, key6 =&gt; 6 ); # keys in input_hash_2 &amp;&amp; not in input_hash_1 </code></pre> <p>in Perl.</p>
<p>Set operations are easy with hashes.</p> <pre><code>#!/usr/bin/perl use warnings; use strict; use Data::Dumper; my %hash1 = ( key1 =&gt; 1, key2 =&gt; 2, key3 =&gt; 3, key4 =&gt; 4 ); my %hash2 = ( key3 =&gt; 3, key4 =&gt; 4, key5 =&gt; 5, key6 =&gt; 6 ); my %both = %hash1; exists $hash2{$_} or delete $both{$_} for keys %hash1; print Dumper \%both; my %only1 = %hash1; delete @only1{ keys %hash2 }; print Dumper \%only1; my %only2 = %hash2; delete @only2{ keys %hash1 }; print Dumper \%only2; </code></pre> <p>See also <a href="http://p3rl.org/Set%3a%3aLight" rel="nofollow">Set::Light</a>.</p>
<pre><code>my %o_hash_1 = map { !exists $i_hash_2{$_} ? ($_=&gt;$i_hash_1{$_}) : () } keys %i_hash_1; my %o_hash_2 = map { exists $i_hash_2{$_} ? ($_=&gt;$i_hash_1{$_}) : () } keys %i_hash_1; my %o_hash_3 = map { !exists $i_hash_1{$_} ? ($_=&gt;$i_hash_2{$_}) : () } keys %i_hash_2; </code></pre> <p>or</p> <pre><code>my %o_hash_1 = map { $_=&gt;$i_hash_1{$_} } grep !exists $i_hash_2{$_}, keys %i_hash_1; my %o_hash_2 = map { $_=&gt;$i_hash_1{$_} } grep exists $i_hash_2{$_}, keys %i_hash_1; my %o_hash_3 = map { $_=&gt;$i_hash_2{$_} } grep !exists $i_hash_1{$_}, keys %i_hash_2; </code></pre> <p>or using <code>pairmap</code> from <code>List::Util</code> (since v1.29)</p> <pre><code>use List::Util 'pairmap'; my %o_hash_1 = pairmap { !exists $i_hash_2{$a} ? ($a=&gt;$b) : () } %i_hash_1; </code></pre> <p>or using perl <code>5.20+</code> and <a href="http://search.cpan.org/~rjbs/perl-5.20.0/pod/perldata.pod#Key/Value_Hash_Slices" rel="nofollow"><code>key/value</code></a> hash slice</p> <pre><code>my %o_hash_1 = %i_hash_1{ grep !exists $i_hash_2{$_}, keys %i_hash_1}; </code></pre>