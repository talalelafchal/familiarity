replace {x} with param in string
<p>I want to replace {x} where x is a number from 1-10 with a string from an array. The array is populated by splitting a string with whitespace.</p> <p>I have put together some code but the regex is probably wrong.</p> <pre><code>my @params = split(' ', "Paramtest: {0} {1} {2}"); my $count = @params; for (my $i = 0; $i &lt;= $count; $i++) { my $param = @params-&gt;[$i]; $cmd_data =~ s/{"$i"}/"$param"/; if(!$cmd_data) { $server-&gt;command(sprintf("msg $target %s incorrect syntax for %s.", $nick, "!params p1 p2 p3")); return; } } $server-&gt;command(sprintf("msg $target %s.", $cmd_data)); </code></pre> <h3>Update</h3> <p>I've tried using the below code as a modified version of Miller's (the first answer)</p> <pre><code>my @params = split(' ', "!fruit oranges apples"); my $cmd_data = "Fruits: {0} {1}"; $cmd_data =~ s{\{(\d+)\}}{ $params[$1] // die "Not found $1" #line 160 }eg; $server-&gt;command(sprintf("msg $target %s.", $cmd_data)); </code></pre> <p>Output</p> <pre><code>Not found 1 at myscript.pl line 160. </code></pre>
<p>Perhaps a more generalized search and replace will serve you better:</p> <pre><code>use strict; use warnings; my @params = qw(zero one two three four five six seven eight); my $string = 'My String: {0} {1} {2}'; $string =~ s{\{(\d+)\}}{ $params[$1] // die "Not found $1" }eg; print $string; </code></pre> <p>Outputs:</p> <pre class="lang-none prettyprint-override"><code>My String: zero one two </code></pre>