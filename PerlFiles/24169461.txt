Can you compare a string to a &quot;template&quot; string using grep?
<pre><code>my @array = ( 'There were \d* errors that occurred', 'Your system exploded because \.*', ); my $error = 'There were 22 errors that occurred'; if (grep(/$error/, @array)) { print 'That error is ok, continue...'; } else { die; } </code></pre> <p>Is there any way in perl to compare a full string to a string containing regex? Like in this example I'd want both $error = 'There were 22 errors that occurred' and $error = 'There were 12341235 errors that occurred' to be compared to a kind of "template" string and have a boolean returned if it matches. Using grep is probably not possible, I guess.</p> <p>Maybe something like this that actually works:</p> <pre><code>my @s = ('there were \d* errors'); print _error_checker(@s, 'there were 10 errors'); sub _error_checker { my (@acceptable_errors, $text) = @_; foreach my $error (@acceptable_errors) { if ($text =~ /$error/) { return 1; } } return 0; } </code></pre>
<p>You were close, you just need to invert your testing in the grep.</p> <pre><code>my @ok_errors = ( 'There were \d* errors that occurred', 'Your system exploded because \.*', ); my $errmsg = 'There were 22 errors that occurred'; if (grep {$errmsg =~ /$_/} @ok_errors) { print 'That error is ok, continue...'; } else { die; } </code></pre> <p>Additionally, you can cache the regular expressions using <a href="http://perldoc.perl.org/functions/qr.html"><code>qr{}</code></a></p> <pre><code>my @ok_errors = ( qr{There were \d* errors that occurred}, qr{Your system exploded because \.*}, ); my $errmsg = 'There were 22 errors that occurred'; if (grep {$errmsg =~ $_} @ok_errors) { print 'That error is ok, continue...'; } else { die; } </code></pre>