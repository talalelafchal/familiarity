perl one liner + How to give standard output on perl line liner
<p>I have the following perl line liner line </p> <pre><code> echo $line | perl -ne 'while(.....){print "$_";}' &gt;&gt; $FILE </code></pre> <p>is it possible to give $? on the output of the perl line </p> <p>so</p> <pre><code> $? = 0 in case $_ print some value $? = 1 in case $_ is empty ( no value ) </code></pre> <p>example:</p> <pre><code> echo $line | perl -ne 'while(.....){print "$_";}' &gt;&gt; $FILE if [[ $? -eq 0 ]] then echo " new line in file " else echo " no new line in file" fi </code></pre> <p>the full syntax</p> <pre><code> /usr/local/bin/perl -ne '$exit = 1;while($_=~m/(?:^|\G:\K)(?:(?!.*old)[^:]+|[^:]*?(?:[a-z]old|\dold[a-z\d])[^:]*)/ig){print "$_";}' </code></pre>
<pre><code>echo "$line" | perl -ne 'BEGIN {$exit = 1;} if(/(?:^|\G:\K)(?:(?!.*old)[^:]+|[^:]*?(?:[a-z]old|\dold[a-z\d])[^:]*)/i) {$exit=0; print "$_"; } END {exit($exit);}' &gt;&gt; "$FILE" </code></pre> <p>The value passed to <code>exit()</code> will be in <code>$?</code> in the shell.</p> <p>Since you're using <code>-n</code> to create an input loop automatically, you need to put the code to initialize and return <code>$exit</code> in <code>BEGIN</code> and <code>END</code> blocks. You also shouldn't put <code>while</code> in your code, since that's part of the automatic loop.</p>