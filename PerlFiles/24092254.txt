Can I use Xcode as an IDE for Perl scripts?
<p>I am using OS X 10.9 (Mavericks) and need to work on a Perl project. I enjoy using TextMate, Atom, and BBEdit, but would like to try using Xcode instead, as it has good integration with git, a clean look, and I am already intimately familiar with the UI and syntax highlighting colour scheme.</p> <p>Is it possible to use Xcode as an IDE to develop and run Perl scripts, in a way that puts it on par, or ahead of, existing text editors?</p> <hr> <h3>Update</h3> <p>I used Xcode 5 as an IDE for Perl for more than a month, and found it an excellent alternative to regular text editors like Atom and TextMate. However, like pure text editors, Xcode lacks support for debugging in Perl. I have since discovered <a href="http://komodoide.com" rel="nofollow">Komodo IDE</a>, a really nice IDE for Perl (and similar languages) that supports graphical Perl debugging, plus remote Perl debugging. I have since switched from using Xcode for Perl development to using Komodo IDE.</p>
<p>After some experimentation, it seems that Xcode makes for a fairly decent environment for developing Perl. Here is a screenshot of Xcode showing some Perl, project navigator, Git integration, and command-line output from a Perl script, as run by Xcode.</p> <p><img src="https://i.stack.imgur.com/cUlwt.png" alt="enter image description here"></p> <p>Xcode 5's built-in syntax highlighting works fine with Perl (<code>.pl</code> and <code>.pm</code>) files, right out of the box. But to use Xcode to write Perl more efficiently, you'll want to set up a new Xcode project:</p> <ol> <li><p>Create a new Xcode workspace (<strong>File</strong> > <strong>New</strong> > <strong>Workspace</strong>) and select the folder you want to use for the Perl project.</p></li> <li><p>Enable the Xcode navigator, so you can see the files in your project (<strong>View</strong> > <strong>Navigators</strong> > <strong>Show Navigators</strong>). Notice that Xcode does not show you a list of files in the workspace folder by default. If you're reading this, you're probably already an Xcode user, already knew that. </p></li> <li><p>Manually add any files, or folders (<em>groups</em>, in Xcode parlance), that you want to see in the project (right-click on the Project Navigator pane and select <strong>Add files to "Project Name</strong>). Create groups to mirror your folder structure and add any files in subfolders to the groups. This can be a bit of work, depending on the size of your Perl project, but once you're set up it should not change much.</p></li> <li><p>Click on your files in the Project Navigator to view the code. If you are using a Git or Subversion, Xcode will generate diffs as normal in the Xcode version editor.</p></li> <li><p>To get your Perl script running when you hit <code>Cmd-R</code>:</p> <ul> <li><p>Create a new scheme (<strong>Product</strong> > <strong>Scheme</strong> > <strong>New Scheme</strong>), configure <strong>Target</strong> to <em>None</em> and assign a name like <em>Run Perl</em>.</p></li> <li><p>After creating the scheme, hit <strong>Edit Scheme</strong>.</p></li> <li><p>In the <strong>Run perl</strong> scheme, set the <strong>Executable</strong> to <code>/usr/bin/perl</code> (select <strong>Other</strong> then press <code>Shift</code>-<code>Cmd</code>-<code>G</code>, enter <code>/usr/bin/perl</code>, and press <strong>Choose</strong>).</p></li> <li><p>Go to the <strong>Arguments</strong> tab and ensure that your main script is the first argument. Add more arguments and environment variables as necessary.</p></li> <li><p>Go to the <strong>Options</strong> tab and set <strong>Use custom working directory</strong> to your project folder. Deselect XPC services and any other options related to iOS or OS X development.</p></li> </ul></li> </ol> <p>Press <strong>OK</strong> and when you press <code>Cmd-R</code> in Xcode, Xcode will call Perl, run your script, and show you the output.</p> <p>To get Perl snippets and templates in Xcode, see <a href="http://stackoverflow.com/q/15491826/705157">How to create project templates in Xcode 4</a>.</p> <h2>Extra tips:</h2> <ul> <li>If you are working with files that have extensions for an language that Xcode does not recognise, such as .sql files, you may be able to use the generic syntax highlighting. Go to <strong>Editor</strong> > <strong>Syntax Highlighting</strong> > <strong>Generic</strong>. </li> </ul>