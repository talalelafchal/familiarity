Perl DBD::CSV No such file or directory on Windows
<p>I must migrate my perlscripts to a new machine but DBD::CSV would not work as I expect.</p> <p>I got ActiveState perl 5, version 16, subversion 3 (v5.16.3) built for MSWin32-x86-multi-thread</p> <p>DBD-CSV is Version 0.41 and everyting I try results in:</p> <pre><code>################################################################# DBD::CSV::db do failed: Execution ERROR: -d D:\TEST/D:\TEST: No such file or directory at D:/Programme/Perl/site/lib/DBI/DBD/SqlEngine.pm line 1503. called from D:\TEST\CSVTest.pl at 7. ################################################################# </code></pre> <p>even at the simplest create TestTable</p> <pre><code>################################################################# use DBI; $dbh = DBI-&gt;connect ("dbi:CSV:"); my $table ="TestTable"; $dbh-&gt;do ("CREATE TABLE $table (id INTEGER, name CHAR (64))"); ################################################################# </code></pre> <p>Any suggestion? </p> <h3>Update</h3> <p>Not the real answer, but too much for an comment the uncommented $DBDIR is the way i had excpeted to work. All the commented versions of $DBDIR I tried, but all created an foo.csv in same directory as the script (C:\Temp). I want to use some other Directory as the Script is located any sugestion?</p> <pre><code>use DBI; my $DBDIR='C:\Temp\CSV-DB'; # my $DBDIR="C:\\Temp\\CSV-DB"; # my $DBDIR='C:\Temp\CSV-DB\\'; # my $DBDIR='..\CSV-DB'; # my $DBDIR="..\\CSV-DB"; # my $DBDIR='CSV-DB'; # my $DBDIR='\CSV-DB'; # my $DBDIR='\\CSV-DB'; # my $DBDIR='.\CSV-DB'; # my $DBDIR='/CSV-DB'; # my $DBDIR='./CSV-DB'; $dbh = DBI-&gt;connect ("dbi:CSV:", undef, undef, { f_dir =&gt; [$DBDIR], #f_dir_search =&gt; [$DBDIR], f_ext =&gt; ".csv/r", RaiseError =&gt; 1, }) or die "Cannot connect: $DBI::errstr"; # Simple statements $dbh-&gt;do ("CREATE TABLE foo (id INTEGER, name CHAR (10))"); ############################################################## </code></pre>
<p>I had this problem on my windows PC.</p> <p>I found that it occurred when DBI was not the first module to be used. By putting "use DBI;" as the first module the problem has disappeared. I haven't tried to determine exactly which module caused the problem. I'm using CGI, Archive::Zip, POSIX, etc..</p>