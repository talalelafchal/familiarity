Loop through file with similar names
<p>How can I loop through files with similar names? This script works just for the first line of the first file and I don't understand the reason. Is there a simpler way to do it? This script has been created in order to read files, and write in another file all lines without numbers inside.</p> <pre><code>use Data::Dumper; use utf8; #read OUT_AM3.txt, OUT_MOV3.txt, OUT_TA3.txt opendir (DIR, '.') or die "Couldn't open directory, $!"; my @files = readdir(DIR); closedir DIR; $out = "Res.txt"; open (O, "&gt;&gt;", $out); binmode(O, "utf8"); @eti = ("AM3","TA3","MOV3"); for ($i = 0; $i &lt; @eti; $i++){ foreach $fh(@files){ open($fh, "&lt;", "OUT_$eti[$i].txt"); binmode($fh, "utf8"); while(defined($l = &lt;$fh&gt;)){ if (!grep /\-?\d\.\d+/, $l){ print O $l; } } } } </code></pre>
<p>You don't need</p> <pre><code>for ($i = 0; $i &lt; @eti; $i++) </code></pre> <p>as it will loop three times over all files found in directory.</p> <p>Also, when looping over <code>@files</code> it is expected to use array elements,</p> <pre><code> foreach my $file (@files) { -f $file or next; open(my $fh, "&lt;", $file) or die $!; # .. } </code></pre>
<p>"But it's not very important the result. I would like know how to open each file in the directory without writing always the name of the file. "</p> <p>If I understand you correctly, you might want this?</p> <pre><code>my @files = grep /OUT_.*/, glob("*"); print $_ . "\n" foreach @files; </code></pre> <p>Or if you don't mind using module. There is File::Find::Rule</p> <pre><code>use File::Find::Rule; my $rule = File::Find::Rule-&gt;new; $rule-&gt;file; $rule-&gt;name( 'OUT_*' ); my @files = $rule-&gt;in( "." ); </code></pre> <p>Both will give a list of file name in @files.</p>