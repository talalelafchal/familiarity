Writing multiline string of Javascript in Perl
<p>I'm trying to create a string of Javascript using q{} as such:</p> <pre><code> my $javascript = q{ $(function () { var chart; $(document).ready(function () { // Build the chart $(\'#container\').highcharts({ chart: { plotBackgroundColor: null, plotBorderWidth: null, plotShadow: false }, title: { text: \'title\' }, }; </code></pre> <p>It needs to be in segments like this, rather than complete Javascript blocks. My problem is that, since the block isn't complete, it contains open brackets '{' without closing brackets and perl is interpreting the closing bracket for q{} as a closing bracket for one of the javascript blocks. I tried using q() instead, but the same problem occurs. Can I use another character as a delimiter other than ( or { ? I also tried using qq but that resulted in the same problem, and it involves more escaping. I know I can do it without q or qq and just write individual lines, but this looks so much cleaner so I'd like to get this working and I'm sure there must be a way. Thanks!</p>
<p>Use a different delimiter like <code>q~ ~</code></p> <pre><code> my $javascript = q~ $(function () { var chart; $(document).ready(function () { // Build the chart $('#container').highcharts({ chart: { plotBackgroundColor: null, plotBorderWidth: null, plotShadow: false }, title: { text: 'title' }, ~; </code></pre> <p>Or use a heredoc:</p> <pre><code> my $javascript = &lt;&lt;'END_JS'; $(function () { var chart; $(document).ready(function () { // Build the chart $('#container').highcharts({ chart: { plotBackgroundColor: null, plotBorderWidth: null, plotShadow: false }, title: { text: 'title' }, END_JS </code></pre> <p>Note: I translated all <code>\'</code> to just <code>'</code> in the above text, as they were likely an artifact from using single quotes as your delimiter originally.</p>
<p>In single-quoted literals, you must escape <code>\</code> and the delimiters (<code>{</code> and <code>}</code> in this case).</p> <pre><code>q{abc\{def\\ghi'jkl} # Produces: abc{def\ghi'jkl </code></pre> <p>Exception: You need not escape <code>\</code> if it unambiguous.</p> <pre><code>q{abc\\def} # Produces: abc\def q{abc\def} # Produces: abc\def, just like previous q{abc\\\\def} # Produces: abc\\def q{abc\\\def} # Produces: abc\\def, just like previous </code></pre> <p>Exception: You need not the delimiters if you are using <code>{}</code>, <code>[]</code> or <code>()</code> the delimiters are balanced in the literal.</p> <pre><code>q{ foo \{ bar \{ baz \} qux \} moo } # Produces: foo { bar { baz } qux } moo q{ foo \{ bar { baz } qux \} moo } # Same as above q{ foo { bar { baz } qux } moo } # Same as above </code></pre> <p>The problem is that you didn't properly escape your delimiters. You also expected <code>\'</code> to result in <code>'</code> when it results in <code>\'</code>.</p> <pre><code>my $javascript = q{ $(function () \{ &lt;---- Escape var chart; $(document).ready(function () \{ &lt;---- Escape // Build the chart $('#container').highcharts({ &lt;---- No slash for ', and chart: { optional for balanced { } plotBackgroundColor: null, plotBorderWidth: null, plotShadow: false }, title: { text: 'title' }, }; </code></pre> <p>Better yet, use a delimiter that does not appear in the text. (You'd only have to escape <code>\\</code>.)</p> <pre><code>my $javascript = q~ $(function () { var chart; $(document).ready(function () { // Build the chart $('#container').highcharts({ chart: { plotBackgroundColor: null, plotBorderWidth: null, plotShadow: false }, title: { text: 'title' }, ~; </code></pre> <p>Another option is to use a single-quoted heredoc. You need not &mdash; indeed you cannot &mdash; escape anything.</p> <pre><code>my $javascript = &lt;&lt;'__EOJS__'; $(function () { var chart; $(document).ready(function () { // Build the chart $('#container').highcharts({ chart: { plotBackgroundColor: null, plotBorderWidth: null, plotShadow: false }, title: { text: 'title' }, __EOJS__ </code></pre>