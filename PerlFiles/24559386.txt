Issue in Json RPC with mod_perl
<p>I am having an issue with Json RPC and mod_perl. I am trying to return a value from a cgi script which is running in Apache through mod_perl. But in the return value, following apache headers are automatically added and therefore I am not able to access the return value from my client script.</p> <pre><code>Status: 200 Content-Type: application/json; charset=UTF-8 </code></pre> <p>In my Apache configuration file I have following directives.</p> <pre><code>LoadModule perl_module modules/mod_perl.so PerlSwitches -w PerlSwitches -T Alias /perl /var/www/html/perl &lt;Directory /var/www/html/perl&gt; SetHandler perl-script PerlResponseHandler ModPerl::Registry Options +ExecCGI &lt;/Directory&gt; </code></pre> <p>My cgi script is pasted below.</p> <pre><code>#!/usr/bin/perl use CGI::Carp qw(warningsToBrowser fatalsToBrowser); use JSON::RPC::Server::CGI; use strict; use Data::Dumper; my $server = JSON::RPC::Server::CGI-&gt;new; $server-&gt;dispatch('Myapp')-&gt;handle(); </code></pre> <p>The Myapp.pm is</p> <pre><code>#!/usr/bin/perl package Myapp; use base qw(JSON::RPC::Procedure); # Perl 5.6 or more than use strict; use Data::Dumper; sub test : Public(u1:str){ my ($s, $obj) = @_; my $u1 = $obj-&gt;{u1}; return $u1; } 1; </code></pre> <p>My client side script is</p> <pre><code>#!/usr/bin/perl use JSON::RPC::Client; use Data::Dumper; my $client = new JSON::RPC::Client; my $uri = 'http://IP/perl/test.cgi'; $client-&gt;prepare($uri, ['test']); $str= $client-&gt;test('testing'); print "$str\n\n"; </code></pre> <p>In normal case the output should be <strong>testing</strong> . But in my case I am getting the below error.</p> <pre><code>malformed JSON string, neither array, object, number, string or atom, at character offset 0 (before "Status: 200\r\nConte...") at /usr/local/share/perl5/JSON/RPC/Client.pm line 186 </code></pre> <p>The issue is because some http headers are automatically get added to the return value. Is there any way to suppress these headers?</p> <p>Note: Kindly don't recommend normal cgi scripts or running perl script as daemon because it is already working and tested from my end. We are using mod_perl for high performance.</p>