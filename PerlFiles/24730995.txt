Identify duplicates in rows of two different CSVs
<p>I need to identify duplicates in column A of CSV1 with Column A of CSV2. If there is a dupe first name identified the entire row from CSV2 needs to get copied to a new CSV3. Can somebody help in python? </p> <p>CSV1</p> <pre><code>Adam Eve John George </code></pre> <p>CSV2</p> <pre><code>Steve Mark Adam Smith John Smith </code></pre> <p>CSV3</p> <pre><code>Adam Smith John Smith </code></pre>
<p>Here is a quick answer. It's O(n^2) with n the number of lines in your csv, and assumes two equal length CSVs. If you need an O(n) solution (clearly optimal), then let me know. The trick there would be building a set of the elements of column A of csv1.</p> <pre><code>lines1 = open('csv1.txt').read().split('\n') delim = ', ' fields1 = [line.split(delim) for line in lines1] lines2 = open('csv2.txt').read().split('\n') fields2 = [line.split(delim) for line in lines2] duplicates = [] for line1 in fields1: for line2 in fields2: if line1[0] == line2[0]: duplicates.append(line2) </code></pre> <p>print duplicates</p>
<p>Using any of the 3 one-liners:</p> <p>Option 1: Parse file1 in the BEGIN Block</p> <pre><code>perl -lane 'BEGIN {$csv2 = pop; $seen{(split)[0]}++ while &lt;&gt;; @ARGV = $csv2 } print if $seen{$F[0]}' csv1 csv2 </code></pre> <p>Option 2: Using a ternary</p> <pre><code>perl -lane 'BEGIN {($csv1) = @ARGV } $ARGV eq $csv1 ? $seen{$F[0]}++ : ($seen{$F[0]} &amp;&amp; print)' csv1 csv2 </code></pre> <p>Option 3: Using a single if</p> <pre><code>perl -lane 'BEGIN {($csv1) = @ARGV } print if $seen{$F[0]} += $ARGV eq $csv1 and $ARGV ne $csv1' csv1 csv2 </code></pre> <h3>Explanation:</h3> <p><strong>Switches</strong>: </p> <ul> <li><code>-l</code>: Enable line ending processing</li> <li><code>-a</code>: Splits the line on space and loads them in an array <code>@F</code></li> <li><code>-n</code>: Creates a <code>while(&lt;&gt;){..}</code> loop for each line in your input file. </li> <li><code>-e</code>: Tells <code>perl</code> to execute the code on command line. </li> </ul>
<p>Clean and python way to resolve your problem</p> <pre><code>words_a = set([]) words_b = set([]) with open('csv1') as a: words_a = set([w.strip() for l in a.readlines() for w in l.split(" ") if w.strip()]) with open('csv2') as b: words_b = set([ w.strip() for l in b.readlines() for w in l.split(" ") if w.strip()]) with open('csv3','w') as wf: for w in words_a.intersection(words_b): wf.write(w) wf.write('\n') </code></pre>