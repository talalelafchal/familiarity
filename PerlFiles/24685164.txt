attributes extraction and comparision in perl twig
<p>I have a large XML file</p> <pre><code> &lt;/ADDRESS&gt; &lt;/EXTRACT&gt; &lt;/LIST&gt; &lt;LIST NAME="QWER" PORT_ALIAS="2" ROLL="640" DIRECTION="I"&gt; &lt;EXTRACT&gt; &lt;ADDRESS&gt; &lt;HOME ROLLNO="36896" SECTION="A"/&gt; &lt;HOME ROLLNO="36896" SECTION="B"/&gt; &lt;/ADDRESS&gt; &lt;/EXTRACT&gt; &lt;/LIST&gt; &lt;LIST NAME="QWER" PORT_ALIAS="3" ROLL="2200" DIRECTION="O"&gt; &lt;HIGHT NB="1" FEE_SUBMIT="FALSE"&gt; &lt;TICKET&gt; &lt;CLASS SECTION="A" ROLLNO="29582"/&gt; &lt;CLASS SECTION="B" ROLLNO="29582"/&gt; &lt;/TICKET&gt; &lt;/HIGHT&gt; &lt;/LIST&gt; &lt;LIST NAME="QWER" PORT_ALIAS="4" ROLL="640" DIRECTION="I"&gt; &lt;EXTRACT&gt; &lt;ADDRESS&gt; &lt;HOME ROLLNO="37556" SECTION="A"/&gt; &lt;HOME ROLLNO="37556" SECTION="B"/&gt; &lt;/ADDRESS&gt; &lt;/EXTRACT&gt; &lt;/LIST&gt; </code></pre> <p>I am using <a href="https://metacpan.org/module/XML::Twig" rel="nofollow"><code>XML::Twig</code></a> to extract values from the XML data.</p> <p>If the first child of <code>LIST</code> is <code>HIGHT</code> then I have to extract the value of <code>DIRECTION</code>, <code>ROLL</code>, <code>ROLLNO</code> and <code>NB</code>. Also I want to put them separately according to <code>DIRECTION</code> - <code>O</code> or <code>I</code>.</p> <p>If DIRECTION is <code>O</code> then all values will be printed separately as in case the first child is <code>HIGHT</code></p> <pre><code>OUPUT===&gt; ROLL, ROLLNO, NB INPUT ==&gt; ROLL, ROLLNO, NB. </code></pre> <p></p> <pre><code>use XML::Twig; my $filename = 'report.txt'; open(my $fh, '&gt;', $filename); my $phraser = XML::Twig-&gt;new(twig_handlers =&gt; { LIST =&gt; \&amp;process_list, }); $phraser-&gt;parsefile("doc.xml"); sub process_list { my ($twig, $list) = @_; my $conformation = $list-&gt;att('DIRECTION'); my $fee = $list-&gt;att('ROLL'); if (defined $list-&gt;first_child('HIGHT')) { foreach my $primary ( $list-&gt;first_child('HIGHT')-&gt;first_child('TICKET')-&gt;children()) { my $val = $primary-&gt;att('NB'); my $group_id = $primary-&gt;att('ROLLNO'); if ($conformation eq 'O') { print $fh "\n output ===&gt; $conformation, $fee, $group_id , $val \n"; } if ($conformation eq 'I') { print $fh "\n INPUT Queuing ===&gt; $conformation, $fee, $group_id ,$val \n"; } } } } close $fh; print "done\n"; </code></pre> <p>I am getting output like this</p> <pre><code>output ===&gt; O, 2200, 29582 , output ===&gt; O, 2200, 29582 , INPUT Queuing ===&gt; I, 500, 29619 , INPUT Queuing ===&gt; I, 500, 29619 , INPUT Queuing ===&gt; I, 500, 29620 , INPUT Queuing ===&gt; I, 500, 29620 , output ===&gt; O, 132, 29580 , output ===&gt; O, 132, 29580 , </code></pre> <p>the output is mixed.</p> <p>Also I am unable to extract the value of <code>NB</code>.</p>
<p>You are trying to extract the <code>NB</code> attribute from the children of the <code>TICKET</code> elements when it is an attribute of <code>HIGHT</code>.</p> <p>Please <em>always</em> <code>use strict</code> and <code>use warnings</code> at the top of <em>every</em> program, especially hen you are asking for help with it. It is the very least you can do to check that your program is correct.</p> <p>You must <em>always</em> test the success of every <code>open</code> call, by writing something like.</p> <pre><code>open my $fh, '&gt;', $filename or die $!; </code></pre> <p>Alternatively you can enable the <code>autodie</code> pragma which does this for you.</p> <p>I encourage you to look at the <a href="https://metacpan.org/module/XML::Path" rel="nofollow"><code>XML::Path</code></a> module, which makes accessing XML data much more simple.</p> <p>This program shoukd do what you want.</p> <pre><code>use strict; use warnings; use autodie; use XML::Twig; my $filename = 'report.txt'; open my $fh, '&gt;', $filename; my $parser = XML::Twig-&gt;new(twig_handlers =&gt; { LIST =&gt; \&amp;process_list, }); $parser-&gt;parsefile('doc.xml'); sub process_list { my ($twig, $list) = @_; my $direction = $list-&gt;att('DIRECTION'); my $roll = $list-&gt;att('ROLL'); my $hight = $list-&gt;first_child('HIGHT') or return; my $ticket = $hight-&gt;first_child('TICKET') or return; my $nb = $hight-&gt;att('NB'); for my $primary ($ticket-&gt;children) { my $rollno = $primary-&gt;att('ROLLNO'); printf $fh "\n%s ===&gt; %d, %d, %d\n", $direction eq 'O' ? 'output' : 'INPUT Queuing', $roll, $rollno, $nb; } } close $fh; print "done\n"; </code></pre>