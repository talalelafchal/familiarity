Check to see if a file has todays data inside it. If so, exit. Otherwise add data
<p>I have a script that runs and updates a monthly CSV file with data from a daily CSV file. What I am trying to add, is a check, that if the current days Date is in the file in column 'A' then that means data has already been copied over from the daily file, so do nothing and exit. But if today's Date is not in column 'A' then copy the data and append to the monthly file. What I have so far works until I try and append the data. Then it always appends even if today's date is present. </p> <p>I can't just check when the file was last accessed as other people access the file.</p> <pre><code>#!/usr/local/bin/perl #use warnings; use strict; use POSIX 'mktime'; use POSIX 'strftime'; my @dateParts = localtime (); my ($day, $month, $year) = @dateParts[3 .. 5]; $year += 1900; $month += 1; open ( OUTPUT, '+&lt;', "C:\\temp\\MONTHLY.CSV" ) or die "Cannot open file $!\n"; while ( defined ( my $line = &lt;OUTPUT&gt; ) ) { chomp $line; my ($Date) = split ',', $line; if ( $Date eq "$day $month $year" ) { close OUTPUT; exit print "\ file has already been updated today"; } elsif ( $Date ne "$day $month $year" ) { #It works fine until I try this #open (INPUT, "C:\\temp\\DAILY.CSV") # or die "Cannot open file $!\n"; #open (OUTPUT, '&gt;&gt;', "C:\\temp\\MONTHLY.CSV") # or die "Cannot open file $!\n"; #&lt;INPUT&gt;; #while ( &lt;INPUT&gt; ) { # print OUTPUT; #} } } #close INPUT; #close OUTPUT; </code></pre>
<p>There's really only one possible way that the <code>else</code> block would execute, and that's if the conditional associated with the first part of the <code>if</code> block is false.</p> <p>And the only way it can be false is if <code>$Date</code> is not equal to <code>"$day $month $year"</code>.</p> <p>Put a print statement immediately before your if statement, that looks like this:</p> <pre><code>print "\$Date ($Date)\n", "\$day \$month \$year ($day $month $year)\n"; </code></pre> <p>When that line executes, you'll quickly be able to ascertain where the mismatch is. It must be the case that they don't match. Why they don't match, we cannot be sure, since we haven't seen your input data. But armed with that information, you should be able to deduce where you're going wrong.</p> <p>Several other issues: The <code>elsif</code> clause could just be an <code>else</code>, without any conditional, because logic dictates that if <code>$Date eq "$day $month $year"</code> is false, then <code>$Date ne "$day $month $year"</code> has to be true.</p> <p>The next issue is your call to <code>exit</code> will terminate the program as soon as it is reached, making the next line, "<code>print "\ file has already been updated today";</code>" unreachable code.</p> <p>Another issue that stands out is that you're opening the MONTHLY.CSV file for read/write, you're calling the filehandle OUTPUT, but you're only reading from the handle. By the time you get around to writing to MONTHLY.CSV, you've already reopened the file in append mode. You may as well call the first filehandle something relating to input, and open it in read mode, not read/write.</p>