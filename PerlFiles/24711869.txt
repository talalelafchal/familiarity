Calling perl script using Ajax
<p>I have installed perl-activestate and IIS on windows 7. Now I want to use Ajax.</p> <p>When I call <code>perl_script.pl</code> from chrom, I see "AA" on page (<code>\localhost\perl_script.pl</code>).</p> <pre><code>#!C:\Perl64\bin -w use encoding('utf8'); use CGI; use strict; use warnings; require Encode; require CGI; use CGI qw(:standard); my $query = CGI-&gt;new(); my $v1 = "AA"; print $query-&gt;header('text/plain;charset=UTF-8'); print "$v1" ; </code></pre> <p>Now to start using Ajax, I am first trying this simple example where I want to call this<br> <code>perl_script.pl</code> from javascript and see letters "AA" on my page. Could you please tell if there is anything I am missing or I have to install? How can I make this simple program work.</p> <pre><code> &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;script type="text/javascript"&gt; function callSendAjax(){ $('form[name=addProductsForm]').submit(function(){ $.post("/localhost/perl_script.pl", $(this).serialize(), function(data){ alert(data); }); return false; ); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;form action="" method="post" enctype="multipart/form-data" name="addProductsForm"&gt; &lt;table&gt; Learning Ajax &lt;input type="button" value="Save" onclick="callSendAjax()" /&gt; &lt;div id="saveResult"&gt;&lt;/div&gt; &lt;/table&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>I have tried as many answers as I could find on internet to solve this problem, but no luck. so please help. </p>
<p>You are messing up jQuery with ajax. I have no knowledge of jquery but a classical javascript would look different using createRequestObject() etc. </p> <pre><code>var http_option = createRequestObject(); function verifyRequest() { var option = document.getElementById("element id where event is generated").value; if ( option ) { var url = 'x.pl?option='+option; http_option.open('get', url ); http_option.onreadystatechange = handleResponse; http_option.send(null); } } function handleResponse() { if(http_option.readyState == 4 &amp;&amp; http_option.status == 200) { var response = http_option.responseText; // Text returned FROM perl script if(response) { // UPDATE ajaxTest content document.getElementById("elementid where ajax codeistoload").innerHTMLresponse; } } </code></pre> <p>Moreover you did not mention the div id "saveResult" anywhere in your code.I think you need to mention it if you want your ajax script to be loaded between those div tags.</p>
<p>Have you tried using CGI::Ajax? The server may not realize you intend the call from JS to be an Ajax call so it is loading the response sent by the perl script as a separate page.</p> <p>It could also be that you are submitting a form using jQuery. Instead of using form, how about something like the following?</p> <pre><code> &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;script type="text/javascript"&gt; function callSendAjax(){ $.post("/localhost/perl_script.pl",{'param1': $("#myParam").val()}, function(data){ alert(data); }); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;table&gt; Learning Ajax &lt;input type="text" id="myParam" /&gt; &lt;input type="button" value="Save" onclick="callSendAjax()" /&gt; &lt;div id="saveResult"&gt;&lt;/div&gt; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>Basically, I got rid of the form(along with the method="post", which I think was causing the perl script's output to reload) and am adding in parameters being sent to the server using jQuery. Note: I have not tried out this code to see if it runs. You might have to tweak it a bit to make it run.</p>