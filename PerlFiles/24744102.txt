Why this perl script with strange variable names works?
<p>What I read in perl doc the perl identifier should be an <code>word character</code>. (Not counting special perl variables).</p> <p>Somewhere on the net I saw this example script:</p> <pre><code>use 5.018; use utf8; my($ , $ , $ , $ ) = (1..4); say "$ " if( $ + $ == $ ); </code></pre> <p>And it works without any error. So, perl allows some "bone and arrow like" characters as variable names?</p>
<p>Anything that matches <code>\p{Word}</code> can be used in an identifier name in Perl. The Unicode standard defines quite a large number of characters with that property. </p> <p>The <code>use utf8</code> pragma is important; that tells Perl that the source file itself is encoded in UTF-8, so those characters can appear as literals in the code. </p> <p>As an example, one of the characters in your code is <a href="http://www.scarfboy.com/coding/unicode-tool?s=U%2B100d8">LINEAR B IDEOGRAM B254 DART</a>. The Unicode character database says this is a "letter, other" which is included in the set of Word characters.</p>
<p>The characters in that example are all of the Lo (Letter, Other) category. Perl considers these valid word characters:</p> <pre><code>use open qw(:std :encoding(UTF-8)); print grep { /\w/ } ("\x{100af}", "\x{10082}", "\x{100d8}", "\x{100ae}"); </code></pre>