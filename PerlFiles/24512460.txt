Cassandra: insert with CompositeType key using Perl and Thrift
<p>I was wondering if it is possible to perform an <code>insert</code> operation on Cassandra cluster using <code>Thrift</code> in <code>Perl</code>.</p> <p>As we can see <a href="http://stackoverflow.com/questions/8688849/cassandra-get-via-perl">here</a>, using <code>indexed slice</code> it is possible to <code>get</code> records with more then one key.</p> <p>Looks like it is possible using <code>Thrift</code> on Java - <a href="http://stackoverflow.com/questions/11801288/inserting-and-getting-from-cassandra-with-composite-key-invalidrequestexception">link</a>.</p> <p>I generated Perl library for Cassandra using Thrift compiler. I managed to perform an insert with single type key, I was looking in the library generated by Thrift for anything that could add a <code>composite type</code> and I just can't find it.</p> <p>Does anyone has an idea? Here I add example of <code>Thrift</code> insertion in Perl that works fine (on <code>Cassandra-2.0.8</code> and <code>Thrift-0.9.1</code>), I am wondering if someone could help me transform it into <code>CompositeType</code> key insertion, where both keys would be strings.</p> <pre><code>#!/usr/bin/perl -w use strict; use warnings; # Change for your environment use lib '/path/to/cassandra/interface/gen-perl'; use Cassandra::Cassandra; use Cassandra::Constants; use Cassandra::Types; use Thrift; use Thrift::BinaryProtocol; use Thrift::Socket; use Thrift::FramedTransport; use Data::Dumper; # localhost and 9160 are default in storage conf for rpc listener my $socket = new Thrift::Socket('localhost', 9160); my $transport = new Thrift::FramedTransport($socket); my $protocol = new Thrift::BinaryProtocol($transport); my $client = new Cassandra::CassandraClient($protocol); eval { $transport-&gt;open(); my $consistency_level = Cassandra::ConsistencyLevel::ONE; my $keyspace = 'DEMO'; my $column_parent = new Cassandra::ColumnParent(); $column_parent-&gt;{column_family} = "User"; $column_parent-&gt;{super_column} = undef; $column_parent-&gt;{column} = 'age'; $client-&gt;set_keyspace($keyspace); my $column = new Cassandra::Column(); my $row_key = 'Spider-Man'; $column-&gt;{name} = 'first'; $column-&gt;{value} = 'Peter'; $column-&gt;{timestamp} = time; $client-&gt;insert($row_key, $column_parent, $column, $consistency_level); $column-&gt;{name} = 'last'; $column-&gt;{value} = 'Parker'; $column-&gt;{timestamp} = time; $client-&gt;insert($row_key, $column_parent, $column, $consistency_level); $column-&gt;{name} = 'age'; $column-&gt;{value} = '18'; $column-&gt;{timestamp} = time; $client-&gt;insert($row_key, $column_parent, $column, $consistency_level); $transport-&gt;close(); }; if($@){ warn(Dumper($@)); } 1; </code></pre> <p>And a definition of Cassandra <code>ColumnFamily</code> for <code>cassandra-cli</code>:</p> <pre><code>create column family User with key_validation_class=UTF8Type and comparator='CompositeType(UTF8Type, UTF8Type)' and default_validation_class=UTF8Type; </code></pre> <p>I'm not looking for someone who will just give me ready working example (althou it would be cool!), I added the example of code so that it would be clear what I am talking about. I would be very greatfull even for some ideas, any help is welcome.</p>