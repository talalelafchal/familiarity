Why does Perl think 1&lt;&lt;-1 is 9223372036854775808?
<p>If I understand <a href="http://perldoc.perl.org/perlop.html#Shift-Operators" rel="nofollow"><code>perldoc perlop</code></a> correctly, this operation should something undefined:</p> <blockquote> <p>The result of overflowing the range of the integers is undefined because it is undefined also in C. In other words, using 32-bit integers, <code>1 &lt;&lt; 32</code> is undefined. <strong>Shifting by a negative number of bits is also undefined</strong>.</p> </blockquote> <hr> <p>I'm noticing two things on my setup that I cannot explain:</p> <ol> <li><p><code>1 &lt;&lt; -1</code> returns <code>9223372036854775808</code> without <code>bigint</code> or <code>integer</code> pragmas (returns <code>NaN</code> when they are active).</p> <pre><code>&gt; perl -le "print 1&lt;&lt;-1" 9223372036854775808 </code></pre></li> <li><p><code>1 &lt;&lt; -1</code> returns true when tested with <code>defined</code>, regardless of whether or not the <code>bigint</code> or <code>integer</code> pragmas are in effect</p> <pre><code>&gt; perl -le "print 'yes' if defined(1&lt;&lt;-1)" yes &gt; perl -le "use integer; print 'yes' if defined(1&lt;&lt;-1)" yes &gt; perl -le "use bigint; print 'yes' if defined(1&lt;&lt;-1)" yes </code></pre></li> </ol> <hr> <p><strong>Details of my setup</strong>:</p> <pre><code>&gt; perl -V Set up gcc environment - gcc.exe (rubenvb-4.5.4) 4.5.4 Summary of my perl5 (revision 5 version 16 subversion 3) configuration: Platform: osname=MSWin32, osvers=5.2, archname=MSWin32-x64-multi-thread uname='' config_args='undef' hint=recommended, useposix=true, d_sigaction=undef useithreads=define, usemultiplicity=define useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef use64bitint=define, use64bitall=undef, uselongdouble=undef usemymalloc=n, bincompat5005=undef Compiler: cc='C:\Perl64\site\bin\gcc.exe', ccflags ='-DNDEBUG -DWIN32 -D_CONSOLE -DNO_STRICT -DWIN64 -DCONSERVATIVE -DPERL_TEXTMODE_SCRIPTS -DUSE_SITECUSTOMIZE -DPERL_IMPLICIT_CONTEXT -DPERL_IMPLICIT_SYS -DUSE_PERLIO -DHASATTRIBUTE -fno-strict-aliasing -mms-bitfields', optimize='-O2', cppflags='-DWIN32' ccversion='', gccversion='gcc.exe (rubenvb-4.5.4) 4.5.4', gccosandvers='' intsize=4, longsize=4, ptrsize=8, doublesize=8, byteorder=12345678 d_longlong=undef, longlongsize=8, d_longdbl=define, longdblsize=8 ivtype='__int64', ivsize=8, nvtype='double', nvsize=8, Off_t='__int64', lseeksize=8 alignbytes=8, prototype=define Linker and Libraries: ld='C:\Perl64\site\bin\g++.exe', ldflags ='-L"C:\Perl64\lib\CORE"' libpth=\lib libs=-lkernel32 -luser32 -lgdi32 -lwinspool -lcomdlg32 -ladvapi32 -lshell32 -lole32 -loleaut32 -lnetapi32 -luuid -lws2_32 -lmpr -lwinmm -lversion -lodbc32 -lodbccp32 -lcomctl32 -lmsvcrt perllibs=-lkernel32 -luser32 -lgdi32 -lwinspool -lcomdlg32 -ladvapi32 -lshell32 -lole32 -loleaut32 -lnetapi32 -luuid -lws2_32 -lmpr -lwinmm -lversion -lodbc32 -lodbccp32 -lcomctl32 -lmsvcrt libc=msvcrt.lib, so=dll, useshrplib=true, libperl=perl516.lib gnulibc_version='' Dynamic Linking: dlsrc=dl_win32.xs, dlext=dll, d_dlsymun=undef, ccdlflags=' ' cccdlflags=' ', lddlflags='-mdll -L"C:\Perl64\lib\CORE"' Characteristics of this binary (from libperl): Compile-time options: HAS_TIMES HAVE_INTERP_INTERN MULTIPLICITY PERLIO_LAYERS PERL_DONT_CREATE_GVSV PERL_IMPLICIT_CONTEXT PERL_IMPLICIT_SYS PERL_MALLOC_WRAP PERL_PRESERVE_IVUV PL_OP_SLAB_ALLOC USE_64_BIT_INT USE_ITHREADS USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_PERLIO USE_PERL_ATOF USE_SITECUSTOMIZE Locally applied patches: ActivePerl Build 1603 [296746] Built under MSWin32 Compiled at Mar 13 2013 13:31:10 @INC: C:/Perl64/site/lib C:/Perl64/lib . </code></pre>
<p>When they say undefined, they are referring to <a href="http://en.wikipedia.org/wiki/Undefined_behavior"><em>undefined behaviour</em></a>, not the value <code>undef</code>.</p> <p>If the result of an operation is undefined behaviour, it means that anything could happen -- you could get a surprising result, a different result on different platforms, a different result each time you do the same thing, or 3-foot tall snails could come out of your computer and start speaking Swahili (though that last one is rather uncommon in practice).</p> <p>In other words, because it's explicitly documented as undefined behaviour, <em>anything</em> perl does is technically correct -- which means you can't rely on it to do anything useful.</p>
<p>The number 9223372036854775808 is equal to 2^63. Given a 64-bit unsigned integer initialized to 1, rotating it by one bit to the right gives this result. This is probably what's happening: &lt;&lt; -1 is being interpreted as a rotate right by one.</p> <p>But since shifting by negative values is undefined, this is not something that can be depended on. The coincidence is worth noting, however.</p>