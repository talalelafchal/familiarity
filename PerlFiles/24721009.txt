How to insert an ancestor and sibling for an element using xpath in perl?
<p>I want to insert an ancestor and sibling for an element using xpath in perl.</p> <p><strong>This is my input</strong></p> <pre><code>&lt;docinfo:hier&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt; &lt;title&gt;CENTRAl&lt;/title&gt; &lt;/heading&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt; &lt;title&gt;A&lt;/title&gt; &lt;/heading&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;AC&lt;/title&gt;&lt;/heading&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;THE ACTUARIE&lt;/title&gt;&lt;/heading&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;CHAPTER VII &lt;/title&gt;&lt;/heading&gt; &lt;docinfo:hierlev role="me"&gt; &lt;heading&gt; &lt;title&gt;46. Terms and conditions of Chairman and Members of Board.&lt;/title&gt; &lt;/heading&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; </code></pre> <p><strong>I want output like this:</strong></p> <p><code>##</code> Represents newly inserted element</p> <pre><code>&lt;docinfo:hier&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;Rules&lt;/title&gt;&lt;/heading&gt;# here i want change the text &lt;docinfo:hierlev role="ancestor"&gt;## &lt;heading&gt;## &lt;title&gt;Rule&lt;/title&gt;## &lt;/heading&gt;## &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;A&lt;/title&gt;&lt;/heading&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;AC&lt;/title&gt;&lt;/heading&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;THE ACTUARIE&lt;/title&gt;&lt;/heading&gt; &lt;docinfo:hierlev role="ancestor"&gt; &lt;heading&gt;&lt;title&gt;CHAPTER VII &lt;/title&gt;&lt;/heading&gt; &lt;docinfo:hierlev role="me"&gt; &lt;heading&gt; &lt;title&gt;46. Terms and conditions of Chairman and Members of Board.&lt;/title&gt; &lt;/heading&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt; &lt;/docinfo:hierlev&gt;## &lt;/docinfo:hierlev&gt; &lt;/docinfo:hier&gt; </code></pre> <p><strong>This is my source code</strong></p> <p>When I run the code it inserts only the element title.</p> <pre><code>#!/usr/bin/perl use strict; use warnings; use XML::LibXML; my $parser = XML::LibXML-&gt;new; my $doc = $parser-&gt;parse_file("mytest.xml"); my $root = $doc-&gt;getDocumentElement(); my ($ref_node) = $doc-&gt;findnodes('/LEGDOC/docinfo/docinfo:hier/docinfo:hierlev/heading'); my $new_element= $doc-&gt;createElement("docinfo:hierlev"); my $new_element= $doc-&gt;createElement("heading"); my $new_element= $doc-&gt;createElement("title"); $new_element-&gt;appendText('rule'); $ref_node-&gt;parentNode-&gt;insertAfter($new_element, $ref_node); print $root-&gt;toString(1); </code></pre>
<p>As Friedo suggested above instead of adding each element to the $new_element variable you are overwriting it.</p> <p>My Perl is a bit rusty but I think you would need something along the lines of the below. I am aware this could be done in less lines of code but I have tried to keep the steps separate for clarity.</p> <pre><code> -- create distinct nodes for each level my $newDocInfoElement = $doc-&gt;createElement("docinfo:hierlev"); my $newHeadingElement = $doc-&gt;createElement("heading"); my $newTitleElement = $doc-&gt;createElement("title"); $newTitleElement-&gt;appendText('rule'); --append them into the structure that you want $newHeadingElement-&gt;addChild($newTitleElement); $newDocInfoElement-&gt;addChild($newHeadingElement); --add the whole structure to your XML $ref_node-&gt;parentNode-&gt;insertAfter($newDocInfoElement, $ref_node); </code></pre> <p>Hope this is Helpfull. </p>