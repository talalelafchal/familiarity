Perl regex for whole word match containing special character û
<p>In Perl 5.8.5, I need to write a regular expression that should match a whole word containing extended latin1 character set. If I write it like this "\b\w+\b", it breaks, if it encounters a character like this 'û'. </p> <p>What is needed to ensure that whole word match using regular expression in Perl 5.8.5 works towards the Latin1 (ISO8859-1) character set, including all extended characters? </p> <p>Perl is installed in CentOS 4.6. The locale command in Linux gives the following output:</p> <pre><code>LANG=en_US LC_CTYPE="en_US" LC_NUMERIC="en_US" LC_TIME="en_US" LC_COLLATE="en_US" LC_MONETARY="en_US" LC_MESSAGES="en_US" LC_PAPER="en_US" LC_NAME="en_US" LC_ADDRESS="en_US" LC_TELEPHONE="en_US" LC_MEASUREMENT="en_US" LC_IDENTIFICATION="en_US" LC_ALL= </code></pre> <p>For a given word, eg. "abc grûler xyz", the regex towards a whole word match for string "gr" shouldn't be searched, which is searched in my case being a substring of the word "grûler". The regex is: </p> <pre><code>$string =~ /\b\w+\b/; </code></pre> <p>The output is "gr", which is incorrect, since it is a substring as said.</p> <p>Also, I don't want to exclude extended characters completely from being matched. If a match is needed towards the whole word "grûler", then it should also work fine with the same regex.</p> <p>Thanks for helping.</p>
<p>You need to <code>use locale</code> to have locale-sensitive regexes. This affects lots of other Perl aspects as well though, so you might not want to enable it globally. See the <code>perllocale</code> documentation.</p>
<p>As pointed out by ikegami, you've probably simply not decoded your input. Consider indeed this one-liner (on an UTF-8 terminal):</p> <pre><code>echo "abc grûler xyz" | perl -Mopen=:std,:utf8 -le '$,="\n"; print &lt;&gt; =~ /\b\w+\b/g' </code></pre> <p>which gives the expected matches:</p> <pre><code>abc grûler xyz </code></pre> <p>since it decodes the input string before the match, thanks to <code>-Mopen=:std,:utf8</code> (which then also causes the output to be encoded). You can obtain the same via explicit decoding/encoding (through <a href="https://metacpan.org/pod/Encode" rel="nofollow">Encode</a>, among others).</p> <p>Now remove <code>-Mopen=:std,:utf8</code> from the one-liner above and you'll get the same unexpected match (on the 'gr' substring) you described.</p> <p>More on this: <a href="http://perldoc.perl.org/perlunicode.html#The-%22Unicode-Bug%22" rel="nofollow">The "Unicode Bug"</a>.</p> <p>I don't know if a perl this old has additional problems though (perl 5.8.8 should work).</p>