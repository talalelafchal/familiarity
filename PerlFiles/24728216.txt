purpose of installing a perl module with apt-get instead of cpan
<p>While loading necessities into my <a href="https://github.com/dnschneid/crouton" rel="nofollow">crouton</a>, <em>apt-get</em> recommended that I install <a href="http://packages.ubuntu.com/precise/libtemplate-perl" rel="nofollow">libtemplate-perl</a>. This seemed a jolly idea, and I obeyed.</p> <p>Reading <a href="http://stackoverflow.com/questions/12127566/an-explanation-of-the-nginx-starman-dancer-web-stack">this answer</a>, I see a fellow traveler install <a href="http://plackperl.org/" rel="nofollow">Plack</a> and <a href="http://search.cpan.org/~miyagawa/Starman-0.4009/lib/Starman.pm" rel="nofollow">Starman</a> via <em>CPAN</em>, but then use <em>apt-get</em> to install <a href="http://www.perldancer.org/" rel="nofollow">Dancer</a>.</p> <p>Minutes before reading said answer, I had installed <em>Dancer</em> via <em>CPAN</em>. And it had worked. It had worked real good!</p> <p>What happens differently when I install a <em>CPAN</em> package via a non-<em>CPAN</em> package manager? Are there pitfalls I need to be wary of because my <em>libtemplate-perl</em> came from <em>apt-get</em>, or my <em>Dancer</em> came from <em>CPAN</em>?</p>
<p>Another difference to mention that I don't see in other answers, is that if you use CPAN to install a module then the module version you get will be set, until you decide to upgrade that module. Whereas, if you use apt and a later version appears in Debian at some point in the future, then <code>apt-get upgrade</code> will update it.</p> <p>Maybe you want that, maybe you don't. It's neither necessarily an advantage, nor a disadvantage. Simply a difference to be noted.</p>
<p>On Debian and Ubuntu CPAN (<code>/usr/bin/cpan</code> utility) installs modules into <code>/usr/local/lib/</code> by default. And debian packages keep their files in <code>/usr/share/perl5/</code> and <code>/usr/lib/perl5/</code>. </p> <p>You can also choose to package any cpan distribution not available in your apt repositories manually. It's easy with the help of <a href="http://search.cpan.org/~dam/DhMakePerl-0.72/dh-make-perl">dh-make-perl</a> tool:</p> <pre><code>dh-make-perl --cpan Some::Module &amp;&amp; cd Some-Module* &amp;&amp; sudo debi </code></pre> <p>Also check out about <a href="https://metacpan.org/pod/local::lib#NAME">local::lib</a> and <a href="http://perlbrew.pl/">perlbrew</a>.</p>
<p>A lot of tutorials, Stack Overflow answers, walk throughs, etc. will not want to assume that you know how to use /usr/bin/cpan and will instead suggest that you use your system's package manager, which you are more likely to be familiar with.</p> <p>This is especially true if you are using a tool written in a particular language, but you don't know that language. For example many people wouldn't care whether crouton is written in Perl, Python or Lisp, they just want a tool they can use. Your average Debian or Ubuntu user is more likely to be familiar with apt-get than with cpan.</p> <p>If you are looking to program in Perl I recommend installing things by cpan, using <a href="http://perlbrew.pl/">perlbrew</a> and/or <a href="https://metacpan.org/pod/local::lib">local::lib</a>. If you are just looking to install a tool you can use, I would recommend using apt-get.</p> <hr> <p>Additionally apt-get has the advantage that non-Perl dependencies will be installed automatically. For example the CPAN module <a href="https://metacpan.org/pod/XML::LibXML">XML::LibXML</a> requires that the libxml2 headers are available on the system; the CPAN distribution has no way of stating that as a dependency, and will simply fail on install if it can find the headers to link against. The Debian package can actually specify that libxml2 is a dependency, and will install the dependency automatically for you.</p> <p>Despite that if you are looking to use XML::LibXML as a Perl programmer, I would recommend installing it with cpan and installing the libxml2 package via apt-get. Having all your Perl modules installed in the same place - again, via perlbrew or local::lib - will help you keep your sanity in the future. CPAN is preferable to apt-get in this case because not all distributions have been packaged for Debian, and so you get a lot more options if you use CPAN directly.</p> <hr> <p>In summary: <a href="http://en.wikipedia.org/wiki/There&#39;s_more_than_one_way_to_do_it">TIMTOWTDI</a> ;-)</p>
<p>The good things about apt-get are</p> <ul> <li><p>that you can uninstall the packages afterwards should you need to</p></li> <li><p>if you are maintaining any number of servers it is quicker to use apt-get as there is no building required</p></li> <li><p>there are definite versions of packages which are tested for compatibility</p></li> </ul> <p>The downsides are</p> <ul> <li><p>not necessarily the latest version of packages</p></li> <li><p>not all packages are available</p></li> </ul>
<p>apt-get installs are generally easier and better than cpan because of dependencies alone.</p> <p>If you are so lucky as to need SOAP::Lite, for example, it is many dozens of dependencies, and a one-line "apt-get install libsoap-lite-perl".</p> <p>It is sometimes not clear how Perl CPAN names map to their repository package names, but "apt-cache search " is your friend.</p>