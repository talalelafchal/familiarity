Perl module Capture::Tiny capture code in string variable
<p>I am trying to use the Perl module <a href="https://metacpan.org/pod/Capture%3a%3aTiny" rel="nofollow">Capture::Tiny</a> to capture evalued Perl code. The problem is the "Print" function returns 1 on success and this returns as a result of the capture if the print is the last statement. How to avoid this. Below is the code.</p> <pre><code>use Capture::Tiny ':all'; my $code = &lt;&lt; "PERL_CODE"; print "Hello world\n"; #raise_error(); PERL_CODE my ($merged, @result) = capture_merged {eval $code}; if ($@) { $merged = "Perl code error: $@\n$code\n$merged"; } print "$merged" . join ("", @result); </code></pre> <p>The output is not as expected:</p> <pre><code>Hello world 1 </code></pre> <p>The 1 in the output coming from the Perl "Print" function.</p> <p>Of course there is an ugly solution is to put "return;" as the last statement in the code fragment but I just do not want it to be like that in case you forgot it.</p> <pre><code>my $code = &lt;&lt; "PERL_CODE"; print "Hello world\n"; #raise_error(); return; # this will not return the 1 from the Print function above but ugly. PERL_CODE </code></pre>
<p>1 is coming from <code>@result</code>, at the end you are joining the <code>@result</code> so you are getting 1.</p> <p>Try the below</p> <pre><code>if ($@) { $merged = "Perl code error: $@\n$code\n$merged"; } #print "merged is $merged result is @result"; print "$merged"; </code></pre>
<p>The captured STDOUT is in <code>$merged</code>, while the value returned by the code - <code>1</code> as you say - is in <code>@result</code>.</p> <p>If you don't want to see the <code>1</code> then don't print <code>@result</code>.</p> <p>Do you expect to find something else in there? The value returned by any block of code is rarely printed so you don't normally see it.</p>