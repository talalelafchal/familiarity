Unmatched ) in reg when using lc function
<p>I am trying to run the following code:</p> <pre><code>$lines = "Enjoyable )) DAY"; $lines =~ lc $lines; print $lines; </code></pre> <p>It fails on the second line where I get the error mentioned in the title. I understand the brackets are causing the trouble. I think I could use "quotemeta", but the thing is that my string contains info that I go on to process later, so I would like to keep the string intact as far as possible and not tamper with it too much.</p>
<p>You have two problems here.</p> <p><strong>1. <code>=~</code> is used to execute a specific set of operations</strong></p> <p>The <code>=~</code> operator is used to either match with <code>//</code>, <code>m//</code>, <code>qr//</code> or a string; or to substitute with <code>s///</code> or <code>tr///</code>.</p> <p>If all you want to do is lowercase the contents of <code>$lines</code> then you should use <code>=</code> not <code>=~</code>.</p> <pre><code>$lines = "Enjoyable )) DAY"; $lines = lc $lines; print $lines; </code></pre> <p><strong>2. Regular expressions have special characters which must be escaped</strong></p> <p>If you want to match <code>$lines</code> against a lower case version of <code>$Lines</code>, which should return true if <code>$lines</code> was already entirely lower case and false otherwise, then you need to escape the ")" characters.</p> <pre><code>#!/usr/bin/env perl use strict; use warnings; my $lines = "enjoyable )) day"; if ($lines =~ lc quotemeta $lines) { print "lines is lower case\n"; } print $lines; </code></pre> <p>Note this is a toy example trying to find a reason for doing <code>$lines =~ lc $lines</code> - It would be much better (faster, safer) to solve this with <code>eq</code> as in <code>$lines eq lc $lines</code>.</p> <p>See <code>perldoc -f quotemeta</code> or <a href="http://perldoc.perl.org/functions/quotemeta.html" rel="nofollow">http://perldoc.perl.org/functions/quotemeta.html</a> for more details on quotemeta.</p>
<p>=~ is used for regular expressions. "lc" is not part of regex, it's a function like this: $new = lc($old); </p> <p>I don't recall the regex operator for lowercase, because I use lc() all the time. </p>