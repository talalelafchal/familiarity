What are extended regular expressions?
<p>I am studying for an exam and one of the topics is on RegEx. There is a modifier, <code>x</code>, with the description 'uses extended regular expressions,' but it doesn't explain what this means. I can't really find anything on Google that fits the context of my study material.</p> <p>On a quiz, one of the questions asked what modifier allows the use of comments in RegEx, and the correct(?) answer was <code>x</code>.</p> <p>Could someone please help me make sense of this? Thank you.</p> <p>Edit: I meant <code>x</code> in the context of <code>[gix],</code> where <code>x</code> is described as 'uses extended regular expressions.'</p>
<p>/x to ignore whitespace that is neither backslashed nor within a character class. to make your regex more readable</p>
<p>As documented in <a href="http://perldoc.perl.org/perlretut.html"><code>perlretut</code></a> (Just search for <code>/x</code>):</p> <blockquote> <p>Long regexps like this may impress your friends, but can be hard to decipher. In complex situations like this, the <code>//x</code> modifier for a match is invaluable. It allows one to put nearly arbitrary whitespace and comments into a regexp without affecting their meaning. Using it, we can rewrite our 'extended' regexp in the more pleasing form</p> <pre><code> /^ [+-]? # first, match an optional sign ( # then match integers or f.p. mantissas: \d+\.\d+ # mantissa of the form a.b |\d+\. # mantissa of the form a. |\.\d+ # mantissa of the form .b |\d+ # integer of the form a ) ([eE][+-]?\d+)? # finally, optionally match an exponent $/x; </code></pre> </blockquote>
<p>As stated in the <a href="http://perldoc.perl.org/perlre.html#x" rel="nofollow"><code>perlre</code></a> documentation:</p> <blockquote> <p><code>/x</code> tells the regular expression parser to ignore most whitespace that is neither backslashed nor within a character class. You can use this to break up your regular expression into (slightly) more readable parts...</p> </blockquote> <p>The modifier improves readability, and allows us to add explanatory comments.</p> <pre><code> /^ # the beginning of the string (?: # group, but do not capture: foo # match 'foo' | # OR bar # match 'bar' ) # end of grouping $ # the end of the string /x; </code></pre> <p>Even without the <code>/x</code> modifier you can enclose comments.</p> <pre><code>/foo(?# match foo)/ </code></pre>
<p>You seem to be confusing two different concepts here.</p> <p>The <code>/x</code> option to the match (<code>m//</code>) and substitution (<code>s///</code>) operators in Perl tells the regex parse to ignore white space. This is used to make your regex more readable.</p> <p><a href="http://perldoc.perl.org/perlre.html#Extended-Patterns" rel="nofollow">Extended patterns</a> are additions to the Perl regex engine so that it supports things (like look-ahead and look-behind) that aren't usually supported in regex tools.</p>