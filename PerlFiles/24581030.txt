perl : function calls
<p>The below script is used to ssh into a router,read information form the file abc.txt and execute the commands. The script works as expected. </p> <pre><code>use strict; use warnings; use autodie; use feature qw/say/; use Net::SSH::Expect; print "\n[INFO] script Execution Started\n"; my $ssh = Net::SSH::Expect-&gt;new( host =&gt; "ip addr", password =&gt; ' user ', user =&gt; 'pwd', raw_pty =&gt; 1, ); my $login_output = $ssh-&gt;login(); $ssh-&gt;exec("enter command 1"); $ssh-&gt;exec("enter command 2"); open my $pr, '&lt;', 'abc.txt'; while (my $config = &lt;$pr&gt;) { chomp $config; my $conf = $ssh-&gt;exec("$config"); print("$conf"); } </code></pre> <p>Now I converted a part of the above code to a function.This is what i tried. So what i'm trying to do is make a function call to open a file. <code>mysub($ssh,"abc.txt");</code> So that i can reuse this code in my program to open multiple config files.</p> <pre><code>use strict; use warnings; use autodie; use feature qw/say/; use Net::SSH::Expect; print "\n[INFO] script Execution Started\n"; my $ssh = Net::SSH::Expect-&gt;new( host =&gt; "ip addr", password =&gt; 'user', user =&gt; 'pwd', raw_pty =&gt; 1, ); sub mysub { my ($ssh,$filename) = @_; $ssh-&gt;exec("command 1"); $ssh-&gt;exec("command 2"); open my $pr, '&lt;', $filename; while (my $config = &lt;$pr&gt;) { chomp $config; my $conf = $ssh-&gt;exec("$config"); print("$conf"); } mysub($ssh,"abc.txt"); } </code></pre> <p>The function call part doesn't work its not throwing any error. Am i missing something here ?</p>
<p>If you use proper indentation, your error becomes evident:</p> <pre><code>sub mysub { my ($ssh,$filename) = @_; $ssh-&gt;exec("command 1"); $ssh-&gt;exec("command 2"); open my $pr, '&lt;', $filename; while (my $config = &lt;$pr&gt;) { chomp $config; my $conf = $ssh-&gt;exec("$config"); print("$conf"); } mysub($ssh,"abc.txt"); # this should be outside } </code></pre> <p>You have to put the function call outside of the subroutine. </p>