Determine if the stdout is terminal under ssh
<p>To test whether the output is terminal we can do <code>-t STDOUT</code>:</p> <pre><code>if (-t STDOUT) { # print with terminal control chars } else { # just plain print } </code></pre> <p>But when the script is executed in the ssh session not run from terminal (Jenkins in my case), the <code>-t</code> test still returns true and my output gets polluted with control chars:</p> <pre><code>ssh user@server "/my/script.pl" </code></pre> <p>Why does the <code>-t</code> detects the terminal?</p>
<p>Perhaps it would be better if you instead forced ssh to allocate a pty — </p> <p>From the <code>ssh</code> manual:</p> <blockquote> <p><code>-t</code> Force pseudo-tty allocation. This can be used to execute arbitrary screen-based programs on a remote machine, which can be very useful, e.g. when implementing menu services. Multiple <code>-t</code> options force tty allocation, even if ssh has no local tty.</p> </blockquote> <p>The longer answer: <code>-t</code> (the Perl or Bourne shell function) reliably detects whether the stream is a “typewriter,” but <code>ssh</code> will normally only allocate a pseudo-teletype (<code>pty</code>) stream in interactive shells, not when other programs are being started.</p> <p>See also <code>RequestTTY</code> as an option in <code>.ssh/config</code>. </p>
<p>I don't know <em>why</em> ssh is allocating a terminal for you &mdash; mine defaults to not doing that even if the output of <code>ssh</code> goes to a terminal &mdash; but passing <code>-T</code> to ssh will disable pseudo-tty creation on the remote end.</p> <pre><code>$ ssh -t localhost "perl -E'say -t STDOUT ?1:0'" 1 Connection to localhost closed. $ ssh -T localhost "perl -E'say -t STDOUT ?1:0'" 0 </code></pre> <p>From <code>ssh</code>'s man page:</p> <blockquote> <p><code>-T</code> Disable pseudo-tty allocation.</p> <p><code>-t</code> Force pseudo-tty allocation. This can be used to execute arbitrary screen-based programs on a remote machine, which can be very useful, e.g. when implementing menu services. Multiple -t options force tty allocation, even if ssh has no local tty.</p> </blockquote>