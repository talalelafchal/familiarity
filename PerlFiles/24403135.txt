perl regex for replacing multiple matches with corresponding replacements
<p><img src="https://i.stack.imgur.com/28BZI.png" alt="enter image description here"></p> <p>I'd like to replace each match like this:</p> <pre><code>fn.doc( fn.collection( fn.distinctValues( # convert to camelcase also </code></pre> <p>I'm able to find the matches using regex but not sure how to do replacements .Here's the regex <code>(\w+)(:)(\w+-\w+\()|(\w+)(:)(\w+\()</code> <a href="http://regex101.com/r/kD9zG8" rel="nofollow noreferrer">http://regex101.com/r/kD9zG8</a></p> <p><strong>Expected Output:</strong></p> <pre><code>let $local-config := fn.doc($alert-action)/alert:action/alert:name let $local-coll := fn.collection($uri)/alert:action/alert:name let $global-coll := fn.distinctValues(fn.collection($global-uri)/alert:action/alert:name[../alert:name = 'ml_alert_action_17_01_action']) </code></pre> <p>Please help!</p>
<p>The following simple regex should work:</p> <pre><code>use strict; use warnings; my $data = do {local $/; &lt;DATA&gt;}; $data =~ s/(\w+):(\w+)-?(\w*)\(/$1.$2\u$3(/g; print $data; __DATA__ let $local-config := fn:doc($alert-action)/alert:action/alert:name let $local-coll := fn:collection($uri)/alert:action/alert:name let $global-coll := fn:distinct-values(fn:collection($global-uri)/alert:action/alert:name[../alert:name = 'ml_alert_action_17_01_action']) </code></pre> <p>Outputs:</p> <pre><code>let $local-config := fn.doc($alert-action)/alert:action/alert:name let $local-coll := fn.collection($uri)/alert:action/alert:name let $global-coll := fn.distinctValues(fn.collection($global-uri)/alert:action/alert:name[../alert:name = 'ml_alert_action_17_01_action']) </code></pre> <h3>Enhancement for 3+ words</h3> <p>To handle more than 2 words, you can change the regex to the following:</p> <pre><code>$data =~ s{(\w+):([\w-]+)(?=\()}{"$1.".lcfirst join '', map ucfirst, split /-/, $2}eg; </code></pre> <p>Or if your perl version supports the <code>/r</code> switch:</p> <pre><code>$data =~ s{(\w+):([\w-]+)(?=\()}{"$1.".$2=~s/-(.)/\u$1/gr}eg; </code></pre>