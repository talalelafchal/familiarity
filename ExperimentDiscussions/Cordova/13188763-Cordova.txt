How can i render a list of all iPhone contacts with Cordova (phone gap)
<p>I am trying to create a Application which lists all contacts from the iPhone address book with the following code (coffeescript)</p> <pre><code>listContacts: -&gt; options = new ContactFindOptions() options.filter = ''; options.multiple = true fields = ["id", "photos", "name", "phoneNumbers"] navigator.contacts.find(fields, @onSuccess, @onError, options) onSuccess: (contacts) -&gt; console.log contacts.length onError: (error) -&gt; console.log error </code></pre> <p>this seems to work nice for a bunch of contacts. but with 3000 the contacts will never return. the funny thing though this works perfectly on the iOsSimulator.</p> <p>are there any limitations to the number of contacts which can be retrieved?</p>
<p>I had the same problem with 300 contacts, it took around 5 minutes. After I patched it only takes 10 seconds. </p> <p>Here is my pull request : <a href="https://github.com/phonegap/phonegap/pull/19" rel="nofollow">https://github.com/phonegap/phonegap/pull/19</a></p> <p>They have to generate a temp file for each picture and they are using a crazy loop to find a free file path. Something like :</p> <pre><code>do { filePath = [NSString stringWithFormat:@"%@/photo_%03d.jpg", docsPath, i++]; } while ([fileMgr fileExistsAtPath:filePath]); </code></pre> <p>Now I use <a href="http://developer.apple.com/library/ios/documentation/system/conceptual/manpages_iphoneos/man3/mktemp.3.html" rel="nofollow">mktemp</a> and everything is faster.</p> <p>If you don't need full res pictures, you can also replace :</p> <pre><code>CFDataRef photoData = ABPersonCopyImageData(self.record); </code></pre> <p>by :</p> <pre><code>CFDataRef photoData = ABPersonCopyImageDataWithFormat(self.record, kABPersonImageFormatThumbnail); </code></pre> <p>I hope that'll help you !</p> <p>Edit :</p> <p>IOS'll flush the temp directory each time you start the application:</p> <blockquote> <p>You are responsible for deleting any temporary files that you created. The system will clean them up at startup, but that could be a very long time away.</p> <p>From: <a href="http://cocoadev.com/wiki/NSTemporaryDirectory" rel="nofollow">http://cocoadev.com/wiki/NSTemporaryDirectory</a></p> </blockquote> <p>If you don't want to slow down the bootstrap of your application, you should use always the same filepath based on the contact id. You'll save cleanup and write time if the file already exists :</p> <pre><code>- (NSObject*)extractPhotos { NSMutableArray* photos = nil; if (ABPersonHasImageData(self.record)) { //CFDataRef photoData = ABPersonCopyImageDataWithFormat(self.record, kABPersonImageFormatThumbnail); CFDataRef photoData = ABPersonCopyImageData(self.record); NSData* data = (__bridge NSData*)photoData; // write to temp directory and store URI in photos array // get the temp directory path NSString* docsPath = [NSTemporaryDirectory ()stringByStandardizingPath]; NSError* err = nil; int recordId = ABRecordGetRecordID(self.record); NSFileManager* fileMgr = [[NSFileManager alloc] init]; NSString* filePath = [NSString stringWithFormat:@"%@/photo_%03d.jpg", docsPath, recordId]; BOOL hasImage = NO; if ([fileMgr fileExistsAtPath:filePath]) { hasImage = YES; } else if ([data writeToFile:filePath options:NSAtomicWrite error:&amp;err]) { hasImage = YES; } if (hasImage) { photos = [NSMutableArray arrayWithCapacity:1]; NSMutableDictionary* newDict = [NSMutableDictionary dictionaryWithCapacity:2]; [newDict setObject:filePath forKey:kW3ContactFieldValue]; [newDict setObject:@"url" forKey:kW3ContactFieldType]; [newDict setObject:@"false" forKey:kW3ContactFieldPrimary]; [photos addObject:newDict]; } CFRelease(photoData); } return photos; } </code></pre> <p><strong>Edit (08/01/2013)</strong>: FYI : merged in cordova : <a href="http://git-wip-us.apache.org/repos/asf/cordova-ios/commit/c6a1dbe3" rel="nofollow">http://git-wip-us.apache.org/repos/asf/cordova-ios/commit/c6a1dbe3</a></p>
<p>First you have to add plugin from terminal command line</p> <pre><code>$ cordova plugin add org.apache.cordova.contacts </code></pre> <p>onDeviceReady you can call a method to open contact list</p> <pre><code>function chooseContact() { var options = new ContactFindOptions(); options.fields = ["displayName", "name", "emails", "phoneNumbers"]; navigator.contacts.chooseContact(onSuccess, options); } function onSuccess(id, contact) { console.log(JSON.stringify(contact)); } </code></pre>