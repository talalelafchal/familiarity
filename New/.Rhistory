library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
p = ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
scale_color_hue() +
facet_wrap(~cut) +
layer(
data=diamonds,
mapping=aes(x=carat, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_jitter()
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
scale_color_hue() +
facet_wrap(~cut) +
layer(
data=diamonds,
mapping=aes(x=carat, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_jitter()
)
ggplot() +
+     coord_cartesian() +
+     scale_x_continuous() +
+     scale_y_continuous() +
+     scale_color_hue() +
+     facet_wrap(~cut) +
+     layer(
+         data=diamonds,
+         mapping=aes(x=carat, y=price, color=color),
+         stat="identity",
+         geom="point",
+         position=position_jitter()
+     )
ggplot() +
+     coord_cartesian() +
+     scale_x_continuous() +
+     scale_y_continuous() +
+     scale_color_hue() +
+     facet_wrap(~cut) +
+     layer(
+         data=diamonds,
+         mapping=aes(x=carat, y=price, color=color),
+         stat="identity",
+         geom="point",
+         position=position_jitter()     )
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
scale_color_hue() +
facet_wrap(~cut) +
layer(
data=diamonds,
mapping=aes(x=carat, y=price, color=color),
stat="identity",
geom="point",
position=position_jitter()
)
library("ggplot2")
f = ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
scale_color_hue() +
facet_wrap(~cut) +
layer(
data=diamonds,
mapping=aes(x=carat, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_jitter()
)
library("ggplot2")
f = ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
scale_color_hue() +
facet_wrap(~cut) +
layer(
data=diamonds,
mapping=aes(x=carat, y=price, color=color),
stat="identity",
geom="point",
position=position_jitter()
)
f
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
View(d)
View(d)
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
p = ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x=time, y=gc), stat="boxplot", geom="boxplot", position=position_dodge(), params=list()
p = ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x=time, y=gc), stat="boxplot", geom="boxplot", position=position_dodge(), params=list()
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
p = ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x=time, y=gc), stat="boxplot", geom="boxplot", position=position_dodge(), params=list()
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x=time, y=gc), stat="boxplot", geom="boxplot", position=position_dodge(), params=list()
ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x-factor(heaps), y=time), stat="boxplot", geom="boxplot", position=position_dodge(), params=list()
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x-factor(heaps), y=time), stat="boxplot", geom="boxplot", position=position_dodge(), params=list()
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x-factor(heaps), y=time), stat="boxplot", geom="boxplot", position="dodge"
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x-factor(heaps), y=time), stat="boxplot", geom="boxplot", position="dodge")
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
ggplot() + coord_cartesian() + scale_x_discrete() + scale_y_continuous() + layer(
data=d, mapping=aes(x=heapSize, y=time), stat="boxplot", geom="boxplot", position="dodge")
View(d)
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(heapSize), y=time), stat="boxplot", geom="boxplot", position="dodge")
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(opt), y=time), stat="boxplot", geom="boxplot", position="dodge")
p3 = coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(benchmark), y=time), stat="boxplot", geom="boxplot", position="dodge")
p3 = coord_cartesian() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(benchmark), y=time), stat="boxplot", geom="boxplot", position="dodge")
library("ggplot2")
d = expand.grid(
obs       = 1:10,
benchmark = c('antlr', 'bloat', 'chart', 'eclipse', 'fop', 'hsqldb',
'jython', 'luindex', 'lusearch', 'pmd', 'xalan'),
gc        = c('CopyMS', 'GenCopy', 'GenImmix', 'GenMS', 'Immix'),
opt       = c('on', 'off'),
heapSize = seq(from=1.5, to=4, by=0.5)
)
d$time = rexp(nrow(d), 0.01)+1000
d$time =
d$time + abs(d$heapSize-3)*100
d$time[d$opt=='on'] =
d$time[d$opt=='on'] - 200
d$time[d$opt=='on' & d$benchmark=='bloat'] =
d$time[d$opt=='on' & d$benchmark=='bloat'] + 190
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] =
d$time[d$opt=='on' & d$benchmark=='pmd' & d$gc=='Immix'] + 600
p1 = ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(heapSize), y=time), stat="boxplot", geom="boxplot", position="dodge")
p2 = ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
layer( data=d, mapping=aes(x= factor(opt), y=time), stat="boxplot", geom="boxplot", position="dodge")
library(plotly)
setwd("/Users/Talal/Tesi/familiarity/New/")
data10  <- read.csv("java10.csv")
data100  <- read.csv("java100.csv")
data1000  <- read.csv("java1000.csv")
data10000  <- read.csv("java10000.csv")
p <- plot_ly(type = 'box') %>%
add_boxplot(y = data10$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android10 ") %>%
add_boxplot(y = data10$swing,
name = "Swing10",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data100$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android100 ") %>%
add_boxplot(y = data100$swing,
name = "Swing100",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data1000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android1000 ") %>%
add_boxplot(y = data1000$swing,
name = "Swing1000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data10000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android10000 ") %>%
add_boxplot(y = data10000$swing,
name = "Swing10000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
layout(
yaxis = list(range = c(0, -500)))
p
chart_link = plotly_POST(p, filename="JAVA-Andorid-Swift")
library(plotly)
setwd("/Users/Talal/Tesi/familiarity/New/")
data10  <- read.csv("java10.csv")
data100  <- read.csv("java100.csv")
data1000  <- read.csv("java1000.csv")
data10000  <- read.csv("java10000.csv")
wilcox.test(data10$android,data10$swing,alternative="two.side",paired=FALSE)
print("------------------------")
wilcox.test(data100$android,data100$swing,alternative="two.side",paired=FALSE)
wilcox.test(data1000$android,data1000$swing,alternative="two.side",paired=FALSE)
wilcox.test(data10000$android,data10000$swing,alternative="two.side",paired=FALSE)
library(plotly)
setwd("/Users/Talal/Tesi/familiarity/New/")
data10  <- read.csv("java10.csv")
data100  <- read.csv("java100.csv")
data1000  <- read.csv("java1000.csv")
data10000  <- read.csv("java10000.csv")
data100000  <- read.csv("java100000.csv")
p <- plot_ly(type = 'box') %>%
add_boxplot(y = data10$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android10 ") %>%
add_boxplot(y = data10$swing,
name = "Swing10",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data100$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android100 ") %>%
add_boxplot(y = data100$swing,
name = "Swing100",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data1000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android1000 ") %>%
add_boxplot(y = data1000$swing,
name = "Swing1000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data10000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android10000 ") %>%
add_boxplot(y = data10000$swing,
name = "Swing10000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data100000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android100000 ") %>%
add_boxplot(y = data100000$swing,
name = "Swing100000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
layout(
yaxis = list(range = c(0, -500)))
p
chart_link = plotly_POST(p, filename="JAVA-Andorid-Swift")
wilcox.test(data10$android,data10$swing,alternative="two.side",paired=FALSE)
wilcox.test(data100$android,data100$swing,alternative="two.side",paired=FALSE)
wilcox.test(data1000$android,data1000$swing,alternative="two.side",paired=FALSE)
wilcox.test(data10000$android,data10000$swing,alternative="two.side",paired=FALSE)
wilcox.test(data100000$android,data100000$swing,alternative="two.side",paired=FALSE)
p <- plot_ly(type = 'box') %>%
add_boxplot(y = data10$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android10 ") %>%
add_boxplot(y = data10$swing,
name = "Swing10",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data100$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android100 ") %>%
add_boxplot(y = data100$swing,
name = "Swing100",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data1000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android1000 ") %>%
add_boxplot(y = data1000$swing,
name = "Swing1000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data10000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android10000 ") %>%
add_boxplot(y = data10000$swing,
name = "Swing10000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
add_boxplot(y = data100000$android,
line = list(color = 'rgb(250,25,25)'),
name = "Android100000 ") %>%
add_boxplot(y = data100000$swing,
name = "Swing100000",
marker = list(color = 'rgb(107,174,214)'),
line = list(color = 'rgb(107,174,214)')) %>%
layout(
yaxis = list(range = c(0, -100)))
p
chart_link = plotly_POST(p, filename="JAVA-Andorid-Swift")
