javascript function - the correct way to do this
<p>Hi all and thanks for looking,</p> <p>What is the correct way to do this:</p> <pre><code>&lt;script language="javascript"&gt; function flag(nation) { this.nation=nation; document.getElementById("flag").innerHTML="&lt;img src='images/flags/'+nation+'.jpg'&gt;"; } &lt;/script&gt; </code></pre> <p>with this in the link tags: onClick="flag(scotislands)"; and the image name being scotislands.jpg</p> <p>Many thanks, B.</p>
<p>It depends what you mean by "correct". I suspect from the fact you're using <code>innerHTML</code> that you don't mean "conforming to a recognised standard, such as DOM", but that's what you're getting from me:</p> <pre><code>function flag(nation) { var flagEl = document.getElementById("flag"); while (flagEl.firstChild) { flagEl.removeChild(flagEl.firstChild); } var img = document.createElement("img"); img.src = "images/flags/" + nation + ".jpg"; flagEl.appendChild(img); } </code></pre>
<p>You need to quote the text in the link tag, otherwise it tries and fails to find a variable with the name <code>scotislands</code>.</p> <pre><code> onClick="flag('scotislands');" </code></pre> <p>then change the assignment of the innerHTML to the following:</p> <pre><code> document.getElementById("flag").innerHTML="&lt;img src='images/flags/" + nation + ".jpg'&gt;" </code></pre> <p>Note the use of single quotes internally to set of the url, but double quotes around each of the inline text bits.</p> <p>Generally, though, I'd prefer something unobtrusive (no code in markup). Using a framework, such as jQuery, I'd do something like:</p> <pre><code> &lt;a href="#scotislands" class="flag-identifier"&gt;Scotislands&lt;/a&gt; </code></pre> <p>Then using javascript, I'd add a handler for all such links:</p> <pre><code> $(function() { $('a.flag-identifier').click( function() { var flag = $(this).attr('href').replace('#',''); $('#flag').html( '&lt;img src="images/flags/' + flag + '.jpg" /&gt;' ); return false; }); }); </code></pre> <p>This would add a click handler that gets the flag name from the href on the anchor, then replaces the named element <code>flag</code>'s content with the image constructed by adding the name of the country to the image url. Note that I omitted the global variable <code>nation</code>, but you could easily set it from within the click handler as well if necessary.</p>
<p>The string that you are setting innerHTML to is not quoted properly. Try this:</p> <pre><code>document.getElementById("flag").innerHTML="&lt;img src='images/flags/'+nation+'.jpg'&gt;"; </code></pre> <p>Also, your onClick is trying to send an non-existent object called "scotislands". Try this instead:</p> <pre><code>onClick="flag('scotislands');" </code></pre>
<p>In the following line you have your string identifiers mixed up:</p> <pre><code>document.getElementById("flag").innerHTML="&lt;img src='images/flags/'+nation+'.jpg'&gt;"; </code></pre> <p>It should be:</p> <pre><code>document.getElementById("flag").innerHTML='&lt;img src="images/flags/'+nation+'.jpg"&gt;'; </code></pre> <p><strong>EDIT</strong><br> Also, as Joel spotted, <code>onClick="flag(scotislands)";</code> should be <code>onClick="flag('scotislands')";</code></p>
<pre><code>function flag(nation) { var myFlag = document.getElementById("flag").getElementsByTagName("img")[0]; myFlag.src = "images/flags/"+nation+".jpg"; } </code></pre>