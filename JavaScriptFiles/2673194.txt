How do i make a copy of an object? Javascript
<p>I have a class in json format. I would like to make two instance. Right now (its pretty obvious why) when i 'make' two objects i really have 2 vars pointing to one. (b.blah = 'z' will make a.blah=='z')</p> <p>How do i make a copy of an object?</p> <pre><code>var template = { blah: 0, init: function (storageObj) { blah = storageObj; return this; //problem here }, func2: function (tagElement) { }, } a = template.init($('form [name=data]').eq(0)); b = template.init($('form [name=data2]').eq(0)); </code></pre>
<pre><code>var b = {}, key; for (key in a){ if(a.hasOwnProperty(key)){ b[key] = a[key]; } } </code></pre>
<p>If you want multiple instances, sounds like a constructor might do you some good.</p> <pre><code>function Template(element) { this.blah = element; } Template.prototype.func2 = function(tagElement) { //... }; var a = new Template($('form [name=data]').eq(0)); var b = new Template($('form [name=data2]').eq(0)); b.func2('form'); </code></pre> <p>All methods on the function prototype (<code>Template.prototype</code>) will be accessible from each instance, and with each instance scoped accordingly. The new keyword will run the function and then return to you a brand new object, inheritting from the prototype.</p> <p>You'll no longer have the exact same object point to <code>a</code> and <code>b</code>.</p>
<p>From the comments <a href="http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-clone-a-javascript-object/122704#122704">What is the most efficient way to deep clone an object in JavaScript?</a></p>