Change style of text field based on the selection of a combo box using Javascript
<p>I would like to change the style of a text field based on the value selected in a combo box. Specifically, what I'd like to do is make the txtDepartment field gray and marked as "read only" if the option value selected in cboSource is 1. I've tried the code below, but I imagine my style code at least is wrong, if not other things. Any help appreciated. Thanks!</p> <pre><code>&lt;select name="cboSource" id="cboSource" onClick="displayDepartment(this);"&gt; &lt;option value = 1&gt;Source 1&lt;/option&gt; &lt;option value = 2&gt;Source 2&lt;/option&gt; &lt;/select&gt; &lt;input name="txtDepartment" type="text" id="txtDepartment" size="6" maxlength="6"&gt;&lt;/p&gt; &lt;script&gt; function displayDepartment(obj) { var selectedValue = obj.value; var txtDepartment = document.getElementById("txtDepartment"); if (selectedValue == "1") { txtDepartment.style.display = "Disabled style='background-color:#E8E8E8'"; } } &lt;/script&gt; </code></pre>
<p>First, use onchange on cboSource.</p> <p>Then:</p> <pre><code>if(selectedValue == "1") txtDepartment.disabled = 'disabled'; </code></pre>
<pre><code>txtDepartment.style.backgroundColor = "#E8E8E8"; txtDepartment.disabled = 'disabled'; </code></pre> <p>with jQuery your whole function gets a lot smaller:</p> <pre><code>function displayDepartment(obj) { if($(obj).value=="1") { $("#txtDepartment").css('background-color','#E8E8E8'); $("#txtDepartment").disabled ='disabled' } } </code></pre>
<p>Set the <code>disabled</code> attribute for your element</p> <pre><code>// on txtDepartment.setAttribute("disabled","disabled") // off txtDepartment.removeAttribute("disabled") </code></pre>
<p>possible solution using jQuery:</p> <pre><code>&lt;style&gt; .disabled { background-color:#E8E8E8; } &lt;/style&gt; &lt;script language="javascript"&gt; $(document).ready(function() { var txtDepartment = $("#txtDepartment"); var cboSource = $("#cboSource"); cboSource.change(function() { txtDepartment.removeClass().removeAttr("disabled"); if (cboSource.val() == 1) { txtDepartment.addClass("disabled").attr("disabled", true); } }); }); &lt;/script&gt; &lt;select name="cboSource" id="cboSource"&gt; &lt;option value = 0&gt;Choose&lt;/option&gt; &lt;option value = 1&gt;Source 1&lt;/option&gt; &lt;option value = 2&gt;Source 2&lt;/option&gt; &lt;/select&gt; &lt;input name="txtDepartment" type="text" id="txtDepartment" size="6" maxlength="6"&gt;&lt;/p&gt; </code></pre>
<p>In my opinion onclick is more suitable as on change has different meaning for different browser</p> <p>Try this </p> <pre><code>&lt;select name="cboSource" id="cboSource" onClick="displayDepartment(this);"&gt; &lt;option value = 1&gt;Source 1&lt;/option&gt; &lt;option value = 2&gt;Source 2&lt;/option&gt; &lt;/select&gt; &lt;input name="txtDepartment" type="text" id="txtDepartment" size="6" maxlength="6"&gt;&lt;/p&gt; &lt;script&gt; function displayDepartment(obj) { var txtDepartment = document.getElementById("txtDepartment"); txtDepartment.disabled = false; txtDepartment.style = ""; if (obj.value == "1") { txtDepartment.style = "background-color:#E8E8E8"; txtDepartment.disabled = true; } } &lt;/script&gt; </code></pre>