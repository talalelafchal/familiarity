'setInterval' vs 'setTimeout'
<p>What is the main difference between </p> <p><strong><a href="https://developer.mozilla.org/En/window.setInterval" rel="nofollow noreferrer">setInterval</a></strong></p> <p>and </p> <p><strong><a href="https://developer.mozilla.org/en/window.setTimeout" rel="nofollow noreferrer">setTimeout</a></strong></p> <p>in JavaScript? </p>
<p><code>setInterval</code> fires again and again in <strong>intervals</strong>, while <code>setTimeout</code> only fires once.</p> <p>See <a href="https://developer.mozilla.org/en/DOM/window#Methods" rel="nofollow noreferrer">reference at MDN</a>.</p>
<p><code>setTimeout(expression, timeout);</code> runs the code/function once after the timeout.</p> <p><code>setInterval(expression, timeout);</code> runs the code/function in intervals, with the length of the timeout between them.</p> <p>Example:</p> <pre><code>var intervalID = setInterval(alert, 1000); // Will alert every second. // clearInterval(intervalID); // Will clear the timer. setTimeout(alert, 1000); // Will alert once, after a second. </code></pre>
<p><strong>setTimeout():</strong></p> <p>It is a function that execute a JavaScript statement <code>AFTER</code> x interval.</p> <pre><code>setTimeout(function () { something(); }, 1000); // Execute something() 1 second later. </code></pre> <p><strong>setInterval():</strong></p> <p>It is a function that execute a JavaScript statement <code>EVERY</code> x interval.</p> <pre><code>setInterval(function () { somethingElse(); }, 2000); // Execute somethingElse() every 2 seconds. </code></pre> <p>The interval unit is in <code>millisecond</code> for both functions.</p>
<p><code>setInterval</code> repeats the call, <code>setTimeout</code> only runs it once.</p>
<h3>setInterval()</h3> <p>setInterval is a time interval based code execution method that has the native ability to repeatedly run specified script when the interval is reached. It should not be nested into its callback function by the script author to make it loop, since it loops by default. It will keep firing at the interval unless you call clearInterval().</p> <p>if you want to loop code for animations or clocks Then use setInterval.</p> <pre><code>function doStuff() { alert("run your code here when time interval is reached"); } var myTimer = setInterval(doStuff, 5000); </code></pre> <h3>setTimeout()</h3> <p>setTimeout is a time based code execution method that will execute script only one time when the interval is reached, and not repeat again unless you gear it to loop the script by nesting the setTimeout object inside of the function it calls to run. If geared to loop, it will keep firing at the interval unless you call clearTimeout().</p> <pre><code>function doStuff() { alert("run your code here when time interval is reached"); } var myTimer = setTimeout(doStuff, 5000); </code></pre> <p>if you want something to happen one time after some seconds Then use setTimeout... because it only executes one time when the interval is reached.</p>