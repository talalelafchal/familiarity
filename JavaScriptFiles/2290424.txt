JavaScript how to pass arguments
<pre><code>function f1(i1, i2) { log(i1); log(i2); } function f2(i1,i2){ f1(arguments); } f2(100,200); </code></pre> <p>In the above case in function f1 i1 gets [100, 200] while i2 is undefined.</p> <p>What is the correct way to pass arguments to f1 from f2.</p>
<p>If you <em>must</em> use the <code>arguments</code> object:</p> <pre><code>function f2(i1, i2) { f1(arguments[0], arguments[1]); } </code></pre> <p>I'm really wondering why you don't just pass i1 and i2 directly, but I'll give you the benefit of the doubt and assume for purposes of the question that this code is dramatically simpler than your real code.</p>
<p>Function objects have an <a href="https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Function/Apply" rel="nofollow noreferrer"><code>apply()</code></a> method:</p> <pre><code>f1.apply(null, arguments) </code></pre> <p>The first parameter passed is the object that should be <code>this</code> in the called function, the second parameter is an array containing the parameter values for the called function. </p>
<p>Why not just do:</p> <pre><code>function f2(i1,i2){ f1(i1,i2); } </code></pre> <p>?</p>
<p>For this precise situation:</p> <pre><code>function f2(i1,i2){ f1(i1, i2); } </code></pre> <p>For any number of arguments, see sth's answer</p>
<p>I do not understand your question, if you do this it will work:</p> <pre><code>&lt;script&gt; function f1(i1, i2) { alert(i1+","+i2); log(i1); log(i2); } function f2(i1,i2){ f1(i1,i2); } f2(100,200); &lt;/script&gt; </code></pre>
<p>f1 isn't <code>return</code>ing any results. Even if it did, you'd need to return an array to return more than one value.</p> <pre><code>function f1(i1, i2) { var returnArray = new Array(); var returnArray[0] = log(i1); var returnArray[1] = log(i2); return returnArray; } function f2(i1,i2) { var results = f1(i1, i2); } f2(100,200); </code></pre>