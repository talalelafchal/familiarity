How to include a JavaScript function call as a parameter on another JavaScript function?
<p>How can I have a parameter to one JS function be Function Name with parameters to call another function?</p> <p>something like:</p> <pre><code>onClick="Clicked(this, 'SomeFunction('test')'" </code></pre> <p>Regards</p>
<p>What you have would work, although, you'd need to use the javascript eval function to evaluate the value once in the function:</p> <pre><code>function Clicked(obj, functionText) { // do something with object.... eval(functionText); } </code></pre> <p>Otherwise, if there's no parameter, you can always pass the function itself:</p> <pre><code>onClick="Clicked(this, SomeFunction)" </code></pre> <p>and implement like this:</p> <pre><code>function Clicked(obj, func) { // do something with object... func(); } </code></pre>
<pre><code>onClick = "Clicked(this, function () {SomeFunction('test')});" function Clicked (obj, functionToFire) { functionToFire(); } </code></pre>
<pre><code>&lt;script&gt; function doSomeWork(arg1, arg2) { arg2(); } function displayThis(msg) { alert(msg); } doSomeWork("11",function(){ displayThis("123");}); &lt;/script&gt; </code></pre>
<pre><code>&lt;span onclick="Clicked(this, 'SomeFunc', ['test', 123])"&gt;AAAA&lt;/span&gt; ... function Clicked(thisObject, funcName, params) { // find an object with name funcName in default (window) scope var func = window[funcName]; // test that the object exist and that it's a function if (func &amp;&amp; typeof func == "function") { // call the function with passed params // passing 'thisObject' enables to use 'this' keyword within the called function func.apply(thisObject, params); // as an alternative you may call it without 'this' object func.apply(null, params); } } function SomeFunc(text, num) { alert("text: " + text + ", number: " + num); } </code></pre>
<p>This couldn't be simpler:</p> <pre><code>onClick = "function() { someFunction('test') }" </code></pre>