Write an expression in javascript
<p>I need a javascript code that split a string like below:</p> <p>Input string: "a=>aa| b=>b||b | c=>cc"</p> <p>Output: </p> <pre><code>a=&gt;aa b=&gt;b||b c=&gt;cc </code></pre> <p>I'd written different codes like:</p> <pre><code>split(/ \ | /) </code></pre> <p>or</p> <pre><code>split(/ \| (?! \ |) /) </code></pre> <p>but didn't work.</p> <p>please help me...</p> <p>I really need it fast.</p>
<p>Split with <code>/\|(?=\s)/</code> for your case</p> <pre><code>"a=&gt;aa| b=&gt;b||b | c=&gt;cc".split(/\|(?=\s)/) # a=&gt;aa # b=&gt;b||b # c=&gt;cc </code></pre>
<p>I tested the first answer and it did not work as I believe you intended:</p> <pre><code>"a=&gt;aa| b=&gt;b||b | c=&gt;cc".split( "\| "); </code></pre> <p>unfortunately the answer that I came up with isn't much better just add a space after the pipe marker in your regex. Also answer by @S.Mark is valid, tested.</p>
<p>This confusing looking regex will work without spaces around the pipes:</p> <pre><code>var matches = "a=&gt;aa|b=&gt;b||b|c=&gt;cc".match(/(?:[^|]|\|\|)+/g) </code></pre> <p>Instead of splitting, it searches for tokens with double pipes, but not single. If you have spaces and need to match <code>b=&gt;b|b | c=&gt;5</code> use S.Mark's regex, but this can help in other cases.<br> To clarify, <code>[^|]|\|\|</code> reads <code>[not a pipe] OR [two pipes]</code>.</p>