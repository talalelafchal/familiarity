Dynamically set events and closure
<p>This is a follow up question to my previous <a href="http://stackoverflow.com/questions/2171602/settimeout-and-anonymous-function-problem">one</a>: I have this object:</p> <pre><code>var myObject { init: function(){ for (var i = 0; i &lt;3; i++) { image = new Image(); . . . image.onmouseover = this.Fade(this, 70, 100,1); image.onmouseout = this.Fade(this, 100, 70,0); } }, SetOpacity: function (eID, opacity){ eID.style.opacity = opacity / 100; eID.style.filter = 'alpha(opacity=' + opacity + ')'; } , fade: function (eID, startOpacity, endOpacity){ var timer = 0; if (startOpacity &lt; endOpacity) { for (var i = startOpacity; i &lt;= endOpacity; i++) { (function(opacity) { setTimeout(function() {SetOpacity(eID, opacity);}, timer * 30); })(i); timer++; } } } } </code></pre> <p>Do I need to define closures on the events? </p>
<p>Yes.</p> <p>Otherwise, the <code>image</code> variable will be shared by all three sets mouse handlers, and all of the animations will happen to the last image (even if you mouseover a different image).</p> <p>Also, in your <code>setTimeout</code> callback, you should be writing <code>MySlideshow.setOpacity</code>.</p> <p><strong>EDIT</strong>: Your code (<code>image.onmouseover = this.Fade(this, 70, 100,1)</code>) is <em>calling</em> the <code>Fade</code> method and assigning the function that it returns to the <code>onmouseover</code> property. Since the <code>Fade</code> method doesn't return a function, it doesn't work.</p> <p>You need to change it to <code>image.onmouseover = function() { MySlideShow.Fade(this, 70, 100, 1); };</code>.<br> That won't work as expected either unless you put it in a separate function.</p>