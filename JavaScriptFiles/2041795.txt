javascript require/include
<p>I wrote a script like that:</p> <pre><code>NS.load = function(src) { var script = document.createElement("script").setAttribute("src", src); document.getElementsByTagName("head")[0].appendChild(script); } </code></pre> <p>It loads files but I can't reach functions and variables defiened in other files. </p> <pre><code>//js/main.js var qux = {name: "name"}; NS.load("js/foo.js"); //js/foo.js alert(qux.name); //undefined variable </code></pre> <p>But if I define qux like this:</p> <pre><code>window.qux = {name: "name"}; </code></pre> <p>I can reach qux variable in other modules. As far as I know all globals are already a member of window object. So why I have to define variables like this. Could you offer another method?</p> <p>Thanks.</p>
<p>It looks like you tried to shortcut your code by calling <code>createElement</code> and <code>setAttribute</code> all on 1 line, but <code>setAttribute</code> doesn't return anything, so you can't go calling <code>appendChild</code> on it's return value, because there is none.This will fix it:</p> <pre><code>NS.load = function(src) { var script = document.createElement("script"); script.setAttribute("src", src) document.getElementsByTagName("head")[0].appendChild(script); } </code></pre> <p><strong>Edit:</strong></p> <p>What sort of environment are you running your code in? Is something happening cross-site or are you defining qux inside of another function? The following works for me, running the files via <a href="http://localhost/test.html" rel="nofollow noreferrer">http://localhost/test.html</a></p> <pre><code>&lt;html&gt; &lt;head&gt; &lt;script type="text/javascript"&gt; load = function(src) { var script = document.createElement("script"); script.setAttribute("src", src); document.getElementsByTagName("head")[0].appendChild(script); } var qux = {name: "name"}; load("foo.js"); &lt;/script&gt; &lt;/head&gt; &lt;body&gt;&lt;/body&gt; &lt;/html&gt; </code></pre> <p>foo.js:</p> <pre><code>alert(qux.name); </code></pre> <p>I get an alert with "name" when the page loads.</p>