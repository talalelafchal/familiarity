Javascript to make input field in edit mode(insert mode)
<p>How is it possible to make a input field editable in javascript. I mean onFocus putting it in insert mode so that values can be overwritten. Any suggestions ???</p>
<p>EDIT: May be totally off-topic, depending on the meaning behind the question.</p> <p>If you can use jQuery, <a href="http://www.appelsiini.net/projects/jeditable" rel="nofollow noreferrer">Jeditable is a nice plugin</a> to do just that.</p> <p>If you must roll your own code, take a look at how that plugin works and use it as a starting point. </p> <p>Basically, the steps are:</p> <ol> <li>onFocus/onClick - swap your field with an input.</li> <li>When the user is "done" (hit Enter, click a button), push the result back to the server via Ajax.</li> <li>When your request completes, update the interface with the new value, hiding the input.</li> </ol>
<p>After doing some googling, <a href="http://bytes.com/topic/javascript/answers/150118-how-can-i-change-insert-typeover-mode-text-box" rel="nofollow noreferrer">this seems</a> to be related. It might be working trying the play with the following code a bit, but it might only work in specific browsers on specific operating systems, but it's worth a shot anyway.</p> <pre><code>document.execCommand('OverWrite', false, true); document.execCommand('OverWrite', false, false); </code></pre> <p>As per your request, I would say the implementation would work something like this:</p> <pre><code>&lt;input type="text" onFocus="document.execCommand('OverWrite', false, true);" onBlur="document.execCommand('OverWrite', false, false);"&gt; </code></pre>
<p>You can try to mimic Insert mode by rewriting the input value on keyup :</p> <pre><code>var input = $('input'); // your input element Event.observe(input, 'keydown', function(e) { // event handler input._lastvalue = input.value; }); Event.observe(input, 'keyup', function(e) { // event handler if(input.value == input._lastvalue) return; if(input.value.length &lt;= input._lastvalue.length) return; var caretPos = doGetCaretPosition(input); input.value = input.value.slice(0,caretPos) + input.value.slice(caretPos+1); doSetCaretPosition(input, caretPos); }); </code></pre> <p>Here is a demo : <a href="http://jsfiddle.net/z6khW/" rel="nofollow noreferrer">http://jsfiddle.net/z6khW/</a></p>
<p>I have a more complex solution for the other browsers than IE here (see comments of the accepted answer):</p> <p><a href="http://stackoverflow.com/questions/11503798/overtype-mode-with-jquery">Overtype mode with jquery</a></p>
<p>This should work in modern browsers (also on mobile):</p> <pre><code>var input = document.querySelector('input'); // or a textarea input.addEventListener('keypress', function(){ var s = this.selectionStart; this.value = this.value.substr(0, s) + this.value.substr(s + 1); this.selectionEnd = s; }, false); </code></pre> <h2><a href="http://jsfiddle.net/N56JJ/" rel="nofollow">jsfiddle</a></h2> <p><em>Note: This is a basic form of insert functionality so some default functionality like CTRL+Z may break.</em></p>