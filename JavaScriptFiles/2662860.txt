JavaScript Templating Engine
<p>I would like to create <strong>universal</strong> templating engine in JavaScript, how to?</p> <p><strong>HTML template</strong></p> <pre><code>&lt;h1&gt;&lt;%title1%&gt;&lt;/h1&gt; &lt;h2&gt;&lt;%title2%&gt;&lt;/h2&gt; </code></pre> <p><strong>JSON file</strong></p> <pre><code>{ "title1" : "Hello World!", "title2" : "Hi World!" } </code></pre> <p><strong>Javascript</strong></p> <ul> <li>Find in HTML file &lt;%title1%></li> <li>Find in JSON file variable "title1"</li> <li>Replace &lt;%title1%> with value of variable "title1"</li> </ul> <p>Same for &lt;%title2%></p> <p>Thanks!</p>
<p>John Resig <a href="http://ejohn.org/blog/javascript-micro-templating/" rel="nofollow noreferrer">Micro-Templating</a> is cool solution</p>
<p>Have a look at <a href="http://wiki.github.com/nje/jquery/jquery-templates-proposal" rel="nofollow noreferrer">this article</a>. It discusses a proposal (by microsoft) how support for templates could be added to the jQuery library.</p> <p>In the same article you will also find an overview of some already existing template solutions (maybe you'll find something that matches your needs, instead of re-inventing the wheel).</p> <p><strong>Update (2012-07-23):</strong></p> <p>The jQuery templates project was abandoned more than a year ago. It seems that <a href="http://www.borismoore.com/" rel="nofollow noreferrer">Boris Moore</a> continues his work with the new projects <a href="https://github.com/BorisMoore/jsrender" rel="nofollow noreferrer">jsrender</a> and <a href="https://github.com/BorisMoore/jsviews" rel="nofollow noreferrer">jsviews</a>.</p>
<p>You might want to have a look at my jQuery templating plugin <a href="http://aefxx.com/jquery-plugins/jqote2/" rel="nofollow noreferrer">jQote2</a>. As far as usability and speed is concerned, I have yet to see a better templating solution (trust me, I've tried them all).</p> <p>It has a built in closure compiler that let's you precompile your templates (handy if you want to keep your templates in .js files) and a caching mechanism. The current version also comes with a couple of convenient methods that ease the pain of appending/prepending/replacing DOM nodes.</p> <p>Give it a try, you won't regret it. Regards</p>