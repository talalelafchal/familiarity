Remove a semicolon in a string by JavaScript
<p>How can I remove the semicolon (<code>;</code>) from a string by using JavaScript?</p> <p>For example:</p> <pre><code>var str = '&lt;div id="confirmMsg" style="margin-top: -5px;"&gt;' </code></pre> <p>How can I remove the semicolon from <code>str</code>?</p>
<p>You can use the <code>replace</code> method of the string object. Here is what <a href="http://en.wikipedia.org/wiki/W3Schools" rel="nofollow noreferrer">W3Schools</a> says about it: <em><a href="http://www.w3schools.com/jsref/jsref_replace.asp" rel="nofollow noreferrer">JavaScript replace()</a></em>.</p> <p>In your case you could do something like the following:</p> <pre><code>str = str.replace(";", ""); </code></pre> <p>You can also use a regular expression:</p> <pre><code>str = str.replace(/;/g, ""); </code></pre> <p>This will replace all semicolons globally. If you wish to replace just the first instance you would remove the <code>g</code> from the first parameter.</p>
<p>Try:</p> <pre><code>str = str.replace(/;/ig,''); </code></pre>
<p>Try this:</p> <pre><code>str = str.replace(/;/g, ""); </code></pre> <p>This will remove all semicolons in <code>str</code> and assign the result back to <code>str</code>.</p>
<pre><code>str = str.replace(";", ""); </code></pre>
<p>Depending upon exactly why you need to do this, you need to be cautious of edge cases:</p> <p>For instance, what if your string is this (contains two semicolons):</p> <pre><code>'&lt;div id="confirmMsg" style="margin-top: -5px; margin-bottom: 5px;"&gt;' </code></pre> <p>Any solution like</p> <pre><code> str.replace(";", ""); </code></pre> <p>will give you:</p> <pre><code>'&lt;div id="confirmMsg" style="margin-top: -5px margin-bottom: 5px"&gt;' </code></pre> <p>which is invalid.</p> <p>In this situation you're better off doing this:</p> <pre><code> str.replace(";\"", "\""); </code></pre> <p>which will only replace ;" at the end of the style string.</p> <p>In addition I wouldn't worry about removing it anyway. It shouldn't matter - unless you have already determined that for your situation it does matter for some obscure reason. It's more likely to lead to hard-to-debug problems later if you try to get too clever in a situation like this.</p>