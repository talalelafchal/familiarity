how to check 2 decimals? E.g. 2.2.10
<p>how to check 2 decimals in javascript? E.g. 2.2.10</p>
<p>If you want to check whether your string contains only digits and dots, with a trailing number, here is a regexp :</p> <pre><code>if(myString.match(/^[\d\.]*\d$/)) { // passes the test } "2".match(/^[\d\.]*\d$/) // true "2.2".match(/^[\d\.]*\d$/) // true "2.2.10".match(/^[\d\.]*\d$/) // true ".2".match(/^[\d\.]*\d$/) // true "2.".match(/^[\d\.]*\d$/) // FALSE "fubar".match(/^[\d\.]*\d$/) // FALSE </code></pre>
<p>You have to treat it as a string (it isn't a number) and a regular expression is probably the easiest way to achieve this:</p> <pre><code>'2.2.10'.match(/^\d+\.\d+\.\d+$/); </code></pre> <p>Alternatively, if you assume that everything else is a digit anyway:</p> <pre><code>'2.d2.10'.split('.').length === 3 </code></pre>
<p>If you're trying to determine whether version A is before version B, you could do something like this:</p> <pre><code>// Assumes "low" numbers of tokens and each token &lt; 1000 function unversion(s) { var tokens = s.split('.'); var total = 0; $.each(tokens, function(i, token) { total += Number(token) * Math.pow(0.001, i); }); return total; } // that version b is after version a function isAfter(a, b) { return unversion(a) &lt; unversion(b); } </code></pre>