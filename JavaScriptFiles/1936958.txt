how compare two static function are equal or not in javascript
<p>how to compare two static functions in javascript equal or not equal?</p>
<pre><code>String(f1) === String(f2) </code></pre>
<pre><code>var f1 = f2 = function( a ){ return a; }; </code></pre> <p>here, you can use <code>f1 === f2</code> because they're pointing to the same memory and they're the same type</p> <pre><code>var f1 = function( a ){ return a; }, f2 = function( a ){ return a; }; </code></pre> <p>here you can use that byte-saver Andy E used (which is implicitly converting the function to it's body's text as a String),</p> <p><code>''+f1 == ''+f2</code>.</p> <p>this is the gist of what is happening behind the scences:</p> <pre><code>f1.toString( ) == f2.toString( ) </code></pre> <hr> <p><strong>Edit: Looking back on this post over a year after, I agree with @kangax - you should probably never do this.</strong></p>
<p>Whenever I need to compare functions I make sure there is no scope ambiguity and use the same function object.</p> <p>Say I have some a pair of library functions that take a callback as one of the parameters. For the sake of this example <code>create1minuteCallback</code> function will set a 1 minute timer and call the callback on each tick. <code>kill1minuteCallback</code> will turn off the callback and you must pass the same callback function as you did for <code>create1minuteCallback</code>.</p> <pre><code>function create1minuteCallback(callback){ //implementation } function kill1minuteCallback(callback){ //implementation } </code></pre> <p>Quite clearly this will not work as the function we are passing is different on the second line:</p> <pre><code>create1minuteCallback(function(){alert("1 minute callback is called");}); kill1minuteCallback(function(){alert("1 minute callback is called");}); </code></pre> <p>I normally do this:</p> <pre><code>function callbackFunc(){alert("1 minute callback is called");} create1minuteCallback(callbackFunc); kill1minuteCallback(callbackFunc); </code></pre>
<p>Well, as simply as that - if you are going to compare functions, you do it for a reason I assume. What is your reason? My reason was to not run a certain function twice. I did it this way (just snippet code to get the idea)</p> <pre><code> var x = function(){ console.error("i am a functionX"); } var y = function(){ console.error("i am a functionX"); } var z = function(){ console.error("i am a functionZ"); } var x2= x; var obj = new Object(); obj[x] = ""; obj[x2] = ""; obj[y] = ""; obj[z] = ""; obj.abc = "xaxa"; for (prop in obj) { if (obj.hasOwnProperty(prop)) { console.error(obj[prop] + " hello " + prop); } } </code></pre> <p>Function x and y are the same, even though they have different whitespaces. x and y are not the same as z, since z has a different console.error. <a href="http://jsbin.com/uderet/1/edit" rel="nofollow">Btw open your firebug console to see it in the jsbin example</a></p>