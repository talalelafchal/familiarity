Help me understand JavaScript events
<p>I have a table full of cells and i would like to get on which cell the mouse is. </p> <p>For this i have attached events to all the cells and then i am finding the elements. But i guess there could be a better options. right ?</p> <p>Is it possible that i attach only single event handler on top and still be able to catch all the information. like which cell user is currently on etc.</p> <p>Something like below,</p> <pre><code>&lt;table onMouseOver="monitorFuntion(event)" &gt;...&lt;/table&gt; </code></pre>
<p>It's possible to do <em>exactly</em> what you said: You can put a handler on the table, and then find the cell from that. (This is sometimes called "<a href="http://www.sitepoint.com/blogs/2008/07/23/javascript-event-delegation-is-easier-than-you-think/" rel="nofollow noreferrer">event delegation</a>".) You can do this for some events, including <code>mouseover</code> and <code>mouseout</code>, because they <a href="http://en.wikipedia.org/wiki/DOM_events#Event_flow" rel="nofollow noreferrer"><em>bubble</em></a>. You can't do it for other events (like <code>blur</code> or <code>focus</code>) because they don't bubble.</p> <p>Suppose you have a table with the ID "myTable". You can hook up an event handler for <code>mouseover</code>:</p> <pre><code>var table = document.getElementById("myTable"); if (table.attachEvent) { table.attachEvent("onmouseover", handleMouseOver); } else { table.addEventListener("mouseover", handleMouseOver); } </code></pre> <p>And then handle it like this:</p> <pre><code>function handleMouseOver(event) { var target; // Handle IE event difference from standard event = event || window.event; // Find out what element the event actually happened on // (Another IE difference here, srcElement vs target) target = event.srcElement || event.target; // Since that might be an element *within* your cell (like // a link, or a `span`, or a `strong`, etc.), find the cell while (target &amp;&amp; target.tagName != "TD" &amp;&amp; target.tagName != 'BODY') { target = target.parentNode; } if (target &amp;&amp; target.tagName != 'BODY') { // Found one, `target` now points to the cell the mouse is over } } </code></pre> <p>Note that it's important you handle the case where <code>target</code> ends up being <code>null</code> or referring to the <code>body</code> element, because you'll get this event over the table's borders, row padding, etc.</p> <p>Javascript libraries can help you with this a <em>lot</em>. For instance, the above using <a href="http://prototypejs.org" rel="nofollow noreferrer">Prototype</a> looks like this:</p> <pre><code>$("myTable").observe("mouseover", handleMouseOver); function handleMouseOver(event) { var target; target = event.findElement("td"); if (target) { // ... } } </code></pre> <p><a href="http://jquery.com" rel="nofollow noreferrer">jQuery</a>, <a href="http://code.google.com/closure/library" rel="nofollow noreferrer">Closure</a>, and others will similarly help quite a bit.</p>
<p>Yes, you can do exactly that, and then use the event object to find the element. The event object differs between IE and other browsers, but getting the "target" is about the same:</p> <pre><code> function handler(ev) { ev = ev || window.event; var targetElement = ('target' in ev) ? ev.target : ev.srcElement; // ... } </code></pre> <p>Now not <em>all</em> events will "bubble up" for you, but I <em>think</em> that the mouse events do. The problems are mostly with "change". Frameworks like jQuery or Prototype generally try to give you more normalized behavior.</p> <p><strong>edit</strong> fixed for IE compatibility</p>
<p>Based on the code snippet you posted you are looking for event delegation.</p> <p>Step 1: use <a href="http://jquery.com/" rel="nofollow noreferrer">jQuery 1.4.2</a> +</p> <p>Step 2:</p> <pre><code>// you can use move, enter, out, over whatever... $("table").delegate("mouseenter", "td", click, function(){ var tableCell = $(this); // the cell which is currently moused-over. }); </code></pre>