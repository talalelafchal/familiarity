With javascript, is it possible to define a variable's name with another string value?
<p>Example, I have an array called 'categories' with the value ['4','9']. I'm trying to use that value with the name of a previously defined array. I have several arrays defined earlier called row1, row2, row3 etc. I'm also using jQuery.</p> <p>Trying to do something like this:</p> <pre><code>for (i=0; i&lt;categories.length; i++) { row+categories[i].push($(this).attr('id')); console.log(row+categories[i]); } </code></pre> <p>Obviously row+categories[i] doesn't work, but maybe gives you an idea of what I'm trying to do? In this case to push that id value onto the array 'row4' the first time it loops through and then 'row9' the second time.</p> <p>Thanks for your help!!</p>
<p>You can use eval(), even if i don't like it personnaly...</p> <pre><code>for (i=0; i&lt;categories.length; i++) { eval("row" + categories[i] + ".push($(this).attr('id'))"); console.log(eval("row" + categories[i])); } </code></pre>
<p>do you want a global or local variable? (the code below uses global variables)</p> <pre><code>var rowVar; for (i=0; i&lt;categories.length; i++) { rowVar = "row"+categories[i]; window[rowVar].push($(this).attr('id')); console.log(window[rowVar]); } </code></pre>
<p>Rather than defining multiple row1, row2, row3 etc., why not define a single rows variable that contains multiple arrays?</p> <pre><code>var rows = [[], [], []]; var categories = ['4', '9']; for (i = 0; i &lt; categories.length; i++) { rows[categories[i]].push($(this).attr('id')); console.log(rows[categories[i]]); } </code></pre> <p>It could even be an object with properties if that makes sense in your situation:</p> <pre><code>var rows = { row1: [], row2: [], row3: [], getRow: function(index) { return this["row" + index]; } }; var categories = ['4', '9']; for (i = 0; i &lt; categories.length; i++) { rows.getRow(categories[i]).push($(this).attr('id')); console.log(rows.getRow(categories[i])); } </code></pre>