Where do I find a good explanation of Javascript-ese
<p>I realize that title may require explanation.</p> <p>The language I first learned was C, and it shows in all my programs... even those not written in C. For example, when I first learned F# I wrote my F# programs like C programs. It wasn't until someone explained the pipe operator and mapping with anonymous functions that I started to understand the F#-ese, how to write F# like a F# programmer and not a C programmer.</p> <p>Now I've written a little javascript, mostly basic stuff using jquery, but I was hoping there was a good resource where I could learn to write javascript programs like a javascript programmer.</p>
<p>I would also recommend "Secrets of a JavaScript Ninja" by John Resig. It will be out in July this year and would definitely be an excellent resource.</p> <p>Else, Douglas Crockford "JavaScript:The good parts" is excellent.</p>
<p>The more you work with JavaScript/jQuery - especially working with other people's code - the more of the style you will pick up. I recommend reading though the documentation on the jQuery website and maybe picking up a book on Javascript. Then just keep working with it. Also, make sure you keep looking at other people's code - read through the source code of some of the jQuery plugins you are using, and seek out examples online for 'best practices'.</p>
<p>The book <em>Pro Javascript Design Patterns</em> is a great resource:<br> <a href="http://jsdesignpatterns.com/" rel="nofollow noreferrer">http://jsdesignpatterns.com/</a></p>
<p><a href="http://en.wikipedia.org/wiki/Douglas_Crockford" rel="nofollow noreferrer">Douglas Crockford's</a> - <a href="http://javascript.crockford.com/code.html" rel="nofollow noreferrer">Code Conventions for the JavaScript Programming Language</a> would be a good place to start.</p> <p>I learned a lot of useful information in regards to code convention through his <a href="http://video.yahoo.com/watch/111593/1710507" rel="nofollow noreferrer">video tutorials</a>, which I suggest viewing. I posted the link to the first video out of the four in the series. </p> <p>Also, as suggested by <a href="http://stackoverflow.com/questions/2512713/where-do-i-find-a-good-explanation-of-javascript-ese/2512727#2512727">Ben</a>, (<em>which is a book I would also highly recommend</em>) is Douglas Crockford's book <a href="http://rads.stackoverflow.com/amzn/click/0596517742" rel="nofollow noreferrer">JavaScript: The Good Parts</a></p> <p>If you want to find good explanations on jQuery, check out the creator, lead developer and fellow <a href="http://stackoverflow.com/users/6524/john-resig">StackOverflower</a> <a href="http://ejohn.org/" rel="nofollow noreferrer">John Resig's website/personal blog</a>.</p>
<p>I really like this article: <a href="https://developer.mozilla.org/en/A_re-introduction_to_JavaScript" rel="nofollow noreferrer">A re-introduction to JavaScript</a></p>
<p>First off, start using JSLint on all your code, for at least a week (<a href="http://www.jslint.com" rel="nofollow noreferrer">http://www.jslint.com</a>). I'm not going to say you should use it constantly, forever and ever, and it's perfect, because it's not. But, it will help you learn <em>a lot</em> about JavaScript, if you take the time to read what it says, and understand why. Even if you disagree, which you may, understand the reasoning behind each message. Then you can decide if it's a tool you'd like to continue using.</p> <p>The other first step is to pick up a copy of <em>JavaScript: The Good Parts</em>. This is by far the best book on JavaScript. It's short, very easy to read, and really will help you learn better JavaScript. <a href="http://oreilly.com/catalog/9780596517748" rel="nofollow noreferrer">http://oreilly.com/catalog/9780596517748</a></p> <p>Other than that, there are a lot of good blogs to follow. You can find these via google, but I'd look at <em>Perfection Kills</em> and John Resig's blog, in particular. I think mine is pretty good too, you can find it via my profile if you're interested :)</p>
<p><a href="http://eloquentjavascript.net/" rel="nofollow noreferrer">http://eloquentjavascript.net/</a></p> <p>It may be a little wordy, but it gives you some excellent examples that will stick with ya.</p>
<p>Javascript has functional programming roots.<br/>That makes a big difference compared to the OO world.</p> <p>Here are some links that helped me jump the fence:</p> <p>A simple explanation:<br/> <a href="http://www.joelonsoftware.com/items/2006/08/01.html" rel="nofollow noreferrer">http://www.joelonsoftware.com/items/2006/08/01.html</a></p> <p>A deeper one:<br/> <a href="http://www.hunlock.com/blogs/Functional_Javascript" rel="nofollow noreferrer">http://www.hunlock.com/blogs/Functional_Javascript</a></p> <p>Read/debug the code of this library:<br/> <a href="http://osteele.com/archives/2007/07/functional-javascript" rel="nofollow noreferrer">http://osteele.com/archives/2007/07/functional-javascript</a></p> <p>You can read/debug the source code of <a href="http://beebole.com/pure" rel="nofollow noreferrer">PURE</a>, a JS templating engine we wrote.<br/>The 2nd version was totally rewritten in functional JS.</p>