issue in  javascript in checkboxlist 
<p>this is my Javascript which behaves like an Radiobutton. where user can select only 1 option at a time (ex: <strong>if he select item1 and selects item2 then item1 gets deselected,</strong> as he as selected item2 if he clicks again on item2 it gets deselected.) which make user either select any one item or deselect the selected item to</p> <p><strong>this condition works fine</strong><br> <strong>issue</strong> i have an button in page once user clicks that button again if user selects any item[eg item1 is selected before clicking on the button. then after clicking the button. and now if we selected any item in checkboxlist the initially selected item1 is not getting deselected when i am selecting another item in check boxlist </p> <p>below is my code</p> <pre><code>var objChkd; function HandleOnCheck() { var chkLst = document.getElementById('CheckBoxList1'); if(objChkd &amp;&amp; objChkd.checked) objChkd.checked=false;objChkd = event.srcElement; } </code></pre> <p>and register the client event to the 'CheckBoxList1' at the Page_load as </p> <pre><code>CheckBoxList1.Attributes.Add("onclick","return HandleOnCheck()"); </code></pre> <p>in .cs file i don't want to do this CheckBoxList1.clearSelection();</p> <p>any help would be great </p> <p>thank you</p>
<p>Your problem is clear but not specific enough. But let's try to find out together the solution.</p> <p>In case when you trying to check or uncheck the previous item, I would advice you to use onclick handlers at "ListItem"'s classes and not at the list itself. (Imagine that someone clicks next to the list-item, so your state will be incorrect); </p> <p>This also gives you the freedom in not depending anymore on browser compatibilities, like window.event or event, or whatever. You will get your node as the parameter to the function.</p> <pre><code>ListItem1.Attributes.Add("onclick","return HandleOnCheck(this)"); ListItem2.Attributes.Add("onclick","return HandleOnCheck(this)"); </code></pre> <p>Also, try to eliminate the use of the hardcoded id's inside you HandleOnCheck function. </p> <p>Next, you could better save your Item state inside the function scope and not outside it. You can do this by assigning argument to the function itself, like this:</p> <pre><code>HandleOnCheck.selectedItem = someNode; </code></pre> <p>So, the complete code is: </p> <pre><code>function HandleOnCheck(node) { var oldNode = HandleOnCheck.selectedItem; if(oldNode) { oldNode.checked = false; } HandleOnCheck.selectedItem = node; } </code></pre> <p>And handler part :</p> <pre><code>ListItem1.Attributes.Add("onclick","return HandleOnCheck(this)"); ListItem2.Attributes.Add("onclick","return HandleOnCheck(this)"); </code></pre> <p>This should help.</p>