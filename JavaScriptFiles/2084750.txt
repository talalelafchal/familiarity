javascript anchor avoid scroll to top on click
<p>I created a function in javascript that i add to an anchor as such </p> <p>javascript :</p> <pre><code>somefunction = function () {alert('foo')} </code></pre> <p>html :</p> <pre><code>&lt;a href="#" onclick="return somefunction()"&gt;anchor&lt;/a&gt; </code></pre> <p>everytime i click on the anchor the function executes but the screen scrolls to the top</p> <p>I know i could do this </p> <pre><code>&lt;a href="javascript:void(0)" onclick="return somefunction()"&gt;anchor&lt;/a&gt; </code></pre> <p>but I have seen the first option implemented without this hick up of scrolling up</p> <p>is there any trick to it?</p> <p>thank you</p>
<p>The onclick causes the page to resubmit, therefore scrolling to the top.</p> <p>You need the onclick event to return a false in order to avoid the postback.</p> <p>This can be done by changing your function to return a false:</p> <pre><code>somefunction = function () {alert('foo'); return false;} </code></pre> <p>Or to change the link and onClick event to do so:</p> <pre><code>&lt;a href="javascript:void(0)" onclick="somefunction(); return false;"&gt;anchor&lt;/a&gt; </code></pre>
<p>Return <code>false</code> from your onclick handler, e.g.:</p> <pre><code>&lt;a href="#" onclick="somefunction(); return false;"&gt;anchor&lt;/a&gt; </code></pre>
<p>You need to make <code>somefunction()</code> return <code>false</code>, or you need to explicitly add <code>return false</code> to your <code>onclick</code> handler. For example:</p> <pre><code>&lt;a href="#" onclick="somefunction(); return false;"&gt;anchor&lt;/a&gt; </code></pre> <p>This will have the browser ignore the <code>href</code> portion of the link when someone clicks on it.</p>
<p>The trick is that your onclick returns the value of <code>somefunction</code>, so that if you make sure <code>somefunction</code> always <code>return false</code>, then the event will return false as well, and cancel the default behavior of the anchor.</p> <p>So this should solve your problem:</p> <pre><code>somefunction = function () { alert('foo'); return false; } </code></pre> <p>But I should mention that when there is an error somewhere in <code>somefunction</code>, the rest of the javascript will not execute, and the browser will still follow the link to <code>#</code>. It is advisable, therefore, to use <code>javascript:void(0)</code> instead, as this will rid you of that problem.</p>