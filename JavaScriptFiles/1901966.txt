How to Create a Cloud Chart?
<p>I've seen these charts referred to as tag clouds, task clouds, and cloud charts, but can anyone recommend a pure JavaScript (no Flash please) library or utility with which one can generate cloud charts? Many thanks.</p>
<p>You could easily do it with your CMS and css</p> <pre><code>&lt;div class=".cloud"&gt; &lt;a href="#" class="weight-1"&gt;Cloud&lt;/a&gt; &lt;a href="#" class="weight-2"&gt;Cloud&lt;/a&gt; &lt;/div&gt; </code></pre> <p>css:</p> <pre><code>.cloud .weight-1 { font-size: 10px; } .cloud .weight-2 { font-size: 15px; } </code></pre> <p>Your CMS would generate the weights and apply the appropriate styling.</p>
<p>I would check out timecloud. Uses jQuery, here is the github page:</p> <p><a href="http://github.com/stef/timecloud" rel="nofollow noreferrer">http://github.com/stef/timecloud</a></p> <p>Another good one that uses jQuery, DynaCloud:</p> <p><a href="http://johannburkard.de/blog/programming/javascript/dynacloud-a-dynamic-javascript-tag-keyword-cloud-with-jquery.html" rel="nofollow noreferrer">http://johannburkard.de/blog/programming/javascript/dynacloud-a-dynamic-javascript-tag-keyword-cloud-with-jquery.html</a></p>
<p>For a library independent JavaScript solution check:</p> <ul> <li><a href="http://code.google.com/p/tagcloud/" rel="nofollow noreferrer">tagCloud</a>: JavaScript TagCloud Generator</li> </ul> <p>I uploaded 2 demos:</p> <ul> <li><a href="http://jsbin.com/ehoxo" rel="nofollow noreferrer">Basic</a></li> <li><a href="http://jsbin.com/urine3" rel="nofollow noreferrer">Search</a></li> </ul>
<p>So far the one @CMS recommended is working for me, but FYI here are two more I have just looked at, but not tried out.</p> <ul> <li><a href="http://code.google.com/p/jquery-tagcloud/" rel="nofollow">http://code.google.com/p/jquery-tagcloud/</a> (has a basic <a href="http://code.google.com/p/jquery-tagcloud/wiki/APIDoc" rel="nofollow">api doc</a>)</li> <li><a href="http://plugins.jquery.com/project/TagCloud" rel="nofollow">http://plugins.jquery.com/project/TagCloud</a></li> </ul>
<p>Worth looking at these D3 based examples as well:</p> <ul> <li><a href="https://github.com/jasondavies/d3-cloud" rel="nofollow">https://github.com/jasondavies/d3-cloud</a></li> <li><a href="http://bl.ocks.org/yaph/5913997" rel="nofollow">http://bl.ocks.org/yaph/5913997</a></li> </ul>
<p>I found this jQuery library recently: <a href="http://addywaddy.github.io/jquery.tagcloud.js/" rel="nofollow">http://addywaddy.github.io/jquery.tagcloud.js/</a></p>
<p>There is <a href="http://i2ui.com" rel="nofollow">i2ui</a> for such task:</p> <pre><code> &lt;div data-i2="css:[{fontSize:'8px',color:'#888888'},{fontSize:'30px',color:'#000000'}]"&gt; &lt;span data-i2="rate:1"&gt;Alaska&lt;/span&gt; &lt;span data-i2="rate:4"&gt;Arizona&lt;/span&gt; &lt;span data-i2="rate:7"&gt;Arkansas&lt;/span&gt; &lt;span data-i2="rate:12"&gt;California&lt;/span&gt; &lt;span data-i2="rate:5"&gt;Colorado&lt;/span&gt; &lt;span data-i2="rate:8"&gt;Connecticut&lt;/span&gt; &lt;span data-i2="rate:3"&gt;Delaware&lt;/span&gt; &lt;span data-i2="rate:6"&gt;Florida&lt;/span&gt; &lt;/div&gt; </code></pre> <p>Call JavaScript after HTML have been loaded:</p> <pre><code>i2.emph(); </code></pre> <p>See demo: <a href="http://jsfiddle.net/7GcKT/4/" rel="nofollow">http://jsfiddle.net/7GcKT/4/</a></p>
<p>Quoting <a href="http://www.bennybottema.com/2016/03/02/showcase-your-skillset-with-an-interactive-colorful-d3-js-tag-cloud/" rel="nofollow noreferrer">"Showcase your skillset with an interactive colorful D3.js tag cloud"</a>, here's a working example of how to create such a cloud. It is based on <a href="https://github.com/jasondavies/d3-cloud" rel="nofollow noreferrer">Jason Davies' cloud layout</a> calculation script (in turn inspired by <a href="http://www.wordle.net/" rel="nofollow noreferrer">Wordle</a>) which is used to drive <a href="https://d3js.org/" rel="nofollow noreferrer">D3.js</a> for drawing the cloud.</p> <p><a href="https://i.stack.imgur.com/YBq2o.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/YBq2o.png" alt="enter image description here"></a></p> <p>You can see working sample embedded below and also in <a href="https://jsfiddle.net/plantface/g6faeurj/" rel="nofollow noreferrer">jsfiddle</a>.</p> <p>The entire example can be found on GitHub at: <a href="https://github.com/bbottema/d3-tag-skills-cloud" rel="nofollow noreferrer">https://github.com/bbottema/d3-tag-skills-cloud</a></p> <hr> <p><strong>First</strong> define your cloud data, using <code>text</code> and <code>size</code> properties:</p> <pre><code>var skillsToDraw = [ { text: 'javascript', size: 80 }, { text: 'D3.js', size: 30 }, { text: 'coffeescript', size: 50 }, { text: 'shaving sheep', size: 50 }, { text: 'AngularJS', size: 60 }, { text: 'Ruby', size: 60 }, { text: 'ECMAScript', size: 30 }, { text: 'Actionscript', size: 20 }, { text: 'Linux', size: 40 }, { text: 'C++', size: 40 }, { text: 'C#', size: 50 }, { text: 'JAVA', size: 76 } ]; </code></pre> <p><strong>Next</strong> you need to use the layout script to calculate the placement, rotation and size of each word:</p> <pre><code>d3.layout.cloud() .size([width, height]) .words(skillsToDraw) .rotate(function() { return ~~(Math.random() * 2) * 90; }) .font("Impact") .fontSize(function(d) { return d.size; }) .on("end", drawSkillCloud) .start(); </code></pre> <p><strong>Finally</strong> implement <code>drawSkillCloud</code>, which performs the D3 drawing:</p> <pre><code>// apply D3.js drawing API function drawSkillCloud(words) { d3.select("#cloud").append("svg") .attr("width", width) .attr("height", height) .append("g") .attr("transform", "translate(" + ~~(width / 2) + "," + ~~(height / 2) + ")") .selectAll("text") .data(words) .enter().append("text") .style("font-size", function(d) { return d.size + "px"; }) .style("-webkit-touch-callout", "none") .style("-webkit-user-select", "none") .style("-khtml-user-select", "none") .style("-moz-user-select", "none") .style("-ms-user-select", "none") .style("user-select", "none") .style("cursor", "default") .style("font-family", "Impact") .style("fill", function(d, i) { return fill(i); }) .attr("text-anchor", "middle") .attr("transform", function(d) { return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")"; }) .text(function(d) { return d.text; }); } </code></pre> <p>That's the basic. You can influence the size and which angles are used for picking random rotations as well as some padding between words if you wish and color fill, but these are the basics!</p> <p>See it at work in the snippet (or <a href="https://jsfiddle.net/plantface/g6faeurj/" rel="nofollow noreferrer">jsfiddle</a>):</p> <p><div class="snippet" data-lang="js" data-hide="true" data-console="false" data-babel="false"> <div class="snippet-code snippet-currently-hidden"> <pre class="snippet-code-js lang-js prettyprint-override"><code>// First define your cloud data, using `text` and `size` properties: var skillsToDraw = [ { text: 'javascript', size: 40 }, { text: 'D3.js', size: 15 }, { text: 'coffeescript', size: 25 }, { text: 'shaving sheep', size: 25 }, { text: 'AngularJS', size: 30 }, { text: 'Ruby', size: 30 }, { text: 'ECMAScript', size: 15 }, { text: 'Actionscript', size: 10 }, { text: 'Linux', size: 20 }, { text: 'C++', size: 20 }, { text: 'C#', size: 25 }, { text: 'JAVA', size: 38 }, // just copy data and reduce size, else the cloud is a little boring { text: 'javascript', size: 40 }, { text: 'D3.js', size: 15 }, { text: 'coffeescript', size: 25 }, { text: 'shaving sheep', size: 25 }, { text: 'AngularJS', size: 30 }, { text: 'Ruby', size: 30 }, { text: 'ECMAScript', size: 15 }, { text: 'Actionscript', size: 10 }, { text: 'Linux', size: 20 }, { text: 'C++', size: 20 }, { text: 'C#', size: 25 }, { text: 'JAVA', size: 38 }, { text: 'javascript', size: 40 }, { text: 'D3.js', size: 15 }, { text: 'coffeescript', size: 25 }, { text: 'shaving sheep', size: 25 }, { text: 'AngularJS', size: 30 }, { text: 'Ruby', size: 30 }, { text: 'ECMAScript', size: 15 }, { text: 'Actionscript', size: 10 }, { text: 'Linux', size: 20 }, { text: 'C++', size: 20 }, { text: 'C#', size: 25 }, { text: 'JAVA', size: 38 } ]; // Next you need to use the layout script to calculate the placement, rotation and size of each word: var width = 500; var height = 500; var fill = d3.scale.category20(); d3.layout.cloud() .size([width, height]) .words(skillsToDraw) .rotate(function() { return ~~(Math.random() * 2) * 90; }) .font("Impact") .fontSize(function(d) { return d.size; }) .on("end", drawSkillCloud) .start(); // Finally implement `drawSkillCloud`, which performs the D3 drawing: // apply D3.js drawing API function drawSkillCloud(words) { d3.select("#cloud").append("svg") .attr("width", width) .attr("height", height) .append("g") .attr("transform", "translate(" + ~~(width / 2) + "," + ~~(height / 2) + ")") .selectAll("text") .data(words) .enter().append("text") .style("font-size", function(d) { return d.size + "px"; }) .style("-webkit-touch-callout", "none") .style("-webkit-user-select", "none") .style("-khtml-user-select", "none") .style("-moz-user-select", "none") .style("-ms-user-select", "none") .style("user-select", "none") .style("cursor", "default") .style("font-family", "Impact") .style("fill", function(d, i) { return fill(i); }) .attr("text-anchor", "middle") .attr("transform", function(d) { return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")"; }) .text(function(d) { return d.text; }); } // optional: set the viewbox to content bounding box (zooming in on the content, effectively trimming whitespace) var svg = document.getElementsByTagName("svg")[0]; var bbox = svg.getBBox(); var viewBox = [bbox.x, bbox.y, bbox.width, bbox.height].join(" "); svg.setAttribute("viewBox", viewBox);</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js"&gt;&lt;/script&gt; &lt;script src="https://cdn.rawgit.com/jasondavies/d3-cloud/v1.2.1/build/d3.layout.cloud.js"&gt;&lt;/script&gt; &lt;div id="cloud"&gt;&lt;/div&gt;</code></pre> </div> </div> </p> <p>You can read a more in-depth introduction followed by a more advanced approach over at <a href="http://www.bennybottema.com/2016/03/02/showcase-your-skillset-with-an-interactive-colorful-d3-js-tag-cloud/" rel="nofollow noreferrer">"Showcase your skillset with an interactive colorful D3.js tag cloud"</a>. Checkout a sample project over at <a href="https://github.com/bbottema/d3-tag-skills-cloud" rel="nofollow noreferrer">https://github.com/bbottema/d3-tag-skills-cloud</a>.</p>