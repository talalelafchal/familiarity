Get page url using javascript
<p>Could someone recommend a way to get page name from a url using JavaScript?</p> <p>For instance if I have: </p> <pre><code>http://www.cnn.com/news/1234/news.html?a=1&amp;b=2&amp;c=3 </code></pre> <p>I just need to get "news.html" string</p> <p>Thanks!</p>
<pre><code>var url = "http://www.cnn.com/news/1234/news.html?a=1&amp;b=2&amp;c=3"; url = url.replace(/^.*\//, "").replace(/\?.*$/, ""); </code></pre> <p>You can substitute <code>url</code> with <code>window.location</code></p>
<p>I think it's</p> <pre><code>window.location.pathname.replace(/^.*\/([^/]*)/, "$1"); </code></pre> <p>So, </p> <pre><code>var pageTitle = window.location.pathname.replace(/^.*\/([^/]*)/, "$1"); </code></pre>
<p>You can do this pretty easily via <code>window.location.pathname</code> parsing:</p> <pre><code>var file, n; file = window.location.pathname; n = file.lastIndexOf('/'); if (n &gt;= 0) { file = file.substring(n + 1); } alert(file); </code></pre> <p>...or as others have said, you can do it with a regexp in one line. One kinda dense-looking line, but with a comment above it, should be a good way to go.</p>
<p>You might want to also find file paths on a local disk, and you might not want to include any hash or get strings in the path-</p> <pre><code>String.prototype.fileName= function(){ var f, s= this.split(/[#\?]/, 1)[0].replace(/\\/g,'/'); s= s.substring(s.lastIndexOf('/')+ 1); f= /^(([^\.]+)(\.\w+)?)/.exec(s) || []; return f[1] || ''; } </code></pre>