How do I write my script for each link I want to redirect
<p>So I'm trying to redirect users from html links and element id tags, to other pages with javascript. I've figured out how to do one singular redirect but having trouble writing the code for multiple links heres what I have so far:</p> <p>HTML: </p> <pre><code>&lt;head&gt; &lt;script type = "text/javascript" src="script2.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;a href="nickname.html" id="redirect1"&gt;NickName&lt;/a&gt; &lt;a href="salestax.html" id="redirect"&gt;Salestax&lt;/a&gt; &lt;a href="http://www.w3schools.com" id="redirect2"&gt;W 3 Schools&lt;/a&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>My external script so far for just one link:</p> <pre><code>window.onload = initAll; function initAll() { document.getElementById("redirect").onclick = initRedirect; } function initRedirect() { confirm("Go to Salestax page?"); window.location="salestax.html"; return false; { </code></pre> <p>Do I just crank out more functions and change the location value, getElementById value and the onclick value?</p>
<p>A far better approach would be to do something like the below - that way the logic for redirecting the user stays reasonably close to the link, and so people looking at the source wont become incredibly confused when the page takes people elsewhere.</p> <pre><code>&lt;a href="nickname.html" id="redirect1" onclick="return initRedirect('Go to Salestax page?', 'nickname.html');"&gt;Some link&lt;/a&gt; </code></pre> <p>External script:</p> <pre><code>function initRedirect(message, url) { confirm(message); window.location = url; return false; } </code></pre>
<p>A nice thing about onclick events is that if you return false it'll stop the browser from going to the link defined in the HREF. If you return true it'll keep going through with the navigation. You don't need to worry about the window.location in your function if you use this method, which will simplify things a lot. So you can just do:</p> <pre><code>&lt;a href="salestax.html" onclick="return confirm('Go to Salestax page?');"&gt;Salestax&lt;/a&gt; </code></pre> <p>I'll prompt them if they want to continue. They click yes it'll keep going as if they clicked the link normally, they click no it'll stop them from navigating away. This way you don't have to duplicate the link's HREF in both your HTML and javascript.</p> <p>You could still dynamically bind this, but if you're doing it by ID I don't really see any advantage vs just defining the onclick in the HTML.</p>
<p>First off, unless you're trying to prevent a user from losing changes that they've made on the current page, it's not clear why you would want to create this functionality. But at any rate, here's a standard/basic approach:</p> <pre><code>window.onload = function() { document.getElementById("redirect").onclick = redirectConfirmation("Go to Salestax page?"); document.getElementById("redirect1").onclick = redirectConfirmation("Go to Nickname?"); }; redirectConfirmation = function(msg, urlOverride) { return function() { if ( confirm(msg) ) { window.location = urlOverride || this.href || "#" } return false; }; }; </code></pre> <p><code>redirectConfirmation</code> optionally takes a second parameter which can be used to explicitly set the url that the page is redirected to; otherwise, it will default to the URL specified by the <code>href</code> attribute of the anchor tag being acted upon (and if all else fails, it will fail gracefully with "#").</p> <p>If you're using a common library, like jQuery, you can simplify your event registration as follows:</p> <pre><code>$(function() { $("#redirect").click( redirectConfirmation("Go to Salestax page?") ); $("#redirect1").click( redirectConfirmation("Go to Nickname?") ); }); </code></pre>