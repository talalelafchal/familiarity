Write value from prompt box in document
<p>When visitors visit my page, I want them to prompted with a box, ask their name, and use that name in text. I created a script like this:</p> <pre><code>function askname() { var x=prompt("What is your name?",""); } </code></pre> <p>I placed that script between the head tags. Then, I write <code>&lt;body onload="askname()"&gt;</code>. The box prompted successfully. Now, I want to use that 'x' in text. First, I just wrote</p> <pre><code>&lt;script type="text/javascript"&gt;document.write(x)&lt;/script&gt; </code></pre> <p>But it does not work at all! Is there another method to do this? I plan to not using any javascript library, though. So I beg your help. Sorry if this is kind of stupid question, I'm newbie in JS. And sorry for my bad english, too...</p>
<p><code>var x</code> is local to the <code>askname</code> function. you want <code>document.write(prompt("what is your name?", ""))</code></p>
<p>It's bad practice to use <code>document.write</code>, besides if you invoke it after the document has loaded it will overwrite it. innerHTML would be suitable here since this is a relatively simple task, if you get into more complex things you should use DOM methods, create elements and populate the nodeValue property.</p> <p>It's also a bad practice to use inline event handlers and inline JS, you should separate the two, I would place this in an external script so it's actually cached, nevermind my code sample since it's just a sample but that's how it should be done on a real page.</p> <pre><code>&lt;body&gt; &lt;div id="message"&gt;&lt;/div&gt; &lt;script&gt; window.onload = function() { var name = prompt('What is your name?', ''); if ( name ) { document.getElementById('message').innerHTML = name; } } &lt;/script&gt; &lt;/body&gt; </code></pre>
<p>There are two problems with your script. One is that the <code>x</code> variable is local to the function, so that when you exit the function the string is gone. The other problem is that the <code>document.write</code> is executed before the function, so even if the variable worked as intended, it would not be assigned yet.</p> <p>Instead of a script writing out the name, put an element with an identifier:</p> <pre><code>&lt;span id="name"&gt;&lt;/span&gt; </code></pre> <p>In the function, you put the name in the element after getting it from the user:</p> <pre><code>function askname() { var x = prompt("What is your name?",""); document.getElementById('name').innerHTML = x; } </code></pre>
<p>In addition to meder and Guffa's problems, there is yet one more!</p> <p>Namely: <code>prompt</code> doesn't work any more in IE7+. For security reasons, according to Microsoft, but they're pretty much totally spurious. Either way, <code>window.prompt</code> is effectively dead. If you want to accept input from the user you will have to make your own on-page form and attach a click handler to the submission to take the value of name.</p> <p>There are a number of libraries that provide a way to do this that looks a bit like <code>prompt</code>, but they can never be a drop-in replacement because the synchronous nature of <code>prompt</code> cannot be reproduced in event-driven JavaScript.</p>
<p>Instead of a <code>prompt</code>, I'd suggest doing something a bit more DOM like this:</p> <p><code>&lt;input type="text" id="textinput"&gt;</code></p> <p><code>&lt;input type="button" value="OK" onClick="document.getElementById('txtarea').innerHTML=document.getElementById('textinput').value;"&gt;</code></p> <p><code>&lt;span id="txtarea"&gt;&lt;/span&gt;</code></p> <p>You could also use a <code>&lt;div&gt;</code> around the input elements and when you click the button have that <code>&lt;div&gt;</code> disappear with <code>document.getElementById('inputdiv').style.display = 'none';</code></p> <p>Good Luck!!!!!!</p>