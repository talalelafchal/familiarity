Manipulating row data with Javascript
<p>I have a specific question, I have a link in a table in the third column of each row, when the user clicks that link he loads some ajax and updates the page, what I want to also happen is that in the 2nd column of the row where the link is, change the td's class from false to true, and the value from No to Yes.</p> <p>Thanks!</p> <p><strong>Update! Code Example:</strong></p> <p>The 2nd column still doesn't get updated on click, perhaps this is because the div where the table is located gets hidden onclick? Anyways here's what I've tried:</p> <pre><code>&lt;tr&gt; &lt;td&gt;00839&lt;/td&gt; &lt;td class="false" style="text-align:left;"&gt;No&lt;/td&gt; &lt;td&gt; &lt;a href="#" onclick="Element.hide('ajax-instruction-view');; new Ajax.Updater('ajax-instruction-view', '/tasks/show_ajax/839', {asynchronous:true, evalScripts:true, onComplete:function(request){new Effect.Appear(&amp;quot;ajax-instruction-view&amp;quot;,{});window.scrollTo(0,0); link = $(link); var row = link.up('tr'); var cell = row.down('td').next('td'); cell.update('Yes');}, parameters: 'authenticity_token='encodeURIComponent('SYWsdBTWlz17u9HmPXA2R9WmBfZn67g/IAMGyhHEwXw=')}); return false;" &gt; Instructions-Notice Board &lt;/a&gt; &lt;/td&gt; &lt;td&gt;19/04/10&lt;/td&gt; &lt;td class="false"&gt;21/04/10&lt;/td&gt; &lt;td class="false" style="text-align:left;"&gt;None.&lt;/td&gt; &lt;/tr&gt; </code></pre>
<p>I dont recall how to write it in Scriptaculous but in jQuery it would be:</p> <pre><code>$(element).click(function(){ // invoke your ajax routine // change class $($(this).parent('tr').children().get(1)).attr('class', 'my-classname'); }); </code></pre> <p>Maybe someone can translate :-)</p>
<p>It sounds as though at some point, you have a reference to the link the user clicked (either because you have a <code>click</code> handler on it or because you're using event delegation and finding it after a click on the table). Starting with a reference to that link, you can use Prototype's DOM traversal stuff to find the second table cell:</p> <p><strong>Edit</strong> Based on your response to rahul, I would change your link <code>onclick</code> to:</p> <pre><code>onclick="handleLinkClick(this); return false;" </code></pre> <p>...and this would be <code>handleLinkClick</code>:</p> <pre><code>function handleLinkClick(link) { // Original code (mostly unchanged) Element.hide('currentdiv'); new Ajax.Updater('someajax', 'ajax.html', { asynchronous:true, evalScripts:true, onComplete: function(request) { new Effect.Appear("newdiv",{}); window.scrollTo(0,0); // New code starts here // Extend the link element link = $(link); // Find the row var row = link.up('tr'); // Find the second column var cell = row.down('td').next('td'); // Change the cell's "class" and "value" -- I've had to guess a bit at // what you want to do here if (cell.hasClassName("true")) { cell.removeClassName("true").addClassName("false"); cell.update("No"); } else { cell.removeClassName("false").addClassName("true"); cell.update("Yes"); } // End of new code }, parameters:'authenticity_token=' + encodeURIComponent('SYWsdBTWlz17u9HmPXA2R9WmBfZn67g/IAMGyhHEwXw=') }); } </code></pre> <p>That uses <code>Element#up</code>, <code>Element#next</code>, <code>Element#hasClassName</code>, <code>Element#addClassName</code>, <code>Element#removeClassName</code>, and <code>Element#update</code>; docs for them <a href="http://api.prototypejs.org/dom/element/" rel="nofollow noreferrer">here</a>.</p> <p>Optional things to consider:</p> <ul> <li>The above is fragile in that if you change the location of that cell (make it the third column rather than the second), it fails. You might use a marker class to find it.</li> <li>Rather than an <code>onclick</code> attribute, you could use <code>Element#observe</code>.</li> <li>You can use event delegation to have just one handler on the table, rather than a handler on each link.</li> </ul> <p>But the above should work.</p>