Reduce multiple ORs in IF statement in Javascript
<p>Is there a simpler way to rewrite the following condition in JavaScript?</p> <pre><code>if ((x == 1) || (x == 3) || (x == 4) || (x == 17) || (x == 80)) {...} </code></pre>
<pre><code>switch (x) { case 1: case 3: case 4: case 17: case 80: //code break; default: //code } </code></pre>
<p>You could use an array of valid values and test it with <a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/indexOf" rel="nofollow noreferrer"><code>indexOf</code></a>:</p> <pre><code>if ([1, 3, 4, 17, 80].indexOf(x) != -1) </code></pre> <hr> <p><strong>Edit</strong>    Note that <code>indexOf</code> was just added in ECMAScript 5 and thus is not implemented in every browser. But you can use the <a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/indexOf#Compatibility" rel="nofollow noreferrer">following code</a> to add it if missing:</p> <pre><code>if (!Array.prototype.indexOf) { Array.prototype.indexOf = function(elt /*, from*/) { var len = this.length &gt;&gt;&gt; 0; var from = Number(arguments[1]) || 0; from = (from &lt; 0) ? Math.ceil(from) : Math.floor(from); if (from &lt; 0) from += len; for (; from &lt; len; from++) { if (from in this &amp;&amp; this[from] === elt) return from; } return -1; }; } </code></pre> <p>Or, if you’re already using a JavaScript framework, you can also use its implementation of that method.</p>
<p>many options</p> <pre><code>if ([0, 1, 3, 4, 17, 80].indexOf(x) &gt; 0) if(/^(1|3|4|17|80)$/.test(x)) if($.inArray(x, [1, 3, 4, 17, 80]) </code></pre> <p>another one, based on <a href="http://stackoverflow.com/questions/2630364/reduce-multiple-ors-in-if-statement-in-javascript/2630827#2630827">Ed's answer</a></p> <pre><code>function list() { for (var i = 0, o = {}; i &lt; arguments.length; i++) o[arguments[i]] = ''; return o; } if(x in list(1, 3, 4, 17, 80))... </code></pre>
<p>You can optimize your own example and get rid of a few characters, making it easier on the eyes..:</p> <pre><code>if (x == 1 || x == 3 || x == 4 || x == 17 || x == 80) { ... } </code></pre>
<p>This is a little function I found somewhere on the web:</p> <pre><code>function oc(a) { var o = {}; for (var i = 0; i &lt; a.length; i++) { o[a[i]] = ''; } return o; } </code></pre> <p>Used like this:</p> <pre><code>if (x in oc(1, 3, 4, 17, 80)) {...} </code></pre> <p>I'm using it for strings myself; haven't tried with numbers, but I guess it would work.</p>
<p>a regular expression test uses the string value of x:</p> <pre><code>if(/^[134]|17|80$/.test(x)){/*...*/} </code></pre>