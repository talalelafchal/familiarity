Is it really not possible to add actions to this shortened if statement in js?
<pre><code>(category=="Villor/Radhus mm")?byId("nav_sub_villor").style.display='block' : byId("nav_sub_villor").style.display='none'; </code></pre> <p>I would like to call a function if the statement above is true...</p> <p>But it doesn't seem possible...</p> <p>Just want to be sure it is not possible, does anybody know?</p>
<p>Sure you can:</p> <pre><code>function doIfTrue() { byId("nav_sub_villor").style.display='block'; // call other function } function doIfFalse() { byId("nav_sub_villor").style.display='none'; } (category=="Villor/Radhus mm") ? doIfTrue() : doIfFalse(); </code></pre> <p>Note that an expression something like <code>condition ? statement; statement : statement;</code> is illegal in JS.</p> <p>However if you really need to keep it a one-liner, you can push it all into an anonymous function:</p> <pre><code>(category=="Villor/Radhus mm") ? function() { byId("nav_sub_villor").style.display='block'; doOtherStuff();}() : byId("nav_sub_villor").style.display='none'; </code></pre>
<p>You can have multiple statements or function calls in this ternary statement. To call another function if true, just add it before or after the first section where you set the display to 'block'.</p>
<p>Why would you want to shorten an if statement in that way? You're just going to give headaches to the next person to come along and maintain it.</p> <pre><code>if (category=="Villor/Radhus mm") byId("nav_sub_villor").style.display='block'; else byId("nav_sub_villor").style.display='none'; </code></pre>
<p>It is possible. You can wrap your code inside an anonymous function and immediately call it. For instance, this one first alerts <code>I'm in a function</code> and then alerts <code>1</code> </p> <pre><code>var i=1; var a = (i==1) ? (function(){alert("I'm in a function"); return 1})() : (function(){return 2})(); alert(a); </code></pre> <p>EDIT: Sorry, this is named self-invoking function, see here: <a href="http://www.hunlock.com/blogs/Functional_Javascript" rel="nofollow noreferrer">http://www.hunlock.com/blogs/Functional_Javascript</a></p>