get and set selected value
<p><strong>REFRASE QUESTION :</strong></p> <p>I have 6 selects. When I select value from select1 I invoke some function from server side and I get JSON array from that function.</p> <p>I get 5 values at most from this array, sometimes I'll get 20,30,40,50,60 but sometimes 20,30 or just 20.</p> <p>These values correspond to select2, select3, select4, select5, select6 option value index. So in case the array returns 20,30,40,50,60 -> select2 option index value should be set to 20, select3 to 30 etc. And if array returns just 20 then select2 index value should be set to 20 and all others index values to 0.</p> <p>What is the best way to do this? </p> <p>Thank you</p>
<pre><code>//get var sel1Index = document.getElementById("select1").selectedIndex; //just in case you want the selected text too var sel1Text = document.getElementById("select1").options[selectedIndex].text; //set document.getElementById("select2").selectedIndex = sel1Index; </code></pre>
<pre><code>var s1 = document.getElementById("select1"); var s2 = document.getElementById("select2"); s2.selectedIndex = s1.selectedIndex; </code></pre> <p>Or, if you want it to happen when the first <code>&lt;select&gt;</code> is changed:</p> <pre><code>s1.onchange = function() { s2.selectedIndex = s1.selectedIndex; }; </code></pre>
<p>To get a value, or the index of the selected value, these work:</p> <pre><code>document.getElementById("select1").value; document.getElementByID("select2").selectedIndex; </code></pre> <p>To set a value, use the same, but assign:</p> <pre><code>document.getElementById("select1").value = "whatever"; document.getElementById("select2").selectedIndex = 3; </code></pre> <p>Because your list values are disimilar, I assume you want to use the index; ie, selecting "one" in select1 would cause select2 to change to "seven", etc.</p> <p>You could do that using: </p> <pre><code>document.getElementById("select2").selectedIndex = document.getElementById("select1").selectedIndex; </code></pre> <p>If you want one list to change when the other changes, effectively keeping them in sync, you can bind functions to the select's "onchange":</p> <pre><code>&lt;script type="text/javascript&gt; function select1_onchange() { document.getElementById("select2").selectedIndex = document.getElementById(select1").selectedIndex; } function select2_onchange() { document.getElementById("select1").selectedIndex = document.getElementById(select2").selectedIndex; } &lt;/script&gt; &lt;select name="select1" id="select1" onchange="select1_onchange"&gt; ... &lt;select name="select2" id="select2" onchange="select2_onchange"&gt; ... </code></pre>