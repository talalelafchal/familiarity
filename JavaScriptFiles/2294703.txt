Multidimensional Array cloning using javascript
<p>I want to make a clone of multidimensional Array so that i can play arround with the clone array without affecting main Array.i m using following function to do so,</p> <pre><code>Array.prototype.clone = function () { var newArray = new Array(this.length); for(var i=0; i &lt; this.length; i++ ){ newArray[i] = this[i]; } return newArray; }; </code></pre> <p>But problem which is since it is using array prototype so it will clone my all array.so can any body tell me what is the best way of doing this.</p>
<p>You need to use recursion</p> <pre><code>var a = [1,2,[3,4,[5,6]]]; Array.prototype.clone = function() { var arr = []; for( var i = 0; i &lt; this.length; i++ ) { // if( this[i].constructor == this.constructor ) { if( this[i].clone ) { //recursion arr[i] = this[i].clone(); break; } arr[i] = this[i]; } return arr; } var b = a.clone() console.log(a); console.log(b); b[2][0] = 'a'; console.log(a); console.log(b); /* [1, 2, [3, 4, [5, 6]]] [1, 2, [3, 4, [5, 6]]] [1, 2, [3, 4, [5, 6]]] [1, 2, ["a", 4, [5, 6]]] */ </code></pre> <p>Any other objects in the original array will be copied by reference though</p>
<p>I found that this approach is better than meouw's :</p> <pre><code>var a = [[1,2],[3,4,[5,6]]]; Array.prototype.clone = function() { var isArr = function(elm){ return String(elm.constructor).match(/array/i) ? true : false; } var cloner = function(arr){ var arr2 = arr.slice(0), len = arr2.length; for(var i=0; i &lt; len; i++){ if( isArr(arr2[i]) ) arr2[i]=cloner( arr2[i] ); } return arr2; } return cloner(this); } var b = a.clone(); a[0][0] = 'a'; console.dir(a); console.dir(b); </code></pre>
<p>vsync is correct, my first answer doesn't handle <code>var a = [[1,2],[3,4]];</code><br> So here's an improved version</p> <pre><code>var a = [[1,2],[3,4]]; Array.prototype.clone = function() { var arr = this.slice(0); for( var i = 0; i &lt; this.length; i++ ) { if( this[i].clone ) { //recursion arr[i] = this[i].clone(); } } return arr; } var b = a.clone() console.log(a); console.log(b); b[1][0] = 'a'; console.log(a); console.log(b); //[[1, 2], [3, 4]] //[[1, 2], [3, 4]] //[[1, 2], [3, 4]] //[[1, 2], ["a", 4]] </code></pre>