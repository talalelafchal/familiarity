Method that passes options to its object
<p>In JavaScript I'd like to take an object and pass a parameter to it and based on the parameter have a method that will pass settings to the parameter:</p> <pre><code>functionName( parameter , settings ); </code></pre> <p>Or</p> <pre><code>functionName( parameter ).methodName( settings ); </code></pre> <p>example: for my iPhone web app setup I do heavy('setup',{ icon: 'icon.png' }); and I want to move the second parameter to a method: heavy('setup').settings({ icon: 'icon.png' }); for my ease and learning...</p>
<p>Well you have not given any decent details on what exactly you want to do , but from what I understand you need to return a common object (In most cases a class). The object that is returned needs to implement the method that you want to call as well. </p> <p>The simplest example I can think of is the <a href="http://jquery.com/" rel="nofollow noreferrer">jQuery</a> library , they use a very similiar model </p>
<p>maybe you mean something like this:</p> <pre><code>function lite(type){ heavy(type, { icon: 'ico.png' }); } //lite('setup') </code></pre> <p>or something like this</p> <pre><code>function getHeavy(obj){ return function(type){ heavy(type, obj); } }; var icoFn = getHeavy({icon:'ico.png'}); icoFn('setup'); var poopFn = getHeavy({icon:'poop.png'}); poopFn('setup'); </code></pre>
<p>Do you mean something like this?</p> <pre><code>heavy = function() { var _settings; return { setup: function (settings){ this._settings = settings; }, getSetting: function (settingName) { if(this._settings[settingName]) { return this._settings[settingName]; } return "Setting not found"; } }; }(); heavy.setup({"icon":"myicon.png"}); alert(heavy.getSetting("icon")); </code></pre>