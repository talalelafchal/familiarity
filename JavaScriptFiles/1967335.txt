Remove mysterious &lt;TextNode textContent=&quot;\n &quot;&gt; with javaScript
<p>I've got a div with two children, one <code>&lt;h2&gt;</code> and one <code>&lt;ul&gt;</code>. </p> <p>My problem is that when I check .length of my div, by doing <code>document.getElementById('wrap').childNodes.length</code>, I get 5 instead of 2. And if I run <code>console.log</code> on <code>childNodes</code> I get this:</p> <pre><code>[&lt;TextNode textContent="\n "&gt;, h2, &lt;TextNode textContent="\n "&gt;, ul, &lt;TextNode textContent="\n "&gt;] </code></pre> <p>My HTML looks like this:</p> <pre><code>&lt;div id="wrap"&gt; &lt;h2&gt;Lorem&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Lorem&lt;/li&gt; &lt;li&gt;Ipsum&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; </code></pre> <p>Indenting my code has never before affected the length of the childNodes. </p> <p>If I type everything on one row (as one long word) I get rid of all <code>&lt;TextNode&gt;</code> and it counts to 2 as it should and not 5. </p> <p>I've got no idea what's wrong, but I figured I need to remove all empty textnodes. Which way would be the best to do this?</p> <p>Thanks heaps </p> <p>Ps. These <code>&lt;TextNode textContent="\n "&gt;</code> occurs all over the document, so I need to remove them all, not only in this particular div.</p>
<p>Firefox, right? <a href="http://www.javascriptkit.com/domref/nodetype.shtml" rel="nofollow noreferrer">Firefox will treat whitespace as a textnode</a>. There's nothing you can do about it apart from code around them. Or, you could completely get rid of all whitespace, but I'm betting that's not an option. It's part of what makes writing webpages so, er, fun :-)</p>
<p>You don't have to remove any extra text nodes (although there are time when you should - for performance reasons). You should always check for the NodeType when viewing the property ChildNodes.</p> <p>Here is a link that should help:</p> <p><a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247" rel="nofollow noreferrer">http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247</a></p> <p>EDIT:</p> <p>Here is a page that has some prototype code that should help:</p> <p><a href="http://v3.thewatchmakerproject.com/journal/329/finding-html-elements-using-javascript-nextsibling-and-previoussibling" rel="nofollow noreferrer">http://v3.thewatchmakerproject.com/journal/329/finding-html-elements-using-javascript-nextsibling-and-previoussibling</a></p> <p>Here is the code from the link above:</p> <pre><code>Object.prototype.nextObject = function() { var n = this; do n = n.nextSibling; while (n &amp;&amp; n.nodeType != 1); return n; } Object.prototype.previousObject = function() { var p = this; do p = p.previousSibling; while (p &amp;&amp; p.nodeType != 1); return p; } </code></pre>
<p>with plain old js, this would be </p> <pre><code> function removeEmptyTextNodes(elem){ var children = elem.childNodes; var child; var len = children.length; var i = 0; var whitespace = /^\s*$/; for(; i &lt; len; i++){ child = children[i]; if(child.nodeType == 3){ if(whitespace.test(child.nodeValue)){ elem.removeChild(child); i--; len--; } }else if(child.nodeType == 1){ removeEmptyTextNodes(child); } } } removeEmptyTextNodes(document.body); </code></pre>
<p>I hope it help:</p> <pre class="lang-js prettyprint-override"><code>var listOfNodes=document.getElementById('parentNodeId'); nodeCount=0 for(i=0; i&lt;listOfNodes.childNodes.length;i++){ if(listOfNodes.childNodes[i].id != undefined){ console.log(listOfNodes.childNodes[i].id) nodeCount++ } } alert(nodeCount) </code></pre>
<p><code>childNodes</code> will include text nodes, and particularly empty ones.</p> <p>I always use the <code>children</code> array, as this only counts elements and not text nodes.</p>