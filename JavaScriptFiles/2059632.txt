Javascript: Validate that each combo box selection is unique
<p>I have five combo boxes. Each one has a different name, but the possible values for each are the same: 1-5. I would like to use Javascript to validate two things:</p> <ol> <li><p>that each value is selected only once. For example, if the value of "cboCircle" is "1" then the value of "cboSquiggle" cannot be 1, and so on. </p></li> <li><p>that each selected value is used (i.e. that 1, 2, 3, 4, and 5 have all been chosen.)</p></li> </ol> <p>Essentially, these values are supposed to act as a ranking system for the combo boxes, in a rough sort of way... </p> <p>Anyone know how I might be able to accomplish this?</p> <p>NOTE: I'm new to JS. Thanks! </p> <pre><code>&lt;head&gt; &lt;script language="javascript"&gt; function submitSurvey(recID) { var msg = ""; if ( (document.form.cboCircle.value=="0") || (document.form.cboSquiggle.value=="0") || (document.form.cboRectangle.value=="0") || (document.form.cboSquare.value=="0") || (document.form.cboTriangle.value=="0") ) { msg += "Please select a value for each combo box.\n"; } if (msg == "") { document.getElementById("txtRecID").value = recID; form.action = "post.asp"; form.submit(); } else { alert (msg); } } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;form name="form" id="form" method="post"&gt; &lt;table&gt; &lt;table width="99%"&gt; &lt;tr&gt; &lt;td width="29%" bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt;&lt;img name="circle" src="../images/circle.jpg" width="158" height="146" alt=""&gt;&lt;/p&gt; &lt;/td&gt; &lt;td width="35%" bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt;&lt;img name="squiggle" src="../images/squiggle.jpg" width="204" height="155" alt=""&gt;&lt;/p&gt; &lt;/td&gt; &lt;td width="36%" bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt;&lt;img name="rectangle" src="../images/rectangle.jpg" width="216" height="122" alt=""&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt; &lt;select name="cboCircle" id="cboCircle"&gt; &lt;% If RS("shapePrimary") = "Circle" Then %&gt; &lt;option value="1" selected&gt;1&lt;/option&gt; &lt;% Else %&gt; &lt;option value="0"&gt;&lt;/option&gt; &lt;option value="1"&gt;1&lt;/option&gt; &lt;option value="2"&gt;2&lt;/option&gt; &lt;option value="3"&gt;3&lt;/option&gt; &lt;option value="4"&gt;4&lt;/option&gt; &lt;option value="5"&gt;5&lt;/option&gt; &lt;% End If %&gt; &lt;/select&gt; &lt;/p&gt; &lt;/td&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt; &lt;select name="cboSquiggle" id="cboSquiggle"&gt; &lt;% If RS("shapePrimary") = "Squiggle" Then %&gt; &lt;option value="1" selected&gt;1&lt;/option&gt; &lt;% Else %&gt; &lt;option value="0"&gt;&lt;/option&gt; &lt;option value="1"&gt;1&lt;/option&gt; &lt;option value="2"&gt;2&lt;/option&gt; &lt;option value="3"&gt;3&lt;/option&gt; &lt;option value="4"&gt;4&lt;/option&gt; &lt;option value="5"&gt;5&lt;/option&gt; &lt;% End If %&gt; &lt;/select&gt; &lt;/p&gt; &lt;/td&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt; &lt;select name="cboRectangle" id="cboRectangle"&gt; &lt;% If RS("shapePrimary") = "Rectangle" Then %&gt; &lt;option value="1" selected&gt;1&lt;/option&gt; &lt;% Else %&gt; &lt;option value="0"&gt;&lt;/option&gt; &lt;option value="1"&gt;1&lt;/option&gt; &lt;option value="2"&gt;2&lt;/option&gt; &lt;option value="3"&gt;3&lt;/option&gt; &lt;option value="4"&gt;4&lt;/option&gt; &lt;option value="5"&gt;5&lt;/option&gt; &lt;% End If %&gt; &lt;/select&gt; &lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt;&lt;img name="square" src="../images/square.jpg" width="141" height="143" alt=""&gt;&lt;/p&gt; &lt;/td&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt;&lt;img src="../images/triangle.jpg" alt="" name="triangle" width="226" height="167" id="triangle2"&gt;&lt;/p&gt; &lt;/td&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt; &lt;select name="cboSquare" id="cboSquare"&gt; &lt;% If RS("shapePrimary") = "Square" Then %&gt; &lt;option value="1" selected&gt;1&lt;/option&gt; &lt;% Else %&gt; &lt;option value="0"&gt;&lt;/option&gt; &lt;option value="1"&gt;1&lt;/option&gt; &lt;option value="2"&gt;2&lt;/option&gt; &lt;option value="3"&gt;3&lt;/option&gt; &lt;option value="4"&gt;4&lt;/option&gt; &lt;option value="5"&gt;5&lt;/option&gt; &lt;% End If %&gt; &lt;/select&gt; &lt;/p&gt; &lt;/td&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt; &lt;p align="center"&gt; &lt;select name="cboTriangle" id="cboTriangle"&gt; &lt;% If RS("shapePrimary") = "Triangle" Then %&gt; &lt;option value="1" selected&gt;1&lt;/option&gt; &lt;% Else %&gt; &lt;option value="0"&gt;&lt;/option&gt; &lt;option value="1"&gt;1&lt;/option&gt; &lt;option value="2"&gt;2&lt;/option&gt; &lt;option value="3"&gt;3&lt;/option&gt; &lt;option value="4"&gt;4&lt;/option&gt; &lt;option value="5"&gt;5&lt;/option&gt; &lt;% End If %&gt; &lt;/select&gt; &lt;/p&gt; &lt;/td&gt; &lt;td bordercolor="#FFFFFF" bgcolor="#FFFFFF"&gt;&amp;nbsp;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;table width="99%" border="1" cellpadding="0" cellspacing="0" bordercolor="#FFFFFF" class="WebApps"&gt; &lt;tr&gt; &lt;td width="100%"&gt; &lt;p align="left"&gt; &lt;input name="btnSubmit" type="button" class="button" id="btnSubmit" value="Submit Survey" onClick="submitSurvey('&lt;%= RS("recID")%&gt;');"&gt; &lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>
<p>This would probably be better handled with radio buttons than combo boxes. You'd have to reverse the way you are thinking about the problem (for each ranking, select a value instead of selecting a ranking for each value), but it better fits what you are trying to do.</p>
<pre><code>function checkThem(){ //returns true or false - your caller can do the alert/submit var cbNames = ["cboCircle","cboSquiggle","cboRectangle","cboSquare","cboTriangle"]; var valsTaken = []; for (var i = 0; i &lt; cbNames.length; i++) { var idx = document.form[cbNames[i]].selectedIndex; if (idx == 0 || valsTaken[idx]) return false; //not selected or already found valsTaken[idx] = true; } return true; //if we got to here, all is right with the world.... } </code></pre> <p>I'm sure there are other (possibly simpler) ways to do this, but the above should work... All it's doing is keeping a record of whether something has already been selected, in <code>valsTaken</code> and returning false if it's already been taken or is 0</p> <p>Edit: original poster wants separate messages depending on selected/not selected. Try this:</p> <pre><code>function checkThem(){ //returns {unselected: i} or {selectedTwice: idx} var cbNames = ["cboCircle","cboSquiggle","cboRectangle","cboSquare","cboTriangle"]; var valsTaken = []; for (var i = 0; i &lt; cbNames.length; i++) { var idx = document.form[cbNames[i]].selectedIndex; if (idx == 0) return { unselected: cbNames[i] }; if (valsTaken[idx]) return { selectedTwice: idx }; valsTaken[idx] = true; } return {ok: true}; //if we got to here, all is right with the world.... } var rsltObj = checkThem(); if (rsltObj.unselected) { alert(rsltObj.unselected + " not selected"); } else if (rsltObj.selectedTwice) { alert(rsltObj.selectedTwice + " has been selected twice"); } else { alert("Ok"); } </code></pre> <p>Please note that this second example is probably not the best code - I've just done this as quickly as I could </p>
<p>I improved a bit your code for easier future changes and added function which will compare if values are the same in combo boxes or not. </p> <p>Two differences: First one. The function which checks your comboboxes for 0, now supports also empty value. Imagine you would like to change your captions of the options in the to the '' instead of 0. </p> <p>The second change is that, isTwice function not only checks for numbers, but it compares strings. It is made for the same reason. In case you would like to check if there some option with the same word selected twice. </p> <pre><code>function isEmpty(nodes){ for(var i=0; i&lt;nodes.length; i++){ var node = nodes[i]; var option = node.options[node.selectedIndex]; if(!option.value){ return true; } } return false; } function isTwice(nodes){ var map = {}; for(var i=0; i&lt;nodes.length; i++){ var node = nodes[i]; var option = node.options[node.selectedIndex]; var value = option.value; if(map[value]){ return true; } map[value] = true; } return false; } function getNodesByIds(ids){ var result = []; for(var i=0; i&lt; ids.length; i++){ var node = document.getElementById(ids[i]); node &amp;&amp; (result.push(node)); } return result; } function submitSurvey(recID){ var nodes = getNodesByIds([ "cboCircle", "cboSquiggle", "cboRectangle", "cboSquare", "cboTriangle" ]); if(isEmpty(nodes)){ alert("Please select a value for each combo box."); }else if(isTwice(nodes)){ alert("Values of the combo boxes should not be the same"); }else{ var form = document.getElementById("form"); var txtNode = document.getElementById("txtRecID"). txtNode.value = recID; form.action = "post.asp"; form.submit(); } } </code></pre>