JavaScript: If var statements are executed first, then why does this not work?
<p>I tried the following in JavaScript (Firefox 3.5, Windows XP):</p> <pre><code>(function(){ window.foobar = 'Welcome!'; })(); var foobar = 'PWN3D!'; alert(foobar); </code></pre> <p>The output was 'PWN3D!'. Why did my code PWN me? I thought <code>var name = value;</code> executed first.</p>
<p>I'm not sure what you mean by <code>var</code> statements being executed first. The code you have written looks to be working exactly as I would have expected:</p> <ul> <li>An anonymous function is created</li> <li>The anonymous function is executed, which sets <code>foobar</code> to "Welcome!"</li> <li>The <code>foobar</code> variable is set to "PWN3D!"</li> <li>An alert box is raised with the current value of <code>foobar</code>, "PWN3D!"</li> </ul>
<p>Your alert statement sees the local variable, foobar and alerts its value as it is higher on the scope chain than window.foobar.</p>
<p>From the <a href="http://www.ecma-international.org/publications/standards/ecma-262.htm" rel="nofollow noreferrer">specification</a> (page 87):</p> <blockquote> <p>A variable with an Initialiser is assigned the value of its AssignmentExpression when the VariableStatement is executed, not when the variable is created.</p> </blockquote> <p>So the <code>var</code> causes the variable to be created first, but the value (<code>'PWN3D!'</code>) is assigned to it in the normal execution order.</p>