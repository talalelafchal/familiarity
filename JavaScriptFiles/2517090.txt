JavaScript - Remove everything after &lt;/html&gt; tag
<p>Can anyone tell me how to write javascript code that removes everything after the html tag.</p> <p>I have the following file:</p> <pre><code>&lt;html&gt; &lt;head&gt; &lt;script&gt; // my script &lt;/script&gt; &lt;/head&gt; &lt;body&gt; Some text &lt;/body&gt; &lt;/html&gt; &lt;script&gt; &lt;/script&gt; </code></pre> <p>Rendered output must not contain the last script (or any other) tag.</p>
<p>The problem is that in the DOM, outside of HTML there is nothing. Your closing <code>&lt;/html&gt;</code> gets moved to account for the badly formatted HTML. Here is how <a href="http://en.wikipedia.org/wiki/Firebug_%28Firefox_extension%29" rel="nofollow noreferrer">firebug</a> shows your example.</p> <p><img src="https://i.imgur.com/pCaAGl.png" alt="In firebug"></p> <p>This means that from javascript, there is no way to know <em>which</em> markup was after the html.</p>
<p>This code waits for the page to load and then removes all tags after the <code>&lt;/html&gt;</code> try it with firebug and you will see. You need to create a place holder as such in this example <code>&lt;div id="last"&gt;&lt;/div&gt;</code> after your last tag and then it removes the rest of the tags.</p> <pre><code>&lt;html&gt; &lt;head&gt; &lt;script type="text/javascript"&gt; window.onload=function() { var body=document.getElementsByTagName('body')[0]; var found=false; var cur=0; for(var i=0; i&lt;body.childNodes.length; i++) { if(body.childNodes[i].id=='last') { cur=i; found=true; } else if(found &amp;&amp; i&gt;cur+1) { body.removeChild(body.childNodes[i]); } } } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; Some text &lt;div id="last"&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; &lt;p&gt; Im not gonna show &lt;/p&gt; &lt;input/&gt; &lt;script&gt; &lt;/script&gt; &lt;b&gt; &lt;/b&gt; </code></pre> <p>Don't forget to scroll! Enjoy! </p> <p>Oddly enought the formating of code here is not functioning right. Its probably my fault.</p> <p>Edit renamed my variable to <code>body</code></p>
<pre><code> document.close(); document.open(); document.write("&lt;html&gt;&lt;/html&gt;"); </code></pre>
<p>&#160;&#160;&#160;&#160;&#160;Trackers are usually added during the transfer to the client-side by the website server.<br/> They place their code like this:<br/><br/>&#160;&#160;&#160;&#160;&#160;<b>&#60;/html></b><i>&#60;script>(function tracker(){In Here})&#60;/script></i><br/><br/>The browser changes it to this:<br/><br/> &#160;&#160;&#160;&#160;&#160;<i>&#60;script>(function tracker(){In Here})&#60;/script><br/>&#160;&#160;</i><b>&#60;/body><br/>&#60;/html></b><br/><hr>So if you just put &#60;!-- after the &#60;/html> so it looks like this, shown below with the tracker added<br/><br/> &#60;/html><b>&#60;!--</b><i>&#60;script>(function tracker(){In Here})&#60;/script></i><br/><br/>The browser will changes it all to a comment by adding the closing tag:<br/><br/>&#60;/html><b>&#60;!--</b><i>&#60;script>function tracker(){In Here}&#60;/script></i><b>--></b><br/><br/><i>The tracker script just becomes a comment and stay&#39;s outside the html where it will not function!</i><hr>This is the reason why some code can be after the website&#39;s last tag!<br/><br/> Why block it? 1 tracker can bring in hundreds if they want! All on the client&#39;s-side internet connection! Where your code gets blamed for the third party actions!<hr>If you want to use Javascript to delete the code put an opening tag for a div and give it an ID also add the opening comment tag like this:<br/><br/><b>&#60;/html>&#60;div id='deleteThis'>&#60;!--</b><i>&#60;script>function tracker(){In Here}&#60;/script></i><br/><br/>The browser changes it by closing the comment and div tags:<br/><br/>&#160;&#160;&#160;&#160;&#160;<b>&#60;div id='deleteThis'></b><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<b>&#60;!--</b><i>&#60;script>(function tracker(){In Here})&#60;/script></i><b>--></b><br/>&#160;&#160;&#160;&#160;&#160;<b>&#60;/div></b><br/><b>&#60;/body></b><br/><b>&#60;/html></b><br/><br/>Tracker-Script should not function but still add in your script-code:<br/><br/>function deleteTracker(){ document.getElementByID('deleteThis').innerHTML="";}<br/><br/> Run as soon as possible, so you should add to the body tag! &#60;body onload='deleteTracker()'><br/>Everything inside the div will be deleted!</p>