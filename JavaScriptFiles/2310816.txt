Disabling All Form Elements In Selected Div (edited)
<p>I have one large form that is separated into different sections with divs. Each section is within the same form (bigform) and I need to make sure only one section is enabled/editable at a time. And if the user changes sections after entering data into one section, all data would be cleared from the old section before disabling it. The ideal way for me is to have something like this:</p> <pre><code>&lt;form&gt; &lt;select name="selector"&gt; &lt;option&gt;Choose Which Div To Enable&lt;/option&gt; &lt;option value='1'&gt;One&lt;/option&gt; &lt;option value='2'&gt;Two&lt;/option&gt; &lt;option value='3'&gt;Three&lt;/option&gt; &lt;/select&gt; &lt;/form&gt; &lt;form name="bigform"&gt; &lt;div id="1"&gt; &lt;input type="text"&gt; &lt;select name="foo"&gt; &lt;option&gt;bar&lt;/option&gt; &lt;option&gt;bar&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;div id="2"&gt; &lt;input type="text"&gt; &lt;select name="foo"&gt; &lt;option&gt;bar&lt;/option&gt; &lt;option&gt;bar&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;div id="3"&gt; &lt;input type="text"&gt; &lt;select name="foo"&gt; &lt;option&gt;bar&lt;/option&gt; &lt;option&gt;bar&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;/form&gt; </code></pre> <p>When the user selects option "Two" in the selector form, all form elements in DIVs 1 and 3 would be disabled. I've searched the web for hours but I cannot find a solution. What's the best method to achieve this?</p> <p>I found this code online that does "almost" what I want but not quite. It 'toggles' the form elements in the given element (el). What I'm trying to do is sort of the opposite of this.</p> <pre><code> &lt;form&gt; &lt;select name="selector" onChange="toggleDisabled(document.getElementByID(this.value))&gt; &lt;option&gt;Choose Which Div To Enable&lt;/option&gt; &lt;option value='1'&gt;One&lt;/option&gt; &lt;option value='2'&gt;Two&lt;/option&gt; &lt;option value='3'&gt;Three&lt;/option&gt; &lt;/select&gt; &lt;/form&gt; &lt;script&gt; function toggleDisabled(el){ try { el.disabled = el.disabled ? false : true; } catch(E){} if (el.childNodes &amp;&amp; el.childNodes.length &gt; 0) { for (var x = 0; x &lt; el.childNodes.length; x++) { toggleDisabled(el.childNodes[x]); } } } &lt;/script&gt; </code></pre>
<blockquote> <p>When the user selects option "Two" in the selector form, all form elements in DIVs 1 and 3 would be disabled. So when user submits "bigform", only the values inside div 2 would be submitted.</p> </blockquote> <p>No. the form will always be submitted as a whole, regardless of what elements were disabled in UI.</p> <p>If you want to submit only one set of form items, create a separate form for each set.</p>
<p>Its not possible to prevent some input elements from submittng, and it might be safer/easier to do the selective saving on the server side, as it would stop erroneous results being saved if JS broke/was compromised. </p> <p>You could disable the elements not being submitted and maybe change their name attributes to ensure the values weren't used by the server.</p> <p>You could also assign a name/value to a submit button, and parse this on the server-side. It would be trivial to use Javascript to set a value n the submit button to tell the server side to only the the required buttons.</p>
<p>So you have N sections with id's 1..N, and you want only section i to be active?</p> <p>If you put it in that wording, I would code it somewhat like this - mind: my jQuery is not that strong, I'm merely pseudo-jQuerying:</p> <pre><code>function enable( element, sensitive ) { //recursively disable this node and it's children element.disabled = !sensitive; if( element.childNodes ) { for( var i = 0; i != element.childNodes.length; ++i ) { enable( element.childNodes[i], sensitive ); } } } // this function should rely on the structure of your document // it ought to visit all sections that need to be enabled/disabled function enableSection( i ) { $("#bigform &gt; div").each( function( index, element ) { enable( element, index==i ); }); } $("#sectionselector").change( function( ) { // find value of active section var activesection = $("#sectionselector").value; // or the like enableSection( activesection ); } ); </code></pre>
<p>A way to solve it <em>without</em> using a scripting library such as jQuery:</p> <pre><code>function disableFormFields(container, isDisabled) { var tagNames = ["INPUT", "SELECT", "TEXTAREA"]; for (var i = 0; i &lt; tagNames.length; i++) { var elems = container.getElementsByTagName(tagNames[i]); for (var j = 0; j &lt; elems.length; j++) { elems[j].disabled = isDisabled; } } } </code></pre> <hr> <pre><code>&lt;select name="selector" onchange="partiallyDisableForm(this)"&gt; &lt;!-- give every option a numeric value! --&gt; &lt;option value='0'&gt;Choose Which Div To Enable&lt;/option&gt; &lt;option value='1'&gt;One&lt;/option&gt; &lt;option value='2'&gt;Two&lt;/option&gt; &lt;option value='3'&gt;Three&lt;/option&gt; &lt;/select&gt; </code></pre> <hr> <pre><code>function partiallyDisableForm(selector) { // don't forget to give your form the ID "bigform" var form = document.getElementById("bigform"); var parts = form.getElementsByTagName("DIV"); for (var i = 0; i &lt; parts.length; i++) { var part = parts[i]; // give your form parts the ID "formpart_1" through "formpart_3" if (part.id.match(/^formpart_\d+$/)) { // you must implement what to do if selector.value is 0 var isDisabled = (part.id != "formpart_" + selector.value); disableFormFields(part, isDisabled); } } } </code></pre>