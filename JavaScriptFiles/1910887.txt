JavaScript not working on IE, but OK in all other browsers
<p>The code is for adding a password on the webpage, which working for all other browser but not for IE.</p> <pre><code>&lt;HEAD&gt; &lt;SCRIPT language="JavaScript"&gt; &lt;!--hide var password; var pass1="cool"; password=prompt('Please enter your password to view this page!',' '); if (password==pass1) alert('Password Correct! Click OK to enter!'); else { window.location="http://www.pageresource.com/jscript/jpass.htm"; } //--&gt; &lt;/SCRIPT&gt; &lt;/HEAD&gt; </code></pre>
<p>its this bit of code here</p> <pre><code>if (password==pass1) alert('Password Correct! Click OK to enter!'); else { window.location="http://www.pageresource.com/jscript/jpass.htm"; } </code></pre> <p>first of all wrap the <code>alert</code> bit in curly braces to read</p> <pre><code>if (password==pass1){ alert('Password Correct! Click OK to enter!'); } </code></pre> <p>secondly, unlike php and other C like languages, do not start braces in a new line...<br> in javascript, when a script is evaluated by the interpreter, it looks for a semicolon designating the end of a statement,<br> if a semicolon is not found, the closest previous line break is replaced with a semicolon </p> <p>So, your <code>else</code> block is evaluated as :</p> <pre><code>else; {; window.location="http://www.pageresource.com/jscript/jpass.htm"; }; </code></pre> <p>instead write it as </p> <pre><code>else{ window.location="http://www.pageresource.com/jscript/jpass.htm"; } </code></pre>
<p>When I used the <a href="http://my-debugbar.com/wiki/IETester/HomePage" rel="nofollow noreferrer">IETester</a>'s "open URL in all IE versions", it <strong>failed</strong> to work in all windows expect of the first window where the prompt was entered, regardless of the IE window used.</p> <p>However, it works fine here in all known browsers (including IE6/7/8) when tested <em>individually</em>. I haven't change anything from the code as outlined <a href="http://www.pageresource.com/jscript/jpass.htm" rel="nofollow noreferrer">here</a>.</p> <p>So your actual problem lies somewhere else than in the as far provided information.</p> <p>Needless to say, this approach is <em>far</em> from secure.</p>
<ol> <li>I think you are missing one squiggly at end of 'if' line, and another at beginning of 'else' line, or, remove the two that are existing now . </li> </ol> <p><strong>So, either this:</strong></p> <pre><code>if (password==pass1) { alert('Password Correct! Click OK to enter!'); } else { window.location="http://www.pageresource.com/jscript/jpass.htm"; } </code></pre> <p><strong>.. or this (although I never code this way personally) ..</strong></p> <pre><code>if (password==pass1) alert('Password Correct! Click OK to enter!'); else window.location="http://www.pageresource.com/jscript/jpass.htm"; </code></pre> <p>should work.</p> <p>Also, try <strong>window.location.href</strong> instead of just <strong>window.location</strong>. </p> <pre><code>window.location.href = "http://www.pageresource.com/jscript/jpass.htm"; </code></pre> <p>Of course, as mentioned ny others, <strong>your approach is not secure</strong> using password on client side (<em>&lt;!--hide does NOT hide the javascript from the source code view</em>).</p> <p>Hope this helps -</p>
<p>FROM <code>window.location</code> TO <code>document.location</code> is all you need to change for a bug-free cross-browser implementation of your code. Never use window unless you are truly referencing the window object; Example: <code>window.close()</code></p>
<p>it looks like your first line of js: </p> <pre><code>&lt;!--hide </code></pre> <p>should be :</p> <pre><code>// &lt;!-- hide </code></pre> <p>But it looks liek you may have other problems as well. Try that first!</p>
<p>Try wrapping curly braces around your if: </p> <pre><code>if (password==pass1){ alert('Password Correct! Click OK to enter!'); } else { window.location="http://www.pageresource.com/jscript/jpass.htm"; } </code></pre> <p>You probably don't really need that hide stuff anymore either. Good luck on your learning. </p>
<p><em>window.location</em> doesn't work in IE6. You probably want <em>document.location</em>.</p> <pre><code>if ("cool" == prompt('Please enter your password to view this page!', '')) { alert('Password Correct! Click OK to enter!'); } else { document.location = "http://www.pageresource.com/jscript/jpass.htm"; } </code></pre>
<p>IE7 has the prompt functionality disabled by default.</p> <p>And as everyone before me has said unless this is just a learning javascript type endevour - the "protection" is useless. All anyone has to do is disable JS and/or look at your source for where youre redirecting.</p>
<p>If my JavaScript only breaks in IE, the very first thing I do is run it through <a href="http://jslint.com" rel="nofollow noreferrer">JSLint</a>, a free tool that checks your JS code for errors. This will likely reveal what's causing IE to choke.</p>
<p>Ok, firstly I hope you are just doing this to play with javascript because anyone will be able to bypass your security in a snap just by looking at the source code. To manage login access to a site you really should be using a server side implementation such as php, jsp, asp etc. Those sites take the password login and compare it on the server which the normal user cannot see. Anyway your code below should work:</p> <pre><code>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;HTML Test&lt;/title&gt; &lt;script type="text/javascript"&gt; function check() { var password; var pass1="cool"; password=prompt('Please enter your password to view this page!',' '); if (password==pass1) alert('Password Correct! Click OK to enter!'); else document.location="http://www.pageresource.com/jscript/jpass.htm"; } &lt;/script&gt; &lt;/head&gt; &lt;body onload="check()"&gt; &lt;/body&gt; &lt;/html&gt; </code></pre>
<p>DON'T DO THAT!!! You're sending the user the password. All the user has to do is "View Source" and it's right there. Alternatively, the user can get whatever information the password was hiding from the Javascript source.</p> <p>Client-side validation is great for things like data formats, but nothing that is sensitive should ever be done client-side, and all data should be validated again on the server. Remember, a malicious user can send you anything, bypassing your Javascript entirely.</p>