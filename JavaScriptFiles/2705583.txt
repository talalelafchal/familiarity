How to simulate a click with JavaScript?
<p>I'm just wondering how I can use JavaScript to simulate a click on an element.</p> <p>Currently I have: </p> <pre><code>&lt;script type="text/javascript"&gt; function simulateClick(control) { if (document.all) { control.click(); } else { var evObj = document.createEvent('MouseEvents'); evObj.initMouseEvent('click', true, true, window, 1, 12, 345, 7, 220, false, false, true, false, 0, null ); control.dispatchEvent(evObj); } } &lt;/script&gt; &lt;a href="http://www.google.com" id="mytest1"&gt;test 1&lt;/a&gt;&lt;br&gt; &lt;script type="text/javascript"&gt; simulateClick(document.getElementById('mytest1')); &lt;/script&gt; </code></pre> <p>But it's not working :(</p> <p>Any ideas?</p>
<p>Have you considered using jQuery to avoid all the browser detection? With jQuery, it would be as simple as:</p> <pre><code>$("#mytest1").click(); </code></pre>
<p>Here's what I cooked up. It's pretty simple, but it works:</p> <pre><code>function eventFire(el, etype){ if (el.fireEvent) { el.fireEvent('on' + etype); } else { var evObj = document.createEvent('Events'); evObj.initEvent(etype, true, false); el.dispatchEvent(evObj); } } </code></pre> <p>Usage:</p> <pre><code>eventFire(document.getElementById('mytest1'), 'click'); </code></pre>
<p>The top answer is the best! However, it was not triggering mouse events for me in Firefox when <code>etype = 'click'</code>.</p> <p>So, I changed the <code>document.createEvent</code> to <code>'MouseEvents'</code> and that fixed the problem. The extra code is to test whether or not another bit of code was interfering with the event, and if it was cancelled I would log that to console.</p> <pre><code>function eventFire(el, etype){ if (el.fireEvent) { el.fireEvent('on' + etype); } else { var evObj = document.createEvent('MouseEvents'); evObj.initEvent(etype, true, false); var canceled = !el.dispatchEvent(evObj); if (canceled) { // A handler called preventDefault. console.log("automatic click canceled"); } else { // None of the handlers called preventDefault. } } } </code></pre>
<p>What about something simple like:</p> <pre><code>document.getElementById('elementID').click(); </code></pre> <p><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click" rel="nofollow">Supported</a> even by IE.</p>
<p>You could save yourself a bunch of space by using jQuery. You only need to use:</p> <pre><code>$('#myElement').trigger("click") </code></pre>
<pre><code>var elem = document.getElementById('mytest1'); // Simulate clicking on the specified element. triggerEvent( elem, 'click' ); /** * Trigger the specified event on the specified element. * @param {Object} elem the target element. * @param {String} event the type of the event (e.g. 'click'). */ function triggerEvent( elem, event ) { var clickEvent = new Event( event ); // Create the event. elem.dispatchEvent( clickEvent ); // Dispatch the event. } </code></pre> <h2>Reference</h2> <ul> <li><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events</a></li> <li><a href="https://codepen.io/felquis/pen/damDA" rel="nofollow">https://codepen.io/felquis/pen/damDA</a></li> </ul>