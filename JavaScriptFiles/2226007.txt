Fetching all (javascript) global variables in a page
<p>Is there a way to retrieve the names/values of all global variables on a page?</p> <p>I would like to write a javascript function to do the following:</p> <ol> <li>Find all global variables prefixed with 'xxx_' and stick them in an array (for e.g.)</li> <li>build a query string using the name value pairs as follows: xxx_glob_var1=value1&amp;xxx_glob_var2=value2 etc</li> </ol> <p>How do I do this?</p>
<p>You could do something like this:</p> <pre><code>for (var i in window) { // i is the variable name // window[i] is the value of the variable } </code></pre> <p>Though with this, you'll get a bunch of extra DOM properties attached to window.</p>
<p>Something like this:</p> <pre><code>function getGlobalProperties(prefix) { var keyValues = [], global = window; // window for browser environments for (var prop in global) { if (prop.indexOf(prefix) == 0) // check the prefix keyValues.push(prop + "=" + global[prop]); } return keyValues.join('&amp;'); // build the string } </code></pre> <p>A test usage:</p> <pre><code>var xxx_foo = "foo"; xxx_bar = "bar"; window.xxx_baz = "baz"; var test = getGlobalProperties('xxx_'); // test contains "xxx_baz=baz&amp;xxx_bar=bar&amp;xxx_foo=foo" </code></pre>
<p>In some cases you may want to find non-<a href="https://developer.mozilla.org/en-US/docs/Enumerability_and_ownership_of_properties" rel="nofollow">enumerable</a> properties; therefore <a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/for...in" rel="nofollow"><code>for..in</code></a> won't work <em>(<a href="http://www.ecma-international.org/ecma-262/5.1/#sec-12.6.4" rel="nofollow">spec</a>, <a href="http://stackoverflow.com/q/12146473/1615483">about chrome</a>)</em> and neither would <a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys" rel="nofollow"><code>Object.keys</code></a> as both only use enumerable keys. Notice that <code>for..in</code> is different to <a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/in" rel="nofollow"><code>in</code></a> but we can't use this to iterate.</p> <p>Here is a solution using <a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames" rel="nofollow"><code>Object.getOwnPropertyNames</code></a> (compatibility is IE9+). I've also added support for when you do only want enumerable properties or if you want to search another in context (not global).</p> <pre><code>function findPrefixed(prefix, context, enumerableOnly) { var i = prefix.length; context = context || window; if (enumerableOnly) return Object.keys(context).filter( function (e) {return e.slice(0,i) === prefix;} ); else return Object.getOwnPropertyNames(context).filter( function (e) {return e.slice(0,i) === prefix;} ); } findPrefixed('webkit'); // ["webkitAudioContext", "webkitRTCPeerConnection", "webkitMediaStream", etc.. </code></pre> <p>Then if you want to join e.g.</p> <pre><code>findPrefixed('webkit').map(function (e) {return e+'='+window[e];}).join('&amp;'); // "webkitAudioContext=function AudioContext() { [native code] }&amp;webkitRTCPeerConnection=function RTCPeerConnection() etc.. </code></pre>
<p>Or you could simply run;</p> <pre><code>Object.keys(window); </code></pre> <p>It will show a few extra globals (~5), but far fewer than the <code>for (var i in window)</code> answer.</p>
<p>In my case, the two top answers didn't work, thus I am adding another answer, to highlight the comment of Dan Dascalescu:</p> <pre><code>Object.keys(window); </code></pre> <p>When I executed it, it gave:</p> <blockquote> <p>top,location,document,window,external,chrome,$,jQuery,matchMedia,jQuery1113010234049730934203,match_exists,player_exists,add_me,isLetter,create_match,delete_me,waiting,unsure,refresh,delete_match,jsfunction,check,set_global,autoheight,updateTextbox,update_match,update_player,alertify,swal,sweetAlert,save_match,$body,value_or_null,player,position,ability,obj_need_save,xxx_saves,previousActiveElement</p> </blockquote> <p>where the player, positon, ability, obj_need_save, xx_saves are my actual global variables.</p> <hr> <p>I just saw that there exists a similar <a href="http://stackoverflow.com/a/8369361/2411320">answer</a> to another question.</p>