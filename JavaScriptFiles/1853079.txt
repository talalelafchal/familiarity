Did button actually click?
<p>I have some javascript that ends up programatically clicking on a button:</p> <pre><code> document.getElementById("myButton").click(); </code></pre> <p>This in turn results in the form being submitted using a function call:</p> <pre><code> &lt;form onsubmit="submit_this_form(this);return false;" action="" method="POST"&gt; </code></pre> <p>It seems that a good percentage of the time either the actual button click is not going through or the form is not being submitted. I think the button click is going through and I know the code is being called because I have a counter embedded and I can see it is executing. </p> <p>My question is...is there an event or a way to verify that the form actually posted? By the way, I don't have control of the HTML code so I can't change the tag content.</p>
<pre><code>&lt;form onsubmit="submit_this_form(this);return false;" action="" method="POST"&gt; </code></pre> <p>return false after submit_this_form() essentially stops the form from actually submitting. I believe if you change it to:</p> <pre><code>&lt;form onsubmit="submit_this_form(this);" action="" method="POST"&gt; </code></pre> <p>It should work as you want.</p> <p>Using return false after an event handler will essentially 'hijack' the default functionality. Basically, whatever your event handler function script does replaces the default behavior, which in this case, is submitting the form data to the server.</p>
<p>I don't think you can verify that form is actually where submitted. But you can submit it by hand via XMLHTTPRequest and check for server responce. This way you will be sure thet form is submitted. And you can have an event (your custom event) that says about form submission if you need to... BTW do not forget to prevent forms default submit if you go AJAX way.</p> <p>Check jquery.form plugin to make a fast rollout of AJAX form submission and look is it what you want or not.<br> Good luck!</p>