Can anyone explain the difference between closure and anonymous functions?
<p>I am relatively new to Javascript. I understand the concept of anonymous functions - but closures seem less clear. The similarity between the two (in my mind atleast), is confusing.</p> <p>Could someone explain the difference? (preferrably, with some code snippet, to illustrate the points clearer).</p>
<p>Have you seen this article? <a href="http://www.jibbering.com/faq/faq_notes/closures.html" rel="nofollow noreferrer">http://www.jibbering.com/faq/faq_notes/closures.html</a></p> <p>This could also be good as a starting point: <a href="http://www.javascriptkit.com/javatutors/closures.shtml" rel="nofollow noreferrer">http://www.javascriptkit.com/javatutors/closures.shtml</a></p>
<p>I explained this here: <a href="http://stackoverflow.com/questions/61088/hidden-features-of-javascript/2047391#2047391">The Zen of Closures</a>.</p> <p>Basically, without going into technical details:</p> <ul> <li>an anonymous function is a function without a name (that can be assigned to variables).</li> <li>a closure is a kind of private global variable</li> </ul>
<p>The important difference is that a closure captures the scope it was defined in.</p> <p>In other words, a closure may access variables and their state even though they belong to the closure's parent scope (e.g. the function the closure was created in). This allows closures to capture and "transport" application state around your program.</p> <p>An anonymous function cannot do that; its reach is limited to variables defined inside its body and signature (i.e., its parameters).</p> <p>EDIT: Just to clarify: In JavaScript it is especially unclear since there is no language construct called closure. You'd still use an anonymous function for that. I was only referring to the conceptual difference.</p>
<p>I found this SO answer, which put it very clear for me:</p> <p><a href="http://stackoverflow.com/questions/50255/does-java-need-closures/716763#716763">Does Java need closures?</a></p>