Is better: &lt;a href=&quot;/test&quot; onclick=&quot;T.actions.addFriend(profileId)&quot;&gt;add friend&lt;/a&gt; or ...?
<p>Is better: <code>&lt;a href="/test" onclick="T.actions.addFriend(profileId)"&gt;add friend&lt;/a&gt;</code> </p> <p>or </p> <pre><code>&lt;a href="/test" class="add-friend-button"&gt;add friend&lt;/a&gt; </code></pre> <p>and then with the Javascript select the "add-friend-button" class and add a click event?</p>
<p>"and then with the Javascript select the "add-friend-button" class and add a click event?"</p> <p>Yes, this one is better. You want your markup to be clean (non intrusive javascript).</p>
<p>Depends on personal taste. Adding the <code>onclick</code> later on is consired to be "better", "modular" etc. However having your HTML document filled with <code>&lt;script&gt;</code> tags might be even uglier.</p> <p>Also read the Wikipedia article on <a href="http://en.wikipedia.org/wiki/Unobtrusive_JavaScript" rel="nofollow noreferrer">Unobstrusive Javascript (UJS)</a>.</p>
<p>If this button is to be used on multiple pages, certainly register the event with the class. You could then place the registration in an external js file and include it with each page that uses this type of button.</p> <p>The concept is analogous to CSS. You only want to define your style code or js code in one place, whether that is inline, per page, or an included file depends on what you are trying to accomplish. </p>
<p>Adding the "onclick" later is also slower! (I know just a little bit slower so it won't decrease the vieweing experince of your webpage)</p> <p>If you need to add it only in one place on your page you could also put the onclick directly inline, but if you are adding these onclick events in many parts of your page I would recommend separating and being unobtrusive (by adding onclick later in a script or in window.onload event).</p>