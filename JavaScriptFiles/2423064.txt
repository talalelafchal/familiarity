Dynamically adding target attribute to a collection of pre-existing anchor tags within a known div element
<p>I have a div with id="images". </p> <p>The div contains some images that are each wrapped in an anchor tag with no target attribute. </p> <p>I'd like to insert script into my page that pulls a reference to each of these anchor elements and ads a target="new" attribute to them (in the runtime) so that when they are clicked they each open in a new window. </p> <p>I don't want to hardcode the target attributes on the anchor tags. This is a post deployment workaround. I'm not using jquery in this application.</p> <pre><code>&lt;div id="images"&gt;&lt;a href=""&gt;&lt;img src="foo.png" /&gt;&lt;/a&gt;...etc &lt;/div&gt; </code></pre>
<p>No jQuery required! You can do this easily using native DOM methods:</p> <pre><code>// Find all the anchors you want to modify var anchors = document.getElementById('images').getElementsByTagName('a'), i = anchors.length; // Add the target to each one while(i--) anchors[i].target = "new"; </code></pre>
<p>You can traverse all the anchor elements inside your div, first by looking up the div itself, and then you can use the <a href="https://developer.mozilla.org/en/DOM/element.getElementsByTagName" rel="nofollow noreferrer"><code>element.getElementsByTagName</code></a> method:</p> <pre><code>var imagesDiv = document.getElementById('images'), images = imagesDiv.getElementsByTagName('a'); for (var i = 0, n = images.length; i &lt; n; i++) { images[i].target = "_blank"; } </code></pre>
<pre><code>function replaceAllAnchors(Source,stringToFind,stringToReplace){ //sample call: body=replaceAllAnchors(body,'&lt;a ','&lt;a target="_blank" '); var temp = Source; var replacedStr=""; var index = temp.indexOf(stringToFind); while(index != -1){ temp = temp.replace(stringToFind,stringToReplace); replacedStr=replacedStr+temp.substr(0,temp.indexOf("/a&gt;")+3); temp=temp.substr(temp.indexOf("/a&gt;")+3); index = temp.indexOf(stringToFind); } replacedStr=replacedStr+temp; return replacedStr; } </code></pre>
<p>Why can't you use jQuery? I've added this here for other people who google. <br><br>It's 1 line of code in a loop:</p> <pre><code>$('#images a').each(function(){ $(this).attr('target', '_blank'); }); </code></pre> <p>Now isn't that much more simple? Use jQuery if you can.</p>