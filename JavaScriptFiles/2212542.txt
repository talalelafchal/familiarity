How can I prevent selecting text in Google Chrome?
<p>Doesn't oEvent.preventDefault(); work in GC? I need to prevent selecting text when the onmove event is triggered. </p> <p><b>EDIT:</b> It turns out to be very easy...</p> <pre><code>function disableSelection() { document.onselectstart = function() {return false;} // ie document.onmousedown = function() {return false;} // others } function enableSelection() { document.onselectstart = null; // ie document.onmousedown = null; // others } </code></pre> <p>After that, there's no text selection triggered on the move event (ie. on the select event -- ie - indeed ie!)</p>
<p><code>-webkit-user-select: none</code> CSS style controls whether the user is allowed to select the<br> text of the element. </p> <p>For completeness sake, this covers all supporting browsers (IE is not considered a web browser):</p> <pre><code>.no-select { user-select: none; -o-user-select:none; -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; } </code></pre> <p>To do it through Javascript, just create a class and add the node's attributes.</p>
<p>To do it using JavaScript:</p> <pre><code>var el = document.getElementById("myElement"), s = el.style; s.userSelect = "none"; s.webkitUserSelect = "none"; s.MozUserSelect = "none"; el.setAttribute("unselectable", "on"); // For IE and Opera </code></pre> <p>Note that for IE and Opera, the <code>unselectable</code> attribute isn't inherited by an element's children, so any child elements of <code>el</code> will also need <code>unselectable</code> to be set to <code>"on"</code>.</p>