&quot;with&quot; keyword in javascript
<blockquote> <p><strong>Possible Duplicate:</strong><br> <a href="http://stackoverflow.com/questions/61552/are-there-legitimate-uses-for-javascripts-with-statement">Are there legitimate uses for JavaScript&rsquo;s &ldquo;with&rdquo; statement?</a> </p> </blockquote> <p>I recently discovered that in javascript, one can do something like the following:</p> <pre><code>with document{ write('foo'); body.scrollTop = x; } </code></pre> <p>The down side of this is that each variable needs to be checked to see if it belongs to the document object, creating a significant overhead.</p> <p>Alternatively, one could do something like this:</p> <pre><code>var d = document; d.write('foo'); d.body.scrollTop = x; </code></pre> <p>Are there any situations where the use of the 'with' keyword is justified?</p>
<p>Just don't use it: <a href="http://yuiblog.com/blog/2006/04/11/with-statement-considered-harmful/" rel="nofollow noreferrer">http://yuiblog.com/blog/2006/04/11/with-statement-considered-harmful/</a></p> <blockquote> <p>JavaScript's <code>with</code> statement was intended to provide a shorthand for writing recurring accesses to objects. So instead of writing</p> <pre><code>ooo.eee.oo.ah_ah.ting.tang.walla.walla.bing = true; ooo.eee.oo.ah_ah.ting.tang.walla.walla.bang = true; </code></pre> <p>You can write</p> <pre><code>with (ooo.eee.oo.ah_ah.ting.tang.walla.walla) { bing = true; bang = true; } </code></pre> <p>That looks a lot nicer. Except for one thing. There is no way that you can tell by looking at the code which <code>bing</code> and <code>bang</code> will get modifed. Will <code>ooo.eee.oo.ah_ah.ting.tang.walla.walla</code> be modified? Or will the global variables <code>bing</code> and <code>bang</code> get clobbered? It is impossible to know for sure...</p> <p>If you can't read a program and be confident that you know what it is going to do, you can't have confidence that it is going to work correctly. For this reason, the <code>with</code> statement should be avoided...</p> </blockquote>
<p>I would avoid using it in production code because it's ambiguous but there is an alternative solution to the for-loop-closure solution by using <code>with</code> to mimic the <code>let</code> binding, here's a copy of my previous answer:</p> <p>An alternative to the standard closure solution using functions inside of a for loop:</p> <pre><code>&lt;a href="#"&gt;blah&lt;/a&gt;&lt;br&gt; &lt;a href="#"&gt;blah&lt;/a&gt;&lt;br&gt; &lt;a href="#"&gt;foo&lt;/a&gt;&lt;br&gt; &lt;script&gt; (function() { var anchors = document.getElementsByTagName('a'); for ( var i = anchors.length; i--; ) { var link = anchors[i]; with ({ number: i }) { link.onclick = function() { alert(number); }; } } })(); &lt;/script&gt; </code></pre> <p>Credit to <code>nlogax</code> for providing a solution which I pretty much ripped off: <a href="http://stackoverflow.com/questions/1451009/javascript-infamous-loop-problem">Javascript infamous Loop issue?</a></p> <p>Here's the standard solution:</p> <pre><code>&lt;script&gt; (function() { var anchors = document.getElementsByTagName('a'); for ( var i = anchors.length; i--; ) { var link = anchors[i]; (function(i) { link.onclick = function() { alert(i) } })(i); } })(); &lt;/script&gt; </code></pre>
<p>Here are some blog posts in support of the with keyword. But please read the YUI blog entry that azazul posted as well!</p> <p><a href="http://webreflection.blogspot.com/2009/12/with-worlds-most-misunderstood.html" rel="nofollow noreferrer">http://webreflection.blogspot.com/2009/12/with-worlds-most-misunderstood.html</a> <a href="http://webreflection.blogspot.com/2009/12/with-some-good-example.html" rel="nofollow noreferrer">http://webreflection.blogspot.com/2009/12/with-some-good-example.html</a></p>
<p>Despite advice to the contrary almost everywhere, I think that there are uses for "with". For example, I'm working on a domain model framework for Javascript, which uses the underscore character in much the same way that jQuery uses "$". This means that without "with", I have lots of underscores scattered through my code in ways that make it less readable. Here's a random line from an application using the framework:</p> <pre><code>_.People().sort(_.score(_.isa(_.Parent)),'Surname','Forename'); </code></pre> <p>whereas with "with" it would look like</p> <pre><code>with (_) { ... People().sort(score(isa(Parent)),'Surname','Forename'); ... } </code></pre> <p>What would be really useful is a read-only version of "with".</p>