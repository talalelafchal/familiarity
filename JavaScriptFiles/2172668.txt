javascript parsing
<p>i have this block of code:</p> <pre><code>$(document).ready(function() { //&lt;![CDATA[ var who; FB_RequireFeatures(["Api"], function(){ var who = api.get_session().uid; alert(who); }); alert("the uid is: "+who); //]]&gt; }); </code></pre> <p>the problem: the code outside the FB_RequireFeatures block is executing before the one inside it. due to which the value of <code>who</code> is coming out to be undefined.</p> <p>what am i doing wrong?</p>
<p>The <code>FB_RequireFeatures</code> function appears to be making an asynchronous call, so you're not doing anything wrong, that's just the way it works - the alert is called before the request comes back.</p> <p>You must design your code in a way that the code that depends on the result of the <code>FB_RequireFeatures</code> functions are called only after the request completes. You can call another function inside the callback, for example:</p> <pre><code>var who; $(document).ready(function() { FB_RequireFeatures(["Api"], function() { who = api.get_session().uid; doSomeOtherStuff(); }); }); function doSomeOtherStuff() { alert("the uid is: " + who); } </code></pre> <p>Now the <code>doSomeOtherStuff</code> function is called only after the <code>FB_RequireFeatures</code> function finishes, and you should do all following code inside the <code>doSomeOtherStuff</code> function &ndash; which you can name to be anything you want, obviously.</p> <p>I moved the <code>who</code> variable out of the ready block to keep it in scope for the <code>doSomeOtherStuff</code> function, and removed the <code>var</code> from the inner function so that you're referencing the original variable instead of creating a new one, otherwise it's the same.</p>
<p>You're making a new local <code>who</code> variable. Remove the <code>var</code> from the place where you set who. Also, you can't reference <code>who</code> until the callback to the FB_RequireFeatures function is run.</p>