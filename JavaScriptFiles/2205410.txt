when to use Function in javascript?
<p>I have been writing javascript for one or two months , I never used Function keyword , like Function.method(); when I define function , I simply define it as :</p> <pre><code>function fooBar () {}; </code></pre> <p>Can you give me an example when using Function is more convenient ?</p>
<blockquote> <p>Every function in JavaScript is actually a Function object.</p> </blockquote> <p>Read <strong><a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Function" rel="nofollow noreferrer">Function</a></strong></p> <blockquote> <p>Function objects created with the Function constructor are parsed when the function is created. This is less efficient than declaring a function and calling it within your code, because functions declared with the function statement are parsed with the rest of the code.</p> </blockquote>
function view(){ document.getElementById('one').innerHTML="New Text here"; } <p>this function can you call from either keyboard events of mouse events </p>
<p>You shouldn't use the <a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Functions#The_Function_constructor" rel="nofollow noreferrer"><code>Function</code></a> constructor so often, it basically uses code evaluation to build a function.</p> <p>It requires string arguments, being the last argument the function body, and the previous ones will be the arguments of the new function itself, for example:</p> <pre><code>var add = new Function("a", "b", "return a + b;"); add(5,5) == 10; </code></pre> <p><strong>When you should use it?</strong></p> <p>As I said not so often, I personally try to avoid them since they use code evaluation.</p> <p>A thing to note is that <em>no closures</em> are created when functions are built in this way, which can be a good thing for some performance circumstances, for example to shorten the process of identifier resolution, but you should use them with care...</p>