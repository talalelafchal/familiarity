Javascript: Unresponsive script error
<p>I get an error message from Firefox "Unresponsive script". This error is due to some javascript I added to my page.</p> <p>I was wondering if the unresponsiveness are caused exclusively by code loops (function calling each other cyclically or endless "for loops") or there might be other causes ?</p> <p>Could you help me to debug these kind of errors ?</p> <p>thanks</p>
<p>According to the <a href="http://kb.mozillazine.org/Unresponsive_Script_Warning" rel="nofollow noreferrer">Mozzila Knoledgebase</a>:</p> <blockquote> <p>When JavaScript code runs for longer than a predefined amount of time, Firefox will display a dialog that says <em>Warning: Unresponsive Script</em>. This time is given by the settings dom.max_script_run_time and dom.max_chrome_script_run_time. Increasing the values of those settings will cause the warning to appear less often, but will defeat the purpose: to inform you of a problem with an extension or web site so you can stop the runaway script.</p> </blockquote> <p>Furthermore:</p> <blockquote> <p><strong>Finding the source of the problem</strong></p> <p>To determine what script is running too long, click the Stop Script button on the warning dialog, then go to Tools | Error Console. The most recent errors in the Error Console should identify the script causing the problem.</p> </blockquote> <p>Checking the error console should make it pretty obvious what part of your javascript is causing the issue. From there, either remove the offending piece of code or change it in such a way that it won't be as resource intensive.</p> <p><strong>EDIT:</strong> As mentioned in the comments to the author of the topic, <a href="http://getfirebug.com/" rel="nofollow noreferrer">Firebug</a> is highly recommended for debugging problems with javascript. <a href="http://snook.ca/archives/javascript/firebug-breakpoints" rel="nofollow noreferrer">Jonathan Snook</a> has a useful video on using breakpoints to debug complex pieces of javascript.</p>
<p>One way to avoid this is to wrap your poor performant piece of code with a timeout like this:</p> <pre><code>setTimeout(function() { // &lt;YOUR TIME CONSUMING OPERATION GOES HERE&gt; }, 0); </code></pre> <p>This is not a bullet proof solution, but it can solve the issue in some cases.</p>
<p>Excellent solution in this question: <a href="http://stackoverflow.com/questions/210821/how-can-i-give-control-back-briefly-to-the-browser-during-intensive-javascript">How can I give control back (briefly) to the browser during intensive JavaScript processing?</a>, by using the Async jQuery Plugin. I had a similar problem and solved it by changing my $.each for $.eachAsync</p>
<ol> <li>there could be an infinite loop somewhere in the code <ul> <li>start by commenting out codes to identify which section is causing it</li> <li>too many loops: there might be a chance that your counter variable name clashes, causing the variable to keep resetting, causing the infinite loop.</li> </ul></li> <li>try as much as possible to create hashes for your objects so much so that read time is O(1) and in a way caching those data</li> <li>avoid using <code>js libs</code> as some of the methods might cause overheads. eg. <code>.htm()</code> vs <code>.innerHTML</code></li> <li>setTimeout() yes and no -- depends on how you chunkify your codes </li> </ol>
<p>We need to follow these steps to stop script in Firefox.</p> <p>Step 1 Launch Mozilla Firefox.</p> <p>Step 2 Click anywhere in the address bar at the top of the Firefox window, to highlight the entire field.</p> <p>Step 3 Type "about:config" (omit the quotes here and throughout) and press "Enter." A "This might void your warranty!" warning message may come up; if it does, click the "I'll be careful, I promise!" button to open the page that contains all Firefox settings.</p> <p>Step 4 Click once in the "Search" box at the top of the page and type "dom.max_script_run_time". The setting is located and displayed; it has a default value of 10.</p> <p>Step 5 Double-click the setting to open the Enter Integer Value window.</p> <p>Step 6 Type "0" and click "OK" to set the value to zero. Firefox scripts now run indefinitely, and will not throw any script errors. Step 7</p> <p>Restart Mozilla Firefox.</p>