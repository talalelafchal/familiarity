Stop an anchor from loading on javascript confirm
<p>I was under the impression that this was formed correctly, but here it is forwarding to the anchor href (clicking through? what should I call this?) whether or not the user selects cancel or okay.</p> <pre><code>&lt;script type="text/javascript"&gt; function myconfirm(my_string) { var agree = confirm('Are you sure you want to remove ' + my_string + '?'); if(agree) { return true; } else { return false; } } &lt;/script&gt; </code></pre> <p>and the anchor</p> <pre><code>&lt;a href="example.com/?remove=yes" onclick="myconfirm('my_string')"&gt;My String&lt;/a&gt; </code></pre>
<p>Matti's right about the need to return something. However:</p> <pre><code>&lt;a href="example.com/?remove=yes" onclick="myconfirm('my_string')"&gt;My String&lt;/a&gt; </code></pre> <p><em>Don't</em> use a link for this. Anything that has an active effect like a removal should be a form with <code>method="post"</code>, not a form or link that causes <code>GET</code>, and the server-side script that does the removing should <em>only</em> accept POST requests.</p> <p>Accepting GET for non-idempotent actions, as well as being against the standard, can lead to a variety of <a href="http://thedailywtf.com/Articles/The_Spider_of_Doom.aspx" rel="nofollow noreferrer">amusing problems</a>.</p> <p>You can style a form submit button so it doesn't <em>look</em> like a button, if you really want to:</p> <pre><code>&lt;form class="confirm" method="post" action="/remove" title="remove my string"&gt;&lt;div&gt; &lt;input type="submit" class="unbutton" value="My String" /&gt; &lt;/div&gt;&lt;/form&gt; .unbutton { border: none; padding: 0; background: transparent; color: blue; text-decoration: underline; cursor: pointer; } </code></pre> <p>You can also avoid having to use inline event handler attributes by assigning them from JS:</p> <pre><code>// Find forms with confirm class and bind to them // for (var i= document.forms.length; i--&gt;0;) if (document.forms[i].className==='confirm') document.forms[i].onsubmit= getConfirmation; // Prompt user to allow submission or not // function getConfirmation() { return confirm('Are you sure you wish to '+this.title+'?'); } </code></pre>
<p>You're not returning anything from the onclick handler. Do</p> <pre><code>onclick="return myconfirm('my_string');" </code></pre> <p>Also, you can shorten that if clause to just</p> <pre><code>return agree; </code></pre> <p>Or even just</p> <pre><code>return confirm('Are you sure you want to remove ' + my_string + '?'); </code></pre>
<p>Put "javascript:void(0)" as the href and then handle everything in the onclick, including the location.href change, if needed.</p>
<p>Return false in the onclick to stop the event.</p> <pre><code>onclick="if( !myconfirm('my_string') ) { return false; }" </code></pre> <p>Or simply:</p> <pre><code>onclick="return myconfirm('my_string');" </code></pre>
<p>In <code>onclick</code> you should <strong>return</strong> value of <code>myconfirm</code>: <code>onclick="return mycnfirm('my_string')"</code>. By the way, you could just return the result of <code>confirm</code> in your <code>myconfirm</code>:</p> <pre><code> function myconfirm(my_string) { return confirm('Are you sure you want to remove ' + my_string + '?'); } </code></pre>