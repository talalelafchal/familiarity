JavaScript in multiple files
<p>I Have created two JavaScript files.One file is "validators.js" and other is "UserValidations.js". </p> <p>Here is the code for validators.js</p> <pre><code>function isBlankString(value) { if (value.replace(/\s/g, "") == "") { return true; } else { return false; } } </code></pre> <p>In other js file I have defined function for validating user name like this.</p> <pre><code>function validateUsername(element) { var username = element.value; if(value.replace(/\s/g, "") == ""){ //nothing to validate return; }else{ //validation logic } } </code></pre> <p>Now as it is obvious i should have used isBlankString(value) method to check string length. But I am clue less about how can i use the function defined in other file?</p>
<p>The file that provides the function must be included, in your HTML document, before the function is actually used.</p> <p>Which means that, to be sure, <code>validators.js</code> should be included before <code>UserValidations.js</code> :</p> <pre><code>&lt;script src="validators.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="UserValidations.js" type="text/javascript"&gt;&lt;/script&gt; </code></pre>
<p>I you are in an HTML file just include both files in your HTML.</p>
<p>Make sure that you include your <code>validators.js</code> file first on the page:</p> <pre><code>&lt;script src="validators.js"&gt;&lt;/script&gt; </code></pre> <p>Now you can use the function of that normally:</p> <pre><code>function validateUsername(element) { var username = element.value; if(isBlankString(value)){ //nothing to validate return; }else{ //validation logic } } </code></pre>
<p>So long as you have both files included you can just call it. JavaScript has no real concept of namespaces to worry about. You might consider combining the files into one as it saves on the number of http requests sent to the server. </p>
<p>Just include both of files to your html page and call functions when you need it. Nothing difficult and hard. Or use two of this functions in one file</p>
<p>As a side note, your <code>isBlankString</code> function overly verbose. Consider replacing it with the following</p> <pre><code>function isBlankString(value) { return value.replace(/\s+/g, "").length == ""; // or even: return value.replace(/\s+/g, "").length == 0; } </code></pre> <p>The <code>if</code> statement that you have is completely unnecessary.</p>
<p>More importantly, you are defining both of your functions in the window object. Its best to globally protect your functions by creating your own namespace: </p> <pre><code>function isBlankString(value) { if (value.replace(/\s/g, "") == "") { return true; } else { return false; } } </code></pre> <p>you should put all of your objects in your own namespace like</p> <pre><code>Sarfraz.isBlankString = function (value) { if (value.replace(/\s/g, "") == "") { return true; } else { return false; } } </code></pre> <p>As well as the other function. In reality, they are currently defined as window.isBlankString. If you load other people's javaScript into your page, you are much more likely to be overwritten. </p> <p>To your main question, both should be loaded before you execute any. Look into using jQuery and the $(document).ready functionality.</p> <p>Always load your scripts first, then execute. Loading and executing simultaneously invites disaster and is usually not necessary. That way, you don't need to worry about which order you place them in the file.</p>
<p>One nice method is to develop in multiple js files and then combine them together in your make/build system to create a JavaScript Library.</p> <p>See this post for further discussion and example makefile: <a href="http://stackoverflow.com/questions/4413903/makefile-to-combine-js-files-and-make-a-compressed-version">Makefile to combine js files and make a compressed version</a></p> <p>You can also compress and minify the javascript to further reduce the file size: See <a href="http://joseph.randomnetworks.com/2006/07/13/compressed-javascript/" rel="nofollow" title="Compressed JavaScript">Compressed JavaScript</a> or <a href="http://stackoverflow.com/questions/28932/best-javascript-compressor">Best JavaScript compressor</a></p>