Why this js code works?
<pre><code>if (!wysiwyg_toolbarButtons) { var wysiwyg_toolbarButtons = new Array( //command, display name, value, title, prompt/function, default text ["bold", "Strong", WYSIWYG_VALUE_NONE, "Give text strength"], ["italic", "Emphasis", WYSIWYG_VALUE_NONE, "Give text emphasis"], ["createlink", "Link", WYSIWYG_VALUE_PROMPT, "Create a hyperlink", "Enter the URL:", "http://"], ["unlink", "Unlink", WYSIWYG_VALUE_NONE, "Remove hyperlink"], ["insertimage", "Image", WYSIWYG_VALUE_PROMPT, "Insert an image", "Enter the URL of the image:", "http://"], ["inserthorizontalrule", "Rule", WYSIWYG_VALUE_NONE, "Insert horizontal rule"], ["div"], // place a toolbar divider ["formatblock", "Headling 1", "&lt;H1&gt;", "Make top level heading"], ["formatblock", "Headling 2", "&lt;H2&gt;", "Make 2nd level heading"], ["formatblock", "Headling 3", "&lt;H3&gt;", "Make 3rd level heading"], ["formatblock", "Paragraph", "&lt;P&gt;", "Make a paragraph"], ["formatblock", "Monospace", "&lt;PRE&gt;", "Make paragraph monospaced text"], ["insertunorderedlist", "List", null, "Make an unordered list"], ["insertorderedlist", "Ordered List", null, "Make an ordered list"], ["div"], // place a toolbar divider ["toggleview", "Source", "Compose", "Switch views"] ); } </code></pre> <p>It's from <a href="http://www.peej.co.uk/sandbox/wysiwyg/wysiwyg.js" rel="nofollow noreferrer">this file</a>ï¼Œwith a demo <a href="http://www.peej.co.uk/sandbox/wysiwyg/" rel="nofollow noreferrer">here</a></p> <p>My problem is:why doesn't it report "ReferenceError: wysiwyg_toolbarButtons is not defined"?</p>
<p>What that code is doing is checking if <code>wysiwyg_toolbarButtons</code> is defined, and if it is not, it's defining and initializing it.</p>
<p>The first thing the code does is a truthiness evaluation of <code>wysiwyg_toolbarButtons</code>, since it evaluates to <code>false</code> being <code>undefined</code> then the block enters and the variable is defined.</p>
<p>EDIT: Yep, I misunderstood what I was saying. Sorry for the bad answer.</p> <p><s>Based on your code, <code>wysiwyg_toolbarButtons</code> is created local to the <code>if</code> statement. The <code>var</code> declaration tells JavaScript that this is a new variable, and anything inside of the <code>if</code> statement's scope will use this new variable.</p> <p>I'm assuming this code is functioning with the statements like that. Whether or not it successfully changes <code>wysiwyg_toolbarButtons</code> (or <code>wysiwyg_elementMap</code>, as I scan the JS file) outside of that scope doesn't matter. Keeping the declaration like that is bad coding practice, because it won't work like that in other languages.</p> <p>Otherwise, I'm not going to restate what Quintin, Andreas, and Dimitar already said.</s></p>
<p>JavaScript in the web browser searches attributes in the <strong>window object</strong>. Accessing an unknown attribute does not throw an error, so in fact it is evaluated as something like this:</p> <pre><code>if( !window.wysiwyg_toolbarButtons ) { } </code></pre> <p>Try <code>if( !wtf ) { alert('error'); }</code> and <code>if( !window.wtf ) { alert('no error'); }</code> in the Firebug Console.</p> <p><strong>EDIT</strong></p> <p>Currently the console in firebug evals the code using <code>with( window ) { ..console..code.. }</code>. But the "with" statement is tricky, example:</p> <pre><code>&gt;&gt;&gt; alert(location); = eval( "with( window ) { alert(location); }" ); OK, "location" attribute found in window &gt;&gt;&gt; alert(wtf); = eval( "with( window ) { alert(wtf); }" ); ERROR, "wtf" not found in window, and not in global scope, throws ReferenceError </code></pre> <p>The implicit window object in the browser behaves differently than as it would be used with the "with" statement.</p>
<p>Javascript is not block scoped so the var declaration inside the if is just the same as if it had happened before the if. </p>