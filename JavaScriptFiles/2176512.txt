How to initialize member variables in JavaScript with protoypal inheritance
<p>I'm trying to get my head around protoypal inheritance and have a question about shared member variables.</p> <p>I have an object:</p> <pre><code>var objA = { list: [], myPush: function(aParam){ this.list.push(aParam); } } </code></pre> <p>and try to "protoypal inherit" it with the object() function from <a href="http://javascript.crockford.com/prototypal.html" rel="nofollow noreferrer">http://javascript.crockford.com/prototypal.html</a></p> <pre><code>var objB = object(objA); </code></pre> <p>but somehow a change to objA gets transfered to objB:</p> <pre><code>objA.myPush('a string'); equals(objA.list.length, 1); equals(objB.list.length, 0); //&lt;= Fails. Why? </code></pre> <p>The full code with failing tests: <a href="http://jsbin.com/izawi/edit" rel="nofollow noreferrer">http://jsbin.com/izawi/edit</a></p> <p>Could someone explain this to me? And possible fixes. I could have an constuct() function, but this doesn't seems right.</p> <p>Thanks in advance</p> <p>Matthias</p>
<p>As exposed in an earlier thread, Crockford's object function is slightly broken. Let me see if I can find the SO thread in question.</p> <p>The "traditional" Constructor inheritence works:</p> <pre><code>var a = { list: [], myPush: function(aParam){ this.list.push(aParam); } } function B () {} B.prototype = a; var b = new B(); a.myPush('a string'); b.list.length == a.list.length; // true </code></pre> <p>This is slightly less pure than "proper" prototypal inheritance - Constructors inherit from objects instead of objects inherit from objects. Yes, it somehow doesn't feel right to me too. And no, I can't quite explain why Crockford's object function fails in this. It's just the way the world works I guess.</p> <p><strong>update</strong>: Here's the related discussion I was thinking of: <a href="http://stackoverflow.com/questions/2107776/implementing-instance-methods-variables-in-prototypal-inheritance">Implementing instance methods/variables in prototypal inheritance</a></p>