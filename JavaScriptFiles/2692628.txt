My JavaScript Object is too big
<p>I am creating a really big JavaScript object on page load. I am getting no error on firefox but on Internet Explorer I am getting an error saying:</p> <blockquote> <p>Stop running this script ? A script on this page is causing your web browser to run slowly. If it continues to run, your computer might become unresponsive.</p> </blockquote> <p>Is there any size limit for Javascript objects in Internet Explorer ? Any other solutions but not dividing the object?</p>
<p>that is not because of the size but because of the big quantity of loops you are executing and the big execution time. if you cut it into smaller parts it should work ok.</p> <p>Try lowering the complexity of functions your running. Can you post it so that we can look at the loops and try to help?</p> <p>Edit:</p> <p>I supose you want to do all that on the client side for some reason. The code seems to need to much execution to be runing on the client side.</p> <p>Can't you do the calculations on the server side? If this is all to initialize the object, you can cache it to avoid reprocessing and just send a generated json to the javascript side.</p> <p>It does seem cachable</p>
<p>You must be using big loops or some recursive logic in the code. It really doesn't depend on the size of the objectâ€”it depends on the CPU resources it uses (memory, processor, etc.).</p>
<p>The key to the message your receiving is the "run slowly" part, which relates to time. So, your issue is not object size, but the time taken to construct the object. </p> <p>To refine things even further, the issue is not the time taken to construct the object either. Rather, IE counts the number of javascript statements it executes, resetting this count when it executes an event handler or a setTimeout function. </p> <p>So, you can prevent this problem by splitting your code into multiple pieces that run inside calls to setTimeout(...);</p> <p>Here's an example that may push you in the right direction:</p> <pre><code>var finish = function(data) { // Do something with the data after it's been created }; var data = []; var index = 0; var loop; loop = function() { if (++index &lt; 1000000) { data[index] = index; setTimeout(loop, 0); } else { setTimeout(function(){ finish(data); }, 0); } } setTimeout(loop, 0); </code></pre>
<p>The resources available to JavaScript are limited by the resources on the client computer.</p> <p>It seems that your script is using too much processing time while creating that object, and the 'stop script' mechanism is kicking in to save your browser from hanging.</p> <p>The reason why this happens on Internet Explorer and not on Firefox is probably because the JavaScript engine in Firefox is more efficient, so it does not exceed the threshold for the 'stop script' to get triggered.</p>