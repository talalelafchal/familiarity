Javascript window close event rather than unload event for all browsers
<p>I want to alert a user while the user tries to close the browser with out siginingoff or without saving some settings.</p> <p>I am ding unload option in another page to alert unload data, but how can i alert a user on window.close(its not taking)</p> <pre><code>window.onbeforeunload = confirmExit; function confirmExit(){ if(readCookie("onlineVD") == "playing" &amp;&amp; Confirm_Delete=="0") { return "You are leaving a video which is in play mode.Are you sure want to exit this page?"; } else{ Confirm_Delete="0"; } } </code></pre> <p>I want window.close for on tab close and on window close in all browsers.</p> <p>Please find me a solution</p>
<p>The <a href="https://developer.mozilla.org/en/DOM/window.onbeforeunload" rel="nofollow noreferrer">Mozilla documentation</a> indicates that you should set the event.returnValue instead of simply returning a string:</p> <pre><code>window.onbeforeunload = confirmExit; function confirmExit(e){ if(readCookie("onlineVD") == "playing" &amp;&amp; Confirm_Delete=="0") { var msg = "You are leaving a video which is in play mode.Are you sure want to exit this page?"; if (e) { e.returnValue = msg; } return msg; } else{ Confirm_Delete="0"; } } </code></pre>
<p>The event code you have already seems to work when I test it. You just need to return false to stop the browser from closing. The user will be asked if they're sure they want to navigate away from the page.</p> <p>I'm using this shortened version of your code:</p> <pre><code>window.onbeforeunload = confirmExit; function confirmExit(){ alert("confirm exit is being called"); return false; } </code></pre>