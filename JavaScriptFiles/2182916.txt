javascript tricks. Why (a,b,c) =&gt; 5
<p>.</p> <pre><code>var a,b,c = function() { return 5; }; </code></pre> <p>Variables a and b is undefined, c is function, why when we do this (a,b,c)() we have 5 ?</p>
<p>Because <code>(a,b,c)</code> evaluates to <code>c</code>.</p> <p>See the <a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/Comma_Operator" rel="nofollow noreferrer">comma</a> operator. Works the same way in C, C++.</p>
<p>The declaration is the same as:</p> <pre><code>var a; var b; var c = function() { return 5; }; </code></pre> <p>or practically the same as:</p> <pre><code>var a; var b; function c() { return 5; }; </code></pre> <p>Using <code>(a,b,c)</code> has nothing to do with the declaration, it simply returns the last operand, so <code>(a,b,c)()</code> is exactly the same as <code>c()</code> (as long as evaluating a and b doesn't have any side effects).</p>
<p>I came across the similar puzzle recently:</p> <pre><code>var f = function(a,b,c){ return a, b, {x:a+b, y:a+c} } </code></pre> <p>and the result of <code>f(1,2,3)</code> is <code>{x:3, y:4}</code>, so I think that the expression <code>(a,b,c)</code> always evaluates to <code>c</code>.</p>