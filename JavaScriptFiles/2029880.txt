Javascript RegExp string pattern
<p>I need to check JS matches for a dynamically generated string.</p> <p>ie.</p> <pre><code>for(i=0; i&lt; arr.length; i++) { pattern_1="/part of "+arr[i]+" string!/i"; if( string.search(pattern_1) != -1) arr_num[i]++; } </code></pre> <p>However, this code doesn't work - I presume due to the quotes. How do I do this?</p> <p>Many thanks.</p>
<p>The <code>/pattern/</code> literal only works as, well, a literal. Not within a string. </p> <p>If you want to use a string pattern to create a regular expression, you need to create a new RegExp object:</p> <pre><code>var re = new RegExp(pattern_1) </code></pre> <p>And in that case, you would omit the enclosing frontslashes (<code>/</code>). These two lines are equivalent:</p> <pre><code>var re = /abc/g; var re = new RegExp("abc", "g"); </code></pre>
<p>The problem is that you are passing a string to the <code>search</code> function so it treats it as a string. Try using a RegExp object like so:</p> <pre><code>myregexp = new RegExp("part of " + arr[i] + " string!", "i") if (string.search(myregexp) != -1) { arr_num[i]++; } </code></pre>
<p>Try this:</p> <pre><code>// note you dont need those "/" and that "i" modifier is sent as second argument pattern_1= new RegExp("part of "+arr[i]+" string!", "i"); </code></pre>