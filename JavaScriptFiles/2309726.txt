Why can't I use addition like this in foreach?
<p>Javascript's foreach equivalent:</p> <pre><code>for ( var i in products ) { document.write("Write" + i + 1 ); } </code></pre> <p>Output:</p> <pre><code>Write01 </code></pre> <p><strong>Edit:</strong> I tried parsing <code>i</code> into an integer.</p> <pre><code>for ( var i in products ) { document.write("Write" + parseInt(i) + 1 ); } </code></pre>
<p>Because <code>i</code> is a number, but gets cast to a string by the first <code>+</code>. Use this:</p> <pre><code>for ( var i in products ) { document.write(""); document.write("Write" + (i + 1) ); // ------------------------------------------^ } </code></pre>
<p>The issue here is <a href="https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Operators/Operator_Precedence" rel="nofollow noreferrer">operator precedence</a>. As shown in that table, the + operator associates left-to-right.</p> <p>So:</p> <pre><code>a + b + c </code></pre> <p>Is grouped as follows:</p> <pre><code>((a + b) + c) </code></pre> <p>So in your original code, the expression is grouped as follow:</p> <pre><code>("Write" + i) + 1 </code></pre> <p>In other words, it's a string concatenation followed by another string concatenation. Since you intend to do the arithmetic addition (i + 1) first, you'd have to group them explicitly:</p> <pre><code>"Write" + (i + 1) </code></pre>