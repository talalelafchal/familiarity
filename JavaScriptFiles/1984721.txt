How to handle 'undefined' in javascript
<blockquote> <p><strong>Possible Duplicate:</strong><br> <a href="http://stackoverflow.com/questions/27509/detecting-an-undefined-object-property-in-javascript">Detecting an undefined object property in JavaScript</a> </p> </blockquote> <p>From the below javascript sample</p> <pre><code> try { if(jsVar) { proceed(); } }catch(e){ alert(e); } </code></pre> <p>this jsVar is declared and initialed in another js fine.</p> <p>The problem is that code throws undefined error when this code is executed before the other file (where its declared and initiated) is executed. That is why it is surrounded by try and catch.</p> <p>Whats the best way to handle this undefined error than try catch?</p>
<p>You can check the fact with</p> <pre><code>if (typeof(jsVar) == 'undefined') { ... } </code></pre>
<p>In javascript, the following values will cause the if condition to fail and not execute its statement: null, undefined, false, NaN, the number 0 and the empty string ''. </p> <p>Assuming that the variable jsVar is a boolean and that we want to call the proceed() method when jsVar is true, we can do the following check.</p> <pre><code>if (jsVar &amp;&amp; jsVar == true) proceed(); </code></pre> <p>The above code snippet first check that jsVar has been defined and then checks that its value is true. The if condition will be satisfied only if both the conditions are met.</p> <p>If jsVar is not a boolean then we can substitute the appropriate check in place of jsVar == true in the code above.</p>
<p>As is often the case with JavaScript, there are multiple ways to do this:</p> <pre><code>typeof foo !== 'undefined' window.foo !== undefined 'foo' in window </code></pre> <p>The first two should be equivalent (as long as <code>foo</code> isn't shadowed by a local variable), whereas the last one will return <code>true</code> if the global varible is defined, but not initialized (or explicitly set to <code>undefined</code>).</p>