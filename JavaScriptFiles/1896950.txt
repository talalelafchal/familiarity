JS: How do we work with classes in CSS?
<p>How do we manipulate the class of DOM elements with javascript? Is there a getElementsByClassName function?</p>
<p><strong>Standard way is</strong></p> <pre><code>error_message.className = 'error-message'; </code></pre> <p><strong>But you'll find these functions can simplify things a lot:</strong></p> <pre><code>function hasClass(ele,cls) { return ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)')); } //chekcs if selected element has class "cls", works for elements with multiple classes function addClass(ele,cls) { if (!this.hasClass(ele,cls)) ele.className += " "+cls; } //adds new class to element function removeClass(ele,cls) { if (hasClass(ele,cls)) { var reg = new RegExp('(\\s|^)'+cls+'(\\s|$)'); ele.className=ele.className.replace(reg,' '); } } //removes class from element </code></pre> <p><strong>Usage in a stackoverflow greasemonkey script to show all questions on page, regardless if they're ignored or not:</strong></p> <pre><code>var childNodes=document.getElementById("questions").childNodes; //array of all questions for (var i=1; i&lt;childNodes.length; i+=2) //iterates through all questions on page. { removeClass(childNodes[i],"tagged-ignored-hidden"); addClass(childNodes[i],"user_defined_class"); } </code></pre> <p>(Don't worry if the for loop looks weird in that it skips every other element; the specifics of Stackoverflow's DOM layout with extra nodes between questions aren't important here.)</p> <p>As to document.getElementsByClassName, it returns an array of DOM elements with the specific class (as you would suspect). BUT:</p> <blockquote> <p>Safari 3.1 has native getElmentsByClassName support, and upcoming Firefox 3 and Opera 9.5 will have it too. It only leaves out, you’ve guessed it, Internet Explorer.</p> </blockquote> <p><a href="http://robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/" rel="nofollow noreferrer">source</a></p>
<p>You can change a class in plain-old JavaScript using something like:</p> <pre><code>document.getElementById('myElement').className = 'myClass'; </code></pre> <p>Or, if you're using JQuery, you can just use the <a href="http://docs.jquery.com/Attributes" rel="nofollow noreferrer">"Class" functions</a>.</p> <p><b>Addressing the added details to the question about 'getElementsByClassName' and your comment:</b></p> <p>It would probably be safest (and easiest) to use your favourite JavaScript library for this.</p> <p>JQuery example:</p> <pre><code>$(".myClassName").each(function() { //do what you want with the current element $(this) }); </code></pre> <p>Hope that helps.</p>
<p>Many JavaScript implementations do have a <code>getElementsByClassName</code> method built in. But if they don’t, you can implement it for yourself:</p> <pre><code>if (typeof Element.prototype.getElementsByClassName == "undefined") { Element.prototype.getElementsByClassName = function(className) { var elems = document.getElementsByTagName("*"), matches = []; for (var i=0, n=elems.length; i&lt;n; ++i) { if (elems[i].hasAttribute("class")) { var classNames = elems[i].getAttribute("class").split(/\s+/); for (var j=0,m=classNames.length; j&lt;m; ++j) { if (classNames[j] == className) { matches.push(elems[i]); break; } } } } return new NodeList(matches); }; } </code></pre>