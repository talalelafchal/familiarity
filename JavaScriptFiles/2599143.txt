return type of modal dialog box is undefined
<p>I am using the modal dialog box to open the modal dialog. Here is the code</p> <pre><code>var Window; function PopDis() { Window=window.showModalDialog('/collector/modalBox.jsp', '', 'dialogHeight:300px; dialogWidth:500px;scroll:no; status:no; help:no; center:yes; resizable:no'); } </code></pre> <p>In another function i want to close the modal dialog. Code is</p> <pre><code>function CloseModalDialog() { alert("in fun close"+Window); Window.close(); } </code></pre> <p>But var Window is undefined hence unable to close the window. Please give me the solution.</p>
<p>That means the variable <code>Window</code> is out of scope. </p> <p>Without knowing the rest of the code one quick way to fix it would be using the window variable. Like this:</p> <pre><code>function PopDis() { window.win = window.showModalDialog('/collector/modalBox.jsp', 'win', 'dialogHeight:300px; dialogWidth:500px;scroll:no; status:no; help:no; center:yes; resizable:no'); } </code></pre> <p>In another place that has access to window (the browser window, not your modal window):</p> <pre><code>function CloseModalDialog() { alert("in fun close"+win); window.win.close(); window.win = undefined; } </code></pre> <p>It's not pretty and most people don't recommend using this, though.</p> <p><em>Edit</em>: The window variable of the browser's javascript is usually global. So this <em>should</em> work.</p>
<p>The showModalDialog is a blocking call. No other operation on the parent page will be possible till the dialog itself is closed. </p> <p>So, even if you call a javascript in the next line after ShowModalDialog() it will not be executed till the dialog is actually closed...</p> <p>You will be able to close the dialog from the page which is shown in the dialog (assuming you have control to change the code in the page shown). But nothing will be excuted on the parent page till the modal dialog is closed.</p> <p>HTH</p>
<p>To elucidate on Sunny's answer (+1), the <code>Window</code> variable will not even be assigned until <code>showModalDialog</code> has finished, which doesn't happen until the dialog window has closed.</p> <p>In any case, <code>showModalDialog</code> <em>does not return a window object</em> — obviously, for the reason above, it would be pointless to do so. It returns the “returnValue” given by the code in the dialog itself. The dialog can only be closed by code inside the dialog, which doesn't need a <code>Window</code> variable because it can just use its own <code>window</code> global.</p> <p>If you need to interact with a dialog from outside its document, what you want isn't a modalDialog.</p> <p>If you want a user experience that doesn't totally suck, what you want isn't a modalDialog.</p>