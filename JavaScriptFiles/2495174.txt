Javascript - Do I need to use 'var' when reassigning a variable defined in the function's parameters?
<p>I've found many definitions of the 'var' statement but most of them are incomplete (usually from introductory guides/tutorials). Should I use 'var' if the variable &amp; scope has been declared in the params list?</p> <pre><code>someFunc = function(someVar) { // Is it considered good practice to use 'var', even if it is redundant? var someVar = cheese; }; </code></pre>
<p>Nope, the order in which names are defined when entering an execution scope is as follows:</p> <ol> <li>function parameters (with value passed or <code>undefined</code>)</li> <li>special name <code>arguments</code> (with value of arguments if doesn't exist)</li> <li>function declarations (with body brought along)</li> <li>variable declarations (with <code>undefined</code> if doesn't exist)</li> <li>name of current function (with body brought along, if doesn't exist)</li> </ol> <p>This means that in this code, <code>foo</code> refers to the function parameter (which could easily be changed):</p> <pre><code>function foo(foo) { var foo; alert(foo); } foo(1); // 1 </code></pre> <p>If you're using a function declaration inside for <code>foo</code>, that body will override all others. Also, note that this means that you can do this:</p> <pre><code>function foo(arguments) { alert(arguments); } foo(); // undefined foo(1); // 1 </code></pre> <p>Don't do that.</p>
<p>"I've found many definitions of the 'var' statement but most of them are incomplete."</p> <p>Try this (a bit stuffy but hopefully complete :-) ): The var keyword declares a new variable and binds it to the current lexical scope. In other words, the variable will not exist outside of the function that declares it. Function parameters are implicitly bound to that function's scope so do not require the var keyword.</p>
<p>No. In Javascript, you can mess with the function argument all you want.</p> <p>Consider this code, which you see all over the Web and which is used to make code work in standard and IE event models:</p> <pre><code>function someEventHandler(event) { event= (event) ? event : window.event; // statements } </code></pre>
<p>The answer is no, you shouldnâ€™t be doing this. <strong>This is actually considered a bad practice!</strong></p> <p><a href="http://jslint.com/" rel="nofollow noreferrer">JS Lint</a> throws the following error when analyzing your code example:</p> <blockquote> <p>Problem at line 5 character 16: <code>someVar</code> is already defined.</p> </blockquote>