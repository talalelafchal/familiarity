javascript textarea scrollTop
<p>I'm trying to enable checkbox once the user reads all the agreement. Yet, well, I've tried googling with no avail and also confused. I'm trying to get the "real" end of scrollTop, but due to different rendering engines (gecko, webkit, blah blah? ) a fixed value won't work. </p> <p>This is part of my learning so please avoid posting solutions with libraries. </p> <p>Any suggestions? </p>
<p>You can try using <code>scrollHeight</code> property of the textarea and compare it to <code>scrollTop</code> - if they're equal the user is at the very bottom.</p>
<p><code>your_textarea.scrollTop + your_textarea.offsetHeight - your_textarea.scrollHeight</code> should give you what you want. It may be off by a few pixels, so I would probably allow it if it was in the ~ -20 range. For example, I pasted a huge long sequence of random nonsense in a textarea and scrolled to the bottom, then ran that code and it gave me -2. This is because there are sometimes some blank lines at the bottom. If there are no blank lines, then in theory that value should be 0 (be sure to use <code>===</code> to compare to 0.)</p> <p>In theory. </p>
<p>find the height of the scrolling container (assuming it has <code>id="scroll"</code>)</p> <pre><code>var container_real_height = document.getElementById('scroll').offsetHeight </code></pre> <p>now calculate </p> <pre><code>var container_content_height = document.getElementById('scroll').scrollHeight; var container_scroll_amount = document.getElementById('scroll').scrollTop; </code></pre> <p>if container_content_height = container_scroll_amount + container_real_height (+- a few pixels) then you are at bottom..</p>
<p>Here's my implementation using a threshold (4 in this case) to determine if the textarea is scrolled to the bottom (or almost the bottom). I've included the display of the calculated value as well.</p> <p>The metric used are <code>scrollHeight</code>, <code>scrollTop</code> and jQuery's element <code>height()</code>.</p> <p>Threshold of '4' works for IE8, Webkit browsers and FF3.5. FF3.5 and Safari (Windows) can go all the way to 0.</p> <pre><code>&lt;html&gt; &lt;head&gt; &lt;script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" &gt; $(function() { $('#cb').hide(); //hide checkbox var scrollThreshold = 4; //threshold value var ta0 = $("#ta"); var ta = $("#ta")[0]; $("#ta").scroll(function(){ var p = ta.scrollHeight - (ta.scrollTop + ta0.height()); $('#pos').val(ta.scrollHeight + ' - (' + ta.scrollTop + ' + ' + ta0.height() + ') = ' + p); if(p &lt;= scrollThreshold) //if scroll value falls within threshold $('#cb').show(); //show checkbox } ); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;textarea id="ta" style="width: 200px; height: 100px;"&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.&lt;/textarea&gt; &lt;br /&gt; &lt;input type="text" id="pos" /&gt; &lt;input type="checkbox" id="cb" /&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>Here's the screenshot for Safari: </p> <p><img src="http://i46.tinypic.com/nej3ft.jpg" alt="On Safari"></p>