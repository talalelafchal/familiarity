How to programattically change an inputs onblur?
<p>I am trying to change the value of the onblur attribute of a text input after the page has finished loading.</p> <p>When I do the following, it simply fires the function:</p> <p><code>ip.onblur = stopCalcUpInt(this,10);</code></p> <p>When I do the following, I have success:</p> <p><code>ip.onblur = function onblur(event){stopCalcUpInt(this,10);}</code></p> <p>Unfortunately, the whole point of this is to be able to dynamically set the second parameter for stopCalcUpInt(). If I hard code a value for it... it works fine... but any attempts to pass varibles to this fails... instead of putting the value of the variable as the second param it just puts the plain text of the variable name itself. Here is ideally what I am TRYING to do:</p> <p><code>ip.onblur = function onblur(event){stopCalcUpInt(this,this.value);}</code></p> <p>In this example, when I alert the ip.onblur I get:</p> <p><img src="https://imgur.com/ihuA7.png" alt=""></p>
<p>It depends what <code>this</code> is intended to refer to. In an event handler <code>this</code> refers to the element on which the event is being handled. If that's what you want then your code looks good as written; <code>this</code> will point to <code>ip</code>.</p> <p>If you intend <code>this</code> to refer to the <code>this</code> from outside the event handler and not <code>ip</code> then try this:</p> <pre><code>var self = this; ip.onblur = function(event) { stopCalcUpInt(self, self.value); }; </code></pre>
<pre><code>ip.onblur = function() {stopCalcUpInt(this,this.value);} </code></pre>
<p><code>ip.onblur</code> is an event handler... i.e. it's a function</p> <p>Now, when you alert a function, FF will show you the source code for that function (if it's user defined).</p> <p>That is why you're seeing the plain text of the variable name.</p> <p>For an event handler, <code>this</code> is the element that is currently handling the event. So, if you're setting the <code>onblur</code> handler of an input box, you will have access to the contents of that input box.</p> <p>The code sample that you provided:</p> <pre><code> ip.onblur = function onblur(event){stopCalcUpInt(this,this.value);} </code></pre> <p>should work correctly. Try</p> <pre><code> ip.onblur = function onblur(event){alert(this.value); stopCalcUpInt(this,this.value);} </code></pre> <p>if you want to be sure</p>
<p>Is stopCalcUpInt expecting a number in the second parameter? The value attribute will return a String, while in your hardcoded example you're passing a number type. Try this:</p> <pre><code>ip.onblur = function onblur(event){stopCalcUpInt(this,this.value * 1);} </code></pre> <p>As explained in <a href="http://www.quirksmode.org/js/strings.html" rel="nofollow noreferrer">QuirksMode</a>:</p> <blockquote> <p>Since multiplying assumes numbers, JavaScript makes the string a number, if possible.</p> </blockquote>
<p>The answer to getting this to work was super easy, yet not overly obvious. Instead of:</p> <p><code>ip.onblur = function onblur(event){stopCalcUpInt(this,this.value);}</code></p> <p>I did this:</p> <p><code>ip.setAttribute('onblur','stopCalcUpInt(this,\'' + ip.value + '\');');</code></p> <p>Works perfectly... no more banging my head against the wall! Yay!</p>