access outer &quot;this&quot; in Javascript sort method
<p>I have this code:</p> <pre><code>function some_object(...) { this.data = {...}; this.do_something = function(...) { var arr = [...]; arr.sort(function (a, b) { return this.data[a] - this.data[b]; }); } } </code></pre> <p>However it's not working I think because <code>this</code> cannot be accessed in <code>sort</code> - another <code>this</code> is seen there for some reason, not the <code>this</code> of enclosing outer object.</p> <p>What to do? thanks</p>
<p>The different <code>this</code> is because the the anonymous function (its own closure) called by <code>arr.sort</code> calls the function with <code>this</code> being set to a different item than your main object. In an Array.sort, I am not actually sure what <code>this</code> is set to, but it is probably the Array you are sorting. A normal work around in this situation is to use another variable:</p> <pre><code>function some_object(...) { var so = this; // so = current `this` this.data = {...}; this.do_something = function(...) { var arr = [...]; arr.sort(function (a, b) { return so.data[a] - so.data[b]; }); } } </code></pre>
<p>Since your sort algorithm doesn't depend on anything within <code>do_something</code> (other than that provided by the array), consider moving the function outside of <code>do_something</code>:</p> <pre><code>function some_object(...) { var so = this; so.data = {...}; var comparator = function(a,b) { return so.data[a] - so.data[b]; }; this.do_something = function(...) { var arr = [...].sort(comparator); } } </code></pre> <p>Or, even provide a simple factory if you do this kind of sorting elsewhere:</p> <pre><code>var comparatorFactory = function(data) { return function(a,b) { return data[a] - data[b]; } }; function some_object(...) { var so = this; so.data = {...}; var comparator = comparatorFactory(so.data); ... </code></pre>
<p>You can bind the "outer" instance to the "inner" function by invoking the <code>bind</code> method on the inner function. Learn more at <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind" rel="nofollow">MDN</a>.</p> <p>Example: <a href="https://jsfiddle.net/eheobo/twv3emh7/1/" rel="nofollow">https://jsfiddle.net/eheobo/twv3emh7/1/</a></p> <pre><code>var foo = { data: [1, 2, 3, 4], bar: function () { var printData = function(){ this.data.forEach(a =&gt; console.info(a)) }.bind(this) printData() } } foo.bar() </code></pre>