how do you get the response back into the instance of the object?
<p>If you've written a class in JavaScript that calls a remote service's API, and that remote API offers a callback, how do you get the response back into the instance of the object that made the request?</p> <p>I'll try to give you a very basic example FOO for making cross domain calls to BAR service which offers a callback. Please ignore the usual security concerns, (I own both servers).</p> <pre><code>function FOO() { this.response = null; this.execute = function(url) { var script = document.createElement('script'); script.src = url; document.getElementsByTagName('head')[0].appendChild(script); } this.catch = function(response) { this.response = response; } } var sample = new FOO(); sample.execute('http://barservices.com/sample/?callback={ plshelphere: this.catch}'); </code></pre> <hr> <p>I have a way to make this work, but I'm curious if there is an "accepted approach" here.</p> <p>Anyone have thoughts for me?</p>
<p>I dunno if I understand 100%, so let me double check:</p> <ul> <li>You want to write a custom JavaScript object/class.</li> <li>It should serve as a facade to encapsulate the logic of communicating with a remote Web Service.</li> <li>This service is on a different domain.</li> </ul> <p>But I don't follow why you create a element. Why aren't you instead using an 'Xml Http Request?'</p> <p>Nonetheless, I'd recommend some reading about the Ajax Proxy "Pattern": <br /> <a href="http://www.springerlink.com/content/mn623501w3h0n166/" rel="nofollow noreferrer">http://www.springerlink.com/content/mn623501w3h0n166/</a> <br /> <a href="http://ajaxpatterns.org/Cross-Domain_Proxy" rel="nofollow noreferrer">http://ajaxpatterns.org/Cross-Domain_Proxy</a></p> <p>... and the GoF Facade Pattern <br /> <a href="http://en.wikipedia.org/wiki/Facade_pattern" rel="nofollow noreferrer">http://en.wikipedia.org/wiki/Facade_pattern</a></p>
<p>As long as sample is declared in the global namespace you could just use:</p> <pre><code>sample.execute('http://barservices.com/sample/?callback=sample.catch'); </code></pre> <p>If not then, there are a few other options. You could setup a global set of callbacks and add a new one to it ala <a href="http://gist.github.com/110884" rel="nofollow noreferrer">http://gist.github.com/110884</a> You could use a framework that has functions for this sort of thing(jQuery et al)</p> <p>If your service doesn't care what your function looks like, you could pass it a bare function.(twitter strips this stuff out).</p> <pre><code>(function(){alert('I work')}) </code></pre>