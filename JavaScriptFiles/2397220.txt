Can I pass a value out of a javascript function?
<p>Can I pass a value out of a javascript function and back to the calling function, e.g.</p> <pre><code>function updateURL(url, name, param) { url = url + "&amp;" + name + "=" + param; } </code></pre> <p>I want to update url and return the new value.</p> <p>Is this possible?</p>
<pre><code>function parentFunction() { var url = 'http://www.example.com?qs=1'; var name = 'foo'; var param= 'bar'; var newUrl = updateURL(url, name, param); } function updateURL(url, name, param) { url = url + "&amp;" + name + "=" + param; return url; } </code></pre>
<pre><code>var myUrl = updateUrl('url', 'name', 'param'); function updateURL(url, name, param) { url = url + "&amp;" + name + "=" + param; return url; } </code></pre>
<p>What you're asking for is called "<a href="http://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_reference" rel="nofollow noreferrer">pass-by-reference</a>". Javascript uses "<a href="http://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_value" rel="nofollow noreferrer">pass-by-value</a>" for the native types (int, string, etc)---other types are pass-by-reference. For your specific case, I can think of two ways to get what you want. The first is to require callers to pass in an array with a single element and modify that element:</p> <pre><code>function updateURL(url, name, param) { url[0] = url[0] + "&amp;" + name + "=" + param; } url = ['http://www.google.com/?']; updateURL(url, 'foo', 'bar'); alert(url[0]); </code></pre> <p>The second method would be to use an attribute on an object:</p> <pre><code>function updateURL(url, name, param) { url.url = url.url + "&amp;" + name + "=" + param; } url = new Object(); url.url = 'http://www.google.com/?'; updateURL(url, 'foo', 'bar'); alert(url.url); </code></pre>