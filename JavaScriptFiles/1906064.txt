Gauss error function implementation for JavaScript
<p>Is there a free (BSD- or MIT-licensed) <a href="http://en.wikipedia.org/wiki/Error_function" rel="nofollow noreferrer">Gauss error function</a> implementation written in <a href="http://en.wikipedia.org/wiki/JavaScript" rel="nofollow noreferrer">JavaScript</a>?</p>
<p>Here is the code, using the <a href="http://en.wikipedia.org/wiki/Error_function#Approximation_with_elementary_functions" rel="nofollow">approximation from wikipedia</a> as described in Peter Mortensen's response Original credit goes to <a href="http://en.wikipedia.org/wiki/Abramowitz_and_Stegun" rel="nofollow">Abramowitz and Stegun</a>.</p> <pre><code> function erf(x) { var z; const ERF_A = 0.147; var the_sign_of_x; if(0==x) { the_sign_of_x = 0; return 0; } else if(x&gt;0){ the_sign_of_x = 1; } else { the_sign_of_x = -1; } var one_plus_axsqrd = 1 + ERF_A * x * x; var four_ovr_pi_etc = 4/Math.PI + ERF_A * x * x; var ratio = four_ovr_pi_etc / one_plus_axsqrd; ratio *= x * -x; var expofun = Math.exp(ratio); var radical = Math.sqrt(1-expofun); z = radical * the_sign_of_x; return z; } </code></pre>
<p>I did some research on Gaussian approximation. My best found in accuracy/performance is :</p> <p>var gaussrand = (Math.random()+Math.random()+Math.random()+Math.random()+Math.random()+Math.random()-3);</p> <p>This trick may seem ugly but it give your a null average and sigmaÂ²=1/2 as expected.</p> <p>I hope this will help. </p>