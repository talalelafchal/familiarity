get js file query param from inside it
<p>I load this file with some query param like this:<br/> <code><strong>src='somefile.js?userId=123'</strong></code></p> <p>I wrote the below function in 'somefile.js' file that reads the 'userId' query param<br/> but I feel this is not the best approach. Frankly, its quite ugly. <strong>Is there a better way</strong>?</p> <pre><code>function getId(){ var scripts = document.getElementsByTagName('script'), script; for(var i in scripts){ if( scripts.hasOwnProperty(i) &amp;&amp; scripts[i].src.indexOf('somefile.js') != -1 ) var script = scripts[i]; } var s = (script.getAttribute.length !== undefined) ? script.getAttribute('src') : script.getAttribute('src', 2); return getQueryParams('userId',s); }; </code></pre>
<p>Reading the <code>script</code> elements in the <code>head</code> section is the way to go. There's an <a href="http://feather.elektrum.org/book/src.html" rel="nofollow noreferrer">article</a> with sample code. This approach seems fragile as the name of the script is hardcoded and if it is renamed it might break.</p>
<p>Alternative ways are:</p> <ol> <li>Just set a JS variable with that value. E.g. <code>&lt;script&gt;var userId = 123;&lt;/script&gt;</code>.</li> <li>Put the value in a hidden (input) element somewhere in the HTML DOM and access it the usual way.</li> </ol> <p>That said, keep in mind that JS code runs at the client side and is fully controllable by the client. You should for instance really not let the JS do some user-specific logic which is <em>dependent</em> on the userId. In such case, rather keep the userId in session in the server side and make use of ajax to get the result.</p>
<pre><code>// extracts the params from the currently running (external) script var getScriptQp = (function(){ var scripts = document.getElementsByTagName('script'); var this_script_tag = scripts[scripts.length - 1]; //script tag of this file if( typeof this_script_tag != undefined &amp;&amp; this_script_tag.src ) var s = this_script_tag.src; else{ return this.customer; } return s; })(); // gets the Query Params of a givver query string function getQueryParam(name, query){ name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]"); var regexS = "[\\?&amp;]" + name + "=([^&amp;#]*)"; var regex = new RegExp(regexS); var results = regex.exec(query); if (results == null) return ""; else return results[1]; } getQueryParam( 'param',getScriptQp ); </code></pre>
<p>Someone correct me if I'm wrong, but I'm pretty sure that if you pass your params via the URL to your script it essentially means that the client will never cache your JS file, since everytime it appears as a different URL and will be re-downloaded.</p>