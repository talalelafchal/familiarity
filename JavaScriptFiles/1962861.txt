JavaScript alert box with timer
<p>I want to display the alert box but for a certain interval. Is it possible in JavaScript?</p>
<pre><code>setTimeout( function ( ) { alert( "moo" ); }, 10000 ); //displays msg in 10 seconds </code></pre>
<p>If you want an alert to appear after a certain about time, you can use this code:</p> <pre><code>setTimeout(function() { alert("my message"); }, time); </code></pre> <p>If you want an alert to appear and disappear after a specified interval has passed, then you're out of luck. When an <code>alert</code> has fired, the browser stops processing the javascript code until the user clicks "ok". This happens again when a <code>confirm</code> or <code>prompt</code> is shown.</p> <p>If you want the appear/disappear behavior, then I would recommend using something like <a href="http://docs.jquery.com/UI/Dialog" rel="nofollow noreferrer">jQueryUI's dialog widget</a>. Here's a quick example on how you might use it to achieve that behavior.</p> <pre><code>var dialog = $(foo).dialog('open'); setTimeout(function() { dialog.dialog('close'); }, time); </code></pre>
<p>In short, the answer is no. Once you show an <code>alert</code>, <code>confirm</code>, or <code>prompt</code> the script no longer has control until the user returns control by clicking one of the buttons.</p> <p>To do what you want, you will want to use DOM elements like a <code>div</code> and show, then hide it after a specified time. If you need to be modal (takes over the page, allowing no further action) you will have to do additional work. </p> <p>You could of course use one of the many "dialog" libraries out there. One that comes to mind right away is the <a href="http://jqueryui.com/demos/dialog/" rel="nofollow noreferrer">jQuery UI Dialog widget</a></p>
<p>If you are looking for an alert that dissapears after an interval you could try the jQuery UI Dialog widget.</p>
<p>May be it's too late but the following code works fine</p> <pre><code>document.getElementById('alrt').innerHTML='&lt;b&gt;Please wait, Your download will start soon!!!&lt;/b&gt;'; setTimeout(function() {document.getElementById('alrt').innerHTML='';},5000); &lt;div id='alrt' style="fontWeight = 'bold'"&gt;&lt;/div&gt; </code></pre>
<p>tooltips can be used as alerts. These can be timed to appear and disappear.</p> <p>CSS can be used to create tooltips and menus. More info on this can be found in 'Javascript for Dummies'. Sorry about the label of this book... Not infuring anything. </p> <p>Reading other peoples answers here, I realized the answer to my own thoughts/questions. SetTimeOut could be applied to tooltips. Javascript could trigger them.</p>
<p>I finished my time alert with a unwanted effect.... Browsers add stuff to windows. My script is an aptated one and I will show after the following text.</p> <p>I found a CSS script for popups, which doesn't have unwanted browser stuff. This was written by Prakash:- <a href="https://codepen.io/imprakash/pen/GgNMXO" rel="nofollow">https://codepen.io/imprakash/pen/GgNMXO</a>. This script I will show after the following text.</p> <p>This CSS script above looks professional and is alot more tidy. This button could be a clickable company logo image. By suppressing this button/image from running a function, this means you can run this function from inside javascript or call it with CSS, without it being run by clicking it. </p> <p>This popup alert stays inside the window that popped it up. So if you are a multi-tasker you won't have trouble knowing what alert goes with what window.</p> <p>The statements above are valid ones.... (Please allow). How these are achieved will be down to experimentation, as my knowledge of CSS is limited at the moment, but I learn fast. </p> <p>CSS menus/DHTML use mouseover(valid statement). </p> <p>I have a CSS menu script of my own which is adapted from 'Javascript for dummies' that pops up a menu alert. This works, but text size is limited. This hides under the top window banner. This could be set to be timed alert. This isn't great, but I will show this after the following text.</p> <p>The Prakash script above I feel could be the answer if you can adapt it.</p> <p>Scripts that follow:- My adapted timed window alert, Prakash's CSS popup script, my timed menu alert.</p> <p>1.</p> <pre><code>&lt;html&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;script language="JavaScript"&gt; // Variables leftposition=screen.width-350 strfiller0='&lt;table border="1" cellspacing="0" width="98%"&gt;&lt;tr&gt;&lt;td&gt;&lt;br&gt;'+'Alert: '+'&lt;br&gt;&lt;hr width="98%"&gt;&lt;br&gt;' strfiller1='&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; This alert is a timed one.'+'&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;' temp=strfiller0+strfiller1 // Javascript // This code belongs to Stephen Mayes Date: 25/07/2016 time:8:32 am function preview(){ preWindow= open("", "preWindow","status=no,toolbar=no,menubar=yes,width=350,height=180,left="+leftposition+",top=0"); preWindow.document.open(); preWindow.document.write(temp); preWindow.document.close(); setTimeout(function(){preWindow.close()},4000); } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type="button" value=" Open " onclick="preview()"&gt; &lt;/body&gt; &lt;/html&gt; </code></pre> <p>2.</p> <pre><code>&lt;style&gt; body { font-family: Arial, sans-serif; background: url(http://www.shukatsu-note.com/wp-content/uploads/2014/12/computer-564136_1280.jpg) no-repeat; background-size: cover; height: 100vh; } h1 { text-align: center; font-family: Tahoma, Arial, sans-serif; color: #06D85F; margin: 80px 0; } .box { width: 40%; margin: 0 auto; background: rgba(255,255,255,0.2); padding: 35px; border: 2px solid #fff; border-radius: 20px/50px; background-clip: padding-box; text-align: center; } .button { font-size: 1em; padding: 10px; color: #fff; border: 2px solid #06D85F; border-radius: 20px/50px; text-decoration: none; cursor: pointer; transition: all 0.3s ease-out; } .button:hover { background: #06D85F; } .overlay { position: fixed; top: 0; bottom: 0; left: 0; right: 0; background: rgba(0, 0, 0, 0.7); transition: opacity 500ms; visibility: hidden; opacity: 0; } .overlay:target { visibility: visible; opacity: 1; } .popup { margin: 70px auto; padding: 20px; background: #fff; border-radius: 5px; width: 30%; position: relative; transition: all 5s ease-in-out; } .popup h2 { margin-top: 0; color: #333; font-family: Tahoma, Arial, sans-serif; } .popup .close { position: absolute; top: 20px; right: 30px; transition: all 200ms; font-size: 30px; font-weight: bold; text-decoration: none; color: #333; } .popup .close:hover { color: #06D85F; } .popup .content { max-height: 30%; overflow: auto; } @media screen and (max-width: 700px){ .box{ width: 70%; } .popup{ width: 70%; } } &lt;/style&gt; &lt;script&gt; // written by Prakash:- https://codepen.io/imprakash/pen/GgNMXO &lt;/script&gt; &lt;body&gt; &lt;h1&gt;Popup/Modal Windows without JavaScript&lt;/h1&gt; &lt;div class="box"&gt; &lt;a class="button" href="#popup1"&gt;Let me Pop up&lt;/a&gt; &lt;/div&gt; &lt;div id="popup1" class="overlay"&gt; &lt;div class="popup"&gt; &lt;h2&gt;Here i am&lt;/h2&gt; &lt;a class="close" href="#"&gt;&amp;times;&lt;/a&gt; &lt;div class="content"&gt; Thank to pop me out of that button, but now i'm done so you can close this window. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; </code></pre> <p>3.</p> <pre><code>&lt;HTML&gt; &lt;HEAD&gt; &lt;TITLE&gt;Using DHTML to Create Sliding Menus (From JavaScript For Dummies, 4th Edition)&lt;/TITLE&gt; &lt;SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript"&gt; &lt;!-- Hide from older browsers function displayMenu(currentPosition,nextPosition) { // Get the menu object located at the currentPosition on the screen var whichMenu = document.getElementById(currentPosition).style; if (displayMenu.arguments.length == 1) { // Only one argument was sent in, so we need to // figure out the value for "nextPosition" if (parseInt(whichMenu.top) == -5) { // Only two values are possible: one for mouseover // (-5) and one for mouseout (-90). So we want // to toggle from the existing position to the // other position: i.e., if the position is -5, // set nextPosition to -90... nextPosition = -90; } else { // Otherwise, set nextPosition to -5 nextPosition = -5; } } // Redisplay the menu using the value of "nextPosition" whichMenu.top = nextPosition + "px"; } // End hiding--&gt; &lt;/SCRIPT&gt; &lt;STYLE TYPE="text/css"&gt; &lt;!-- .menu {position:absolute; font:10px arial, helvetica, sans-serif; background-color:#ffffcc; layer-background-color:#ffffcc; top:-90px} #resMenu {right:10px; width:-130px} A {text-decoration:none; color:#000000} A:hover {background-color:pink; color:blue} --&gt; &lt;/STYLE&gt; &lt;/HEAD&gt; &lt;BODY BGCOLOR="white"&gt; &lt;div id="resMenu" class="menu" onmouseover="displayMenu('resMenu',-5)" onmouseout="displayMenu('resMenu',-90)"&gt;&lt;br /&gt; &lt;a href="#"&gt; Alert:&lt;/a&gt;&lt;br&gt; &lt;a href="#"&gt; &lt;/a&gt;&lt;br&gt; &lt;a href="#"&gt; You pushed that button again... Didn't yeah? &lt;/a&gt;&lt;br&gt; &lt;a href="#"&gt; &lt;/a&gt;&lt;br&gt; &lt;a href="#"&gt; &lt;/a&gt;&lt;br&gt; &lt;a href="#"&gt; &lt;/a&gt;&lt;br&gt; &lt;/div&gt; ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd &lt;input type="button" value="Wake that alert up" onclick="displayMenu('resMenu',-5)"&gt; &lt;/BODY&gt; &lt;/HTML&gt; </code></pre>