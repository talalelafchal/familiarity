dynamically add/remove style in javascript
<p>Is there a way in any browser to add/remove class names? For example, if I have a div with class names and I just want to remove/add 'name2' is there a way to do that?</p> <p>Thanks, rodchar</p>
<p>If you can use jQuery:</p> <p>to remove: </p> <p><code>$('#div1').removeClass('name2')</code></p> <p>to add: </p> <p><code>$('#div1').addClass('name2')</code></p> <p>If you can't use jQuery, I found this url</p> <p><a href="http://snipplr.com/view/3561/addclass-removeclass-hasclass/" rel="nofollow noreferrer">http://snipplr.com/view/3561/addclass-removeclass-hasclass/</a></p> <pre><code>function hasClass(ele,cls) { return ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)')); } function addClass(ele,cls) { if (!this.hasClass(ele,cls)) ele.className += " "+cls; } function removeClass(ele,cls) { if (hasClass(ele,cls)) { var reg = new RegExp('(\\s|^)'+cls+'(\\s|$)'); ele.className=ele.className.replace(reg,' '); } } </code></pre> <p>Honestly, I haven't used the non-jquery approach but it seems enough</p>
<p>There <em>will</em> be a standard way to do this. HTML5 introduces the <a href="http://dev.w3.org/html5/spec/Overview.html#domtokenlist" rel="nofollow noreferrer">classList</a> property, which works like this:</p> <pre><code>element.classList.add('foo'); element.classList.remove('bar'); if (element.classList.contains('bof')) element.classList.toggle('zot'); </code></pre> <p>Firefox 3.6 already has this feature and it's being worked on in WebKit.</p> <p>Here is a pure-JS implementation:</p> <pre><code>// HTML5 classList-style methods // function Element_classList(element) { if ('classList' in element) return element.classList; return { item: function(ix) { return element.className.trim().split(/\s+/)[ix]; }, contains: function(name) { var classes= element.className.trim().split(/\s+/); return classes.indexOf(name)!==-1; }, add: function(name) { var classes= element.className.trim().split(/\s+/); if (classes.indexOf(name)===-1) { classes.push(name); element.className= classes.join(' '); } }, remove: function(name) { var classes= element.className.trim().split(/\s+/); var ix= classes.indexOf(name); if (ix!==-1) { classes.splice(ix, 1); element.className= classes.join(' '); } }, toggle: function(name) { var classes= element.className.trim().split(/\s+/); var ix= classes.indexOf(name); if (ix!==-1) classes.splice(ix, 1); else classes.push(name); element.className= classes.join(' '); } }; } // Add ECMA262-5 string trim if not supported natively // if (!('trim' in String.prototype)) { String.prototype.trim= function() { return this.replace(/^\s+/, '').replace(/\s+$/, ''); }; } // Add ECMA262-5 Array indexOf if not supported natively // if (!('indexOf' in Array.prototype)) { Array.prototype.indexOf= function(find, from /*opt*/) { for (var i= from || 0, n= this.length; i&lt;n; i++) if (i in this &amp;&amp; this[i]===find) return i; return -1; }; } </code></pre> <p>This does mean you have to write:</p> <pre><code>Element_classList(element).add('foo'); </code></pre> <p>which is slightly less nice, but you'll get the advantage of the fast native implementation where avaialble.</p>
<p>its easy with javascript to change class name with any event for eg.</p> <pre><code>&lt;script&gt; function changeClas() { document.getElementById('myDiv').className='myNewClass'; } &lt;/script&gt; &lt;div id="myDiv" onmouseover='changeClas()' class='myOldClass'&gt; Hi There&lt;/div&gt; </code></pre>