Get all input type password
<p>I'm new in javascript. I want to get all input type password on my html page.</p> <p>I know that there is a way to do this kind off things using Javascript, but I don't know how.</p> <p>Then, with each one, I want to assign an event on text changed.</p> <p>How can I do this?</p> <p>Thanks</p>
<p>I presume you mean </p> <pre><code>&lt;input type="password"&gt; </code></pre> <p>If so, you can try a function like this:</p> <pre><code>function getPwdInputs() { var ary = []; var inputs = document.getElementsByTagName("input"); for (var i=0; i&lt;inputs.length; i++) { if (inputs[i].type.toLowerCase() === "password") { ary.push(inputs[i]); } } return ary; } </code></pre>
<p>This is untested, but something like this should work:</p> <pre><code>var allElem = document.getElementsByTagName(’input’) for (i=0; i &lt; allElem.length; i++) { if (allElem[i].getAttribute(’type’)==‘password’) { allElem[i].onchange = //&lt;your onchange function&gt; } } </code></pre>
<p>You can do this easily using <a href="http://jquery.com/" rel="nofollow noreferrer">jQuery</a>:</p> <pre><code>jQuery("input[type='password']").change( function() { // check input ($(this).val()) for validity here }); </code></pre>
<p><a href="http://jquery.com/" rel="nofollow noreferrer">jQuery</a> is your friend here. With jQuery, it's as easy as using the selector:</p> <pre><code>$('input[type=password]'); </code></pre> <p>and then binding a <code>changed</code> listener to each:</p> <pre><code>$('input[type=password]').change(function () { // do whatever here }); </code></pre>
<p>I hope Robusto doesn't mind me extending his solution a bit for a solution that will perform better on the modern browsers. Chrome, Safari, IE8 and Firefox all support <a href="https://developer.mozilla.org/En/DOM/Document.querySelectorAll" rel="nofollow noreferrer"><code>querySelectorAll</code></a>, so it seems more appropriate to use that if it's available.</p> <pre><code>function getPwdInputs() { // If querySelectorAll is supported, just use that! if (document.querySelectorAll) return document.querySelectorAll("input[type='password']"); // If not, use Robusto's solution var ary = []; var inputs = document.getElementsByTagName("input"); for (var i=0; i&lt;inputs.length; i++) { if (inputs[i].type.toLowerCase() === "password") { ary.push(inputs[i]); } } return ary; } </code></pre> <p>NB. It shouldn't be a problem but it might be worth noting that <code>querySelectorAll</code> will return a collection, whereas the fallback method will return an array. Still not a big deal, they both have the <code>length</code> property and there members are accessed the same way.</p>