JavasScript: Why does my_array.length not work?
<p>Version 1:</p> <pre><code>var spamfoo = new Array(); spamfoo.push(['name', 'url']); spamfoo.push(['dog', 'cat']); alert(spamfoo); // Alerts: name,url,dog,cat alert(spamfoo.length); // Alerts: 2 // ??? (shouldn't this be 4?) </code></pre> <p>Version 2:</p> <pre><code>var spamfoo = new Array(); spamfoo.push(['name', 'url']); spamfoo = spamfoo + ['dog', 'cat']; alert(spamfoo); // Alerts: name,url,dog,cat alert(spamfoo.length); // Alerts: 15 // ??? (this one I wasn't sure about anyways because I didn't know if you could add an array) </code></pre> <p>How is this possible? Doesn't <code>['value', 'value']</code> make an array and doesn't?</p>
<p>You want to flatten those arrays before pushing them. Try this:</p> <pre><code>var spamfoo = []; Array.prototype.push.apply(spamfoo, ["name", "url"]); Array.prototype.push.apply(spamfoo, ["dog", "cat"]); alert(spamfoo.length); // alerts 4 </code></pre>
<p>The answer is that <code>my_array.length</code> does work but you're missing some of the implicit type conversions that are happening and what <code>push()</code> does.</p> <p>In the first example, you are creating a multidimensional array. Technically it's an array of arrays rather than a true multidimensional array. The first code snippet creates this array of arrays:</p> <pre><code>[ ["name", "url"], ["dog", "cat"] ] </code></pre> <p>which is of length 2 so that result is correct.</p> <p>The second example's use of the concatenation operator <code>+</code> converts <code>spamfoo</code> to a string, which means that <code>length</code> is now returning the string length. The string length is 15 so this too is correct.</p> <p>You might want to add this line to your examples:</p> <pre><code>alert(typeof spamfoo); </code></pre> <p>If so you'll see the first example displays <code>object</code> and the second displays <code>string</code>.</p>
<p>For the first part, you'll get a nested array (2x2), hence <code>spamfoo.length</code> returns 2. It looks like:</p> <pre><code>[ ['name', 'url'], ['dog', 'cat'] ] </code></pre> <p>The second part, is as <a href="http://stackoverflow.com/questions/2226084/javasscript-why-does-my-array-length-not-work/2226107#2226107">cletus said above</a>, is a type casting into string</p>
<p>Do it like this</p> <p>var spamfoo = new Array(); var x=["name", "url","d"]; spamfoo.push("name", "url","d"); spamfoo.push("xxxx"); //spamfoo.push('dog');</p> <p>// Alerts: name,url,dog,cat alert(spamfoo.length);</p>
<p>The first one I posted is wrong. There is the extra "var x=xxxxxxxxx"</p> <p>This is the correct one. </p> <pre><code>var spamfoo = new Array(); spamfoo.push("name", "url","d"); spamfoo.push("xxxx"); //spamfoo.push('dog'); // Alerts: name,url,dog,cat alert(spamfoo.length); </code></pre> <p>K prime is right.. This is a mistake spamfoo.push(['name', 'url']); spamfoo.push(['dog', 'cat']);</p> <p>Your inserting an array into an array object.</p>