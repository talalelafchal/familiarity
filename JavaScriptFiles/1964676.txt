how to set to call a function from the current object using settimer
<pre><code>function Something() { this.var1 = 0; this.var2 = 2; this.mytimer; this.getCars=function() { //some code }; this.start = function(l) { this.updateTimer=setInterval("this.getCars();" , 5000); }; } var smth = new Something(); smth.start(); </code></pre> <p>When I type in this.getCars() it does not work. if the function is global declared and i put in for example just getCars it works. I don't know how to work out this problem because setInterval becomes as parameter a String.</p> <p>Can somebody help me put with this?</p>
<pre><code>var me = this setInterval(function() {me.getCars()}, 5000) </code></pre> <p>if you happen to be using <a href="http://www.prototypejs.org" rel="nofollow noreferrer">prototype</a>, you could also use the handy <a href="http://www.prototypejs.org/api/function/bind" rel="nofollow noreferrer">bind</a> method:</p> <pre><code>setInterval(this.getCars.bind(this), 5000) </code></pre>
<p>Try this:</p> <pre><code>function Something() { this.var1 = 0; this.var2 = 2; this.mytimer; var me = this; this.getCars = function() { console.log(me.var2); }; this.start = function(l) { me.updateTimer = setInterval(me.getCars, 1000); } } var smth = new Something(); smth.start(); </code></pre> <p>The <code>console.log()</code> bit is Firefox/Firebug. Replace it with something else if you're not using that (although I would highly recommend developing with it).</p> <p>Basically the problem is that when you call a function, even a method of an object, the way you call it determines the value of <code>this</code>. See <a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/this_Operator#Method_binding" rel="nofollow noreferrer">Method binding</a> for more details. So what you do is fix the value of <code>this</code> as I've done in the above example (for methods).</p>