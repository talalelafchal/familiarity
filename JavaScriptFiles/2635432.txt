Javascript - value of document.write(false == null)
<p>What is the value of <code>document.write(false == null)</code>. It should be <strong>true</strong> right (converted to same type before comparing - <strong>null</strong> is converted to <strong>false</strong>), if null is false then comparision should return true, but printing <strong>false</strong>. Why?</p>
<p>Edit: my original answer was completely incorrect....the below IS correct</p> <pre><code>(false == null) === false (!null) === true </code></pre> <p>The 4th or 5th most popular answer in this post: <a href="http://stackoverflow.com/questions/1995113/strangest-language-feature">Strangest language feature</a> has a javascript truth comparison table.</p>
<p>Your initial assumption is incorrect (as you may have worked out by the output!). <code>==</code> does indeed do type coercion, but there result is not necessarily what you expect. <code>null</code> is an object, whose type is null - <code>false</code> is an object whose type is boolean. There is no coercion under which objects of the <code>null</code> and <code>boolean</code> types can be equal, which is why this is false.</p> <p><code>undefined</code> objects, on the other hand, <em>can</em> be coerced to null.</p> <p>Note that the double-equals operator behaves in a bizarre way due to this - <em>it's not even transitive</em>. I would strongly suggest against its use unless somehow you know exactly how it will behave under your domain of inputs and you're sure you want this. It will almost certainly be better to coerce manually and use the <code>===</code> operator instead.</p>