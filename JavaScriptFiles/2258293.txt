Convert dd.mm.yyyy format to yyyy-mm-dd
<p>How can I convert dd.mm.yyyy format date to yyyy-mm-dd format in JavaScript?</p> <p>Here is an example:</p> <pre><code>30.01.2010 to 2010-01-30 </code></pre> <p>Meaning convert d.m.Y to Y-m-d. I know how to do this in PHP but I need it in JavaScript.</p>
<p><a href="http://www.datejs.com/" rel="nofollow noreferrer">Datejs</a> can parse that. The code is at <a href="http://datejs.googlecode.com/files/date.js" rel="nofollow noreferrer">http://datejs.googlecode.com/files/date.js</a></p> <p>EDIT: It is <em>not</em> safe to left date.js determine the format string automatically. I made the mistake of not testing with a day &lt;= 12 (duh). You should use:</p> <pre><code>Date.parseExact('09.01.2010', 'd.M.yyyy').toString('yyyy-MM-dd'); </code></pre> <p>or</p> <pre><code>Date.parseExact('09.01.2010', 'dd.MM.yyyy').toString('yyyy-MM-dd'); </code></pre> <p>depending on whether you want to allow single digit days.</p>
<p>Datejs is a bit bloated if you only need to do this. You can use <code>split()</code> and concatenate the results:</p> <pre><code>var eu_date = '30.01.2010'; var parts = eu_date.split('.'); var us_date = parts[2]+'-'+parts[1]+'-'+parts[0]; </code></pre> <p>For these kinds of conversions where no date logic is needed, it's usually smartest to just use string manipulation tools.</p>
<p>You can do this pretty simply. Just split the european date into an array, reverse it, and then join it with dashes.</p> <pre><code>var euro_date = '30.01.2010'; euro_date = euro_date.split('.'); var us_date = euro_date.reverse().join('-'); </code></pre>
<pre><code> function stringToDate( value ) { var isEuro = value.match( /^\d{1,2}\.\d{1,2}\.\d{4}$/ ) var isIso = value.match( /^\d{4}-\d{1,2}-\d{1,2}$/ ) if ( isEuro ) { value = value.split('.') value = [value[2],value[1],value[0]].join('-') //.reverse() isn't working in IEdge isIso = true } if ( isEuro || isIso ) { var date = new Date( value ) } if ( isNaN( date.getTime() ) || !isIso ) { return false } return date } stringToDate('30.01.2000') //Sun Jan 30 2000 00:00:00 GMT+0100 (CET) stringToDate('30.1.2000') //Sun Jan 30 2000 01:00:00 GMT+0100 (CET) stringToDate('2000-01-30') //Sun Jan 30 2000 01:00:00 GMT+0100 (CET) stringToDate('2000-1-30') //Sun Jan 30 2000 01:00:00 GMT+0100 (CET) </code></pre>