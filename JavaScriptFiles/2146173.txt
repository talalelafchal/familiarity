How to get local variable by its name in JS?
<p>Working example with global var:</p> <pre> var example_var = 'global var example'; var x = function(){ var var_name = 'example_var'; alert('Global var value is: ' + window[var_name]); } </pre> <p>How can I do same thing with a local variable? Like this (not working example):</p> <pre> var x = function(){ var example_var = 'Local var example'; var var_name = 'example_var'; alert('Local var value is: ' + window[var_name]); } </pre>
<p>possibly:</p> <pre><code>var x = function(){ var example_var = 'Local var example'; var var_name = example_var; alert('Local var value is: ' + var_name); } </code></pre> <p>or:</p> <pre><code> var x = function(){ var example_var = 'Local var example'; window.var_name = example_var; alert('Local var value is: ' + window[var_name]); } </code></pre> <p>or</p> <pre><code> var x = function(){ var var_name = 'Local var example'; alert('Local var value is: ' + var_name); } </code></pre>
<p>If you have no other way, you can try <code>eval</code> it</p> <pre><code>var x = function(){ var example_var = 'Local var example'; var var_name = 'example_var'; alert('Local var value is: ' + eval(var_name)); } </code></pre>
<p>At the moment there are two solutions to this problem.<br> 1. eval(), but i really don't like to use evil()<br> 2. we can change variable declaration from var to this:</p> <pre> var x = function(){ this.example_var = 'this.var example'; this.var_name = 'example_var'; alert('Local variable value is: ' + this[var_name]); } </pre>
<p>You don't want to use <code>eval</code>; a locally scoped object might be your best option:</p> <pre><code>var x = function(){ var self = {}; self.example_var = 'Local var example'; var var_name = 'example_var'; alert('Local var value is: ' + self[var_name]); } </code></pre>