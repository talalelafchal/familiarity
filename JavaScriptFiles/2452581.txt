IE's responseXML.getElementsByTagName() unable to handle non English character?
<p>I have a javascript that does this (http is your XMLHttpRequest object)</p> <pre><code>var r = http.responseXML.getElementsByTagName('item'); </code></pre> <p>The issue is variable r is always an empty list if the response contains non-English character (r.length is 0).</p> <p>The response header is correctly set Content-Type: text/xml;charset=ISO-8859-1</p> <p>This is what the response from the webserver looks like</p> <pre><code>&lt;?xml version='1.0' encoding='UTF-8'?&gt; &lt;d&gt; &lt;r&gt; &lt;item value="jmob" label="John MÃ¶b"/&gt; &lt;/r&gt; &lt;/d&gt; </code></pre> <p>It happens only in IE (both IE6 and IE8), works in Firefox and Chrome. If items contain only English characters, it works fine. </p> <p>Is there a workaround for this ?</p>
<p>You said the response header was correctly set, but it's not. You're serving a UTF-8 document, so it should be:</p> <blockquote> <p><code>Content-Type: text/xml;charset=UTF-8</code></p> </blockquote> <p>There could be an issue with IE taking the content-type header literally. I can't say I've ever run into this problem, but I don't use <code>getElementsByTagName</code> because it doesn't work with namespaces. You could use <code>selectSingleNode()</code> or <code>selectNodes()</code> instead:</p> <pre><code>// Using recursive descent (//) to find all item nodes var r = http.responseXML.documentElement.selectNodes("//item"); // Specifying the exact path to the item nodes var r = http.responseXML.documentElement.selectNodes("r/item"); </code></pre> <p>XPath gives you much more power than <code>getElementsByTagName</code>. You might even find that, using the right path, you can ditch one or two of your <code>if</code> statements. For full XPath syntax, see <a href="http://msdn.microsoft.com/en-us/library/ms256471(VS.85).aspx" rel="nofollow noreferrer">http://msdn.microsoft.com/en-us/library/ms256471(VS.85).aspx</a>.</p>