Don't fire onfocus when selecting text?
<p>I'm writing a JavaScript chatting application, but I'm running into a minor problem.</p> <p>Here is the HTML structure:</p> <pre><code>&lt;div id="chat"&gt; &lt;div id="messages"&gt;&lt;/div&gt; &lt;textarea&gt;&lt;/textarea&gt; &lt;/div&gt; </code></pre> <p>When the user clicks/focuses on the chat box, I want the textbox to be automatically focused. I have this <code>onfocus</code> handler on the chat box:</p> <pre><code>chat.onfocus = function () { textarea.focus(); } </code></pre> <p>This works, but the problem is that in Firefox, this makes it impossible to select text in the messages <code>div</code>, since when you try to click on it, the focus shifts to the <code>textarea</code>. How can I avoid this problem?</p> <p>(Semi-related issues: In Chrome, <code>textarea.focus()</code> doesn't seem to shift the keyboard focus to the <code>textarea</code>; it only highlights the box. IE8 does not seem to respond to the <code>onfocus</code> at all when clicking, even if it <code>tabindex</code> is set. Any idea why?)</p>
<p>you might want to try setTimeout to focus the text area, something like this :</p> <pre><code>setTimeout(function() { textarea.focus(); }, 1000); </code></pre>
<p>Event onfocus exist only for form elements: LABEL, INPUT, SELECT, TEXTAREA and BUTTON. Using onclick event for chatbox.</p>
<p>What if you used the on mouse up event instead. Then check if the user has anything selected, if not give textarea focus. does that make sense?</p> <p>about the cross-browser issues you could look into jQuery or another javascript library. You don't need the whole thing if your not going to use it but you could grab the parts to make focus work in all browsers.</p>
<p>I've found a solution to automatically select a textarea when clicking on the chat while still being able to select text: simply change <code>div</code> into <code>label</code>. </p> <pre><code>&lt;label id="chat" style="display: block"&gt; &lt;div id="messages"&gt;&lt;/div&gt; &lt;textarea&gt;&lt;/textarea&gt; &lt;/label&gt; </code></pre> <p>Unfortunately, Firefox has a bug where it overcorrects and forces <code>label</code> to be inline, but this can be fixed by dynamically creating it using JavaScript.</p>