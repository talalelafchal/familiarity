Javascript: invoke default keydown event handler
<p>I'd like to invoke default keydown event handler from javascript. Is it possible?</p>
<p>There is no default keydown event. The keydown event occurs when the key is pressed on any form elements, followed immediately by the keypress event, and possibly the textInput event on text box when you enter a value. Then the keyup event is generated when the key is released The following example shows the use of the onKeyDown event handler to display a message in the text box. </p> <pre><code>&lt;body&gt;&lt;form action="" method="POST" id="myForm"&gt;&lt;input type="text" name="myText" onKeyDown="changeVal()"&gt;&lt;script type="text/javascript" language="JavaScript"&gt;s1 = new String(myForm.myText.value)function changeVal() { s1 = "You pressed a key" myForm.myText.value = s1.toUpperCase() }&lt;/script&gt;&lt;/form&gt;&lt;/body&gt; </code></pre>
<p>If the event has an explicit event handler you can just invoke it directly:</p> <pre><code>// Precondition - the element has an explicit handler registered element.onkeydown(); </code></pre> <p>Otherwise, there's no way to explicitly tell the browser to do "what it would have done anyway". The only way to get this to happen is to not stop the event from bubbling - which can be a real pain if you want to set a timeout and then allow the event to continue, it's essentially not possible.</p> <p>In most cases, though, you can invoke your own code on an event handler and let the keyDown event continue to the browser. And if this isn't possibel for whatever reason, you can usually write your own method that will simulate the effects of the event (e.g. change the content of an input field, submit the form, etc.)</p>