dynamically create element using javascript
<p>I need to create textbox dynamically when user click a link.And also i need to remove that textbox according to user decission.I am trying the following script.</p> <pre><code> &lt;script language="JavaScript" type="text/javascript"&gt; var Dom = { get: function(el) { if (typeof el === 'string') { return document.getElementById(el); } else { return el; } }, add: function(el, dest) { var el = this.get(el); var dest = this.get(dest); dest.appendChild(el); }, remove: function(el) { var el = this.get(el); el.parentNode.removeChild(el); } }; var Event = { add: function() { if (window.addEventListener) { return function(el, type, fn) { Dom.get(el).addEventListener(type, fn, false); }; } else if (window.attachEvent) { return function(el, type, fn) { var f = function() { fn.call(Dom.get(el), window.event); }; Dom.get(el).attachEvent('on' + type, f); }; } }() }; Event.add(window, 'load', function() { var i = 0; Event.add('add-element', 'click', function() { var el = document.createElement('p'); el.innerHTML = '&lt;br&gt;&lt;input type="text"&gt;Remove(' + ++i + ')'; Dom.add(el, 'content'); Event.add(el, 'click', function(e) { Dom.remove(this); }); }); }); &lt;/script&gt; &lt;style&gt; #add-element { cursor: pointer; } &lt;/style&gt; &lt;body&gt; &lt;div id="doc"&gt; &lt;p id="add-element"&gt;Add Elements&lt;/p&gt; &lt;div id="content"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; </code></pre> <p>It will create element and remove the element.But, it not allow me to enter text in newly created textbox( if i need).What is wrong with me.Please help to go forward...please</p>
<p>try this.</p> <pre><code> &lt;script LANGUAGE="JavaScript"&gt; function addElement() { var num = document.getElementById('theValue').value; if(num == "0"){ var ni = document.getElementById('pop'); var newdiv = document.createElement('div'); var divIdName = 'newDiv'; newdiv.setAttribute('id',divIdName); newdiv.innerHTML = " &lt;table&gt;"+ "&lt;tbody&gt;"+ "&lt;tr&gt;"+ "&lt;td&gt;Name&lt;/td&gt;"+ "&lt;td&gt;&lt;input type=\"text\" id=\"name\" value=\"\" /&gt;&lt;/td&gt;"+ "&lt;/tr&gt;"+ " &lt;tr&gt;"+ "&lt;td&gt;&lt;/td&gt;"+ "&lt;td&gt;&lt;input type=\"submit\" value=\"save\" onclick=\"removeElement()\"/&gt;&lt;/td&gt;"+ "&lt;/tr&gt;"+ "&lt;/tbody&gt;"+ " &lt;/table&gt;"; ni.appendChild(newdiv); document.getElementById('theValue').value = "1"; } } function removeElement() { document.getElementById('theValue').value = "0"; var d = document.getElementById('pop'); var olddiv = document.getElementById('newDiv'); d.removeChild(olddiv); } &lt;/script&gt; &lt;body&gt; &lt;div id="doc"&gt; &lt;a href="javascript:addElement()"&gt;Add Element&lt;/a&gt; &lt;input type="hidden" value="0" id="theValue" /&gt; &lt;div id="pop"&gt;&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; </code></pre>
<blockquote> <p>What is wrong with me.</p> </blockquote> <p>Bit harsh on yourself there!</p> <p>You added the row-removing <code>click</code> event handler to the <code>&lt;p&gt;</code> element. Click events bubble up through their ancestors, so if you click in the <code>&lt;input&gt;</code> element to focus it, its parent <code>&lt;p&gt;</code> also receives a click, and consequently removes the row.</p> <p>I suggest putting the click event on the ‘remove’ text only. eg.:</p> <pre><code>var row= document.createElement('div'); val remover= document.createElement('div'); var input= document.createElement('input'); remover.appendChild(document.createTextNode('Remove('+(++i)+')')); row.appendChild(input); row.appendChild(remover); Dom.add(row, 'content'); Event.add(remover, 'click', function(e) { Dom.remove(row); }); </code></pre> <p>Though possibly it would be better for accessibility to make both the ‘Add’ and ‘Remove’ actions button​s (either <code>&lt;input type="button"&gt;</code> or <code>&lt;button&gt;</code>), styled not to look like buttons if you don't want them to.</p>
<p>Use a javascript framework like jquery or prototype. This will make sure your code is cross browser compatible and will also reduce the lines of code.</p>