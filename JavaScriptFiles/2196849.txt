javascript error while creating object
<p>While i am trying to create object like this</p> <pre><code>new Ext.TitleCheckbox () </code></pre> <p>I am getting "not a constructor error"</p> <p>my Object is</p> <pre><code>Ext.TitleCheckbox = { checked:false, constructor : function() { }, getHtml : function (config) { var prop = (!config.checked)?'checkbox-checked':'checkbox-unchecked'; var html = config.title+'&lt;div class="'+prop+'" onclick="Ext.TitleCheckbox.toggleCheck(this)"&gt;&amp;#160;&lt;/div&gt;'; return html; }, toggleCheck : function (ele){ if(ele.className == 'checkbox-checked') { ele.className = 'checkbox-unchecked'; } else if(ele.className == 'checkbox-unchecked') { ele.className = 'checkbox-checked'; } }, setValue : function(v){ this.value = v; }, getValue : function(){ return this.value; } }; </code></pre> <p>whats the mistake in here?</p>
<p><code>Ext.TitleCheckbox</code> is not a function, you cannot make a function call to an object literal.</p> <p>If you want to use the <code>new</code> operator, you should re-structure your code to make <code>TitleCheckbox</code> a <a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Creating_New_Objects/Using_a_Constructor_Function" rel="nofollow noreferrer">constructor function</a>.</p> <p>Something like this (<em>assumming that the <code>Ext</code> object exists</em>):</p> <pre><code>Ext.TitleCheckbox = function () { // Constructor logic this.checked = false; }; // Method implementations Ext.TitleCheckbox.prototype.getHtml = function (config) { //... }; Ext.TitleCheckbox.prototype.toggleCheck = function (ele) { //... }; Ext.TitleCheckbox.prototype.setValue = function (v) { //... }; Ext.TitleCheckbox.prototype.getValue = function () { //... }; </code></pre>
<p>See CMS's answer for why. As a work-around, if you <strong>really</strong> need to do this, you can do it via inheritence. In javascript Constructors inherit from objects (a constructor is just a function). So:</p> <pre><code>function MyCheckbox () {} ; /* all we really need is a function, * it doesn't actually need to do anything ;-) */ // now make the constructor above inherit from the object you desire: MyCheckbox.prototype = Ext.TitleCheckbox; // now create a new object: var x = new MyCheckbox(); </code></pre>