Is right click a Javascript event?
<p>Is right click a Javascript event? If so, how do I use it?</p>
<p>Yes, its a javascript mousedown event. There is a jQuery <a href="http://www.hotscripts.com/listing/jquery-right-click-plugin/" rel="nofollow noreferrer">plugin</a> too to do it</p>
<p>Yes - it is!</p> <pre><code>function doSomething(e) { var rightclick; if (!e) var e = window.event; if (e.which) rightclick = (e.which == 3); else if (e.button) rightclick = (e.button == 2); alert('Rightclick: ' + rightclick); // true or false } </code></pre>
<p>No, but you can detect what mouse button was used in the "onmousedown" event... and from there determine if it was a "right-click".</p>
<p>As others have mentioned, the right mouse button can be detected <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-MouseEvent" rel="nofollow noreferrer">through the usual mouse events (mousedown, mouseup, click)</a>. However, if you're looking for a firing event when the right-click menu is brought up, you're looking in the wrong place. The right-click/context menu is also accessible via the keyboard (shift+F10 or context menu key on Windows and some Linux). In this situation, the event that you're looking for is <code>oncontextmenu</code>:</p> <pre><code>window.oncontextmenu = function () { showCustomMenu(); return false; // cancel default menu } </code></pre> <p>As for the mouse events themselves, browsers set a property to the event object that is accessible from the event handling function:</p> <pre><code>document.body.onclick = function (e) { var isRightMB; e = e || window.event; if ("which" in e) // Gecko (Firefox), WebKit (Safari/Chrome) &amp; Opera isRightMB = e.which == 3; else if ("button" in e) // IE, Opera isRightMB = e.button == 2; alert("Right mouse button " + (isRightMB ? "" : " was not") + "clicked!"); } </code></pre> <p><a href="https://developer.mozilla.org/en/DOM/window.oncontextmenu" rel="nofollow noreferrer">window.oncontextmenu - MDC</a></p>
<p>have a look at the following jQuery code:</p> <pre><code>$("#myId").mousedown(function(ev){ if(ev.which == 3) { alert("Right mouse button clicked on element with id myId"); } }); </code></pre> <p>The value of <code>which</code> will be:</p> <ul> <li><strong>1</strong> for the left button</li> <li><strong>2</strong> for the middle button</li> <li><strong>3</strong> for the right button</li> </ul>
<p>Ya, though w3c says the right click can be detected by the click event, onClick is not triggered through right click in usual browsers.</p> <p>In fact, right click only trigger onMouseDown onMouseUp and onContextMenu.</p> <p>Thus, you can regard "onContextMenu" as the right click event. It's an HTML5.0 standard.</p>
<p>Handle event using <code>jQuery</code> library </p> <pre><code>$(window).on("contextmenu", function(e) { alert("Right click"); }) </code></pre>
<p>Yes, oncontextmenu is probably the best alternative but be aware that it triggers on mouse down whereas click will trigger on mouse up.</p> <p>Other related questions were asking about double right click - which apparently isn't supported except through manual timer checking. One reason you might want to be able to have right double click is if you need/want to support left-handed mouse input (button reversal). The browser implementations seem to make a lot of assumptions about how we should be using the available input devices.</p>
<p>The my answer is <code>window.oncontextmenu</code>:<br> <br><code>window.oncontextmenu = function (){ Function... }</code></p> <p>Example:<br> <div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>window.oncontextmenu = function (){ alert('Right Click') }</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;h1&gt;Please Right Click Result/Page!&lt;/h1&gt;</code></pre> </div> </div> </p>
<p>The following code is using jQuery to generate a custom <code>rightclick</code> event based on the default <code>mousedown</code> and <code>mouseup</code> events. It considers the following points:</p> <ul> <li>trigger on mouseup</li> <li>trigger only when pressed mousedown on the same element before</li> <li>this code especially also works in JFX Webview (since the <code>contextmenu</code> event is not triggered there)</li> <li>it does NOT trigger when the contextmenu key on the keyboard is pressed (like the solution with the <code>on('contextmenu', ...)</code> does</li> </ul> <p><div class="snippet" data-lang="js" data-hide="false"> <div class="snippet-code"> <pre class="snippet-code-js lang-js prettyprint-override"><code>$(function () { // global rightclick handler - trigger custom event "rightclick" var mouseDownElements = []; $(document).on('mousedown', '*', function(event) { if (event.which == 3) { mouseDownElements.push(this); } }); $(document).on('mouseup', '*', function(event) { if (event.which == 3 &amp;&amp; mouseDownElements.indexOf(this) &gt;= 0) { $(this).trigger('rightclick'); } }); $(document).on('mouseup', function() { mouseDownElements.length = 0; }); // disable contextmenu $(document).on('contextmenu', function(event) { event.preventDefault(); }); }); // Usage: $('#testButton').on('rightclick', function(event) { alert('this was a rightclick'); });</code></pre> <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt; &lt;button id="testButton"&gt;Rightclick me&lt;/button&gt;</code></pre> </div> </div> </p>
<p>If You want to call the function while right click event means we can use following </p> <pre><code> &lt;html lang="en" oncontextmenu="func(); return false;"&gt; &lt;/html&gt; &lt;script&gt; function func(){ alert("Yes"); } &lt;/script&gt; </code></pre>
<p>I recommend using ModularJS library. Its lightweight and has many features for your web app. In modular you can see right click just like this:</p> <pre><code> _m( '#myElement' ).oncontextmenu = function() { // Do something }; </code></pre>