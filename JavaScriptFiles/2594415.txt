Is it bad practice to not assign a new object to a variable?
<p>Is it bad javascript practice to not assign a newly created object to a variable if you're never going to access it?</p> <p>For example:</p> <pre><code>for(var i=0;i&lt;links.length;i++){ new objectName(links[i]); } </code></pre> <p>And again, I won't be accessing it, so there's no need for a variable to reference it.</p>
<p>That’s absolutely fine if you don’t need to use it again.</p>
<p>If you're not accessing it but it's still useful, that suggests that the constructor itself has visible side effects. Generally speaking, that's a bad idea.</p> <p>What would change if you didn't call the constructor at all?</p> <p>If your constructor is doing something to the global state, that strikes me as very bad. On the other hand, you <em>could</em> be using it just for the sake of validation - i.e. if the constructor returns without throwing an exception, it's okay. That's not <em>quite</em> so bad, but a separate method for validation would make things a lot clearer if that's the case.</p>
<blockquote> <p>"Is it bad javascript practice to not assign a newly created object to a variable if you're never going to access it?"</p> </blockquote> <p>I feel it is bad practice to make an assignment that is not needed, and, I would argue, not just for javascript but in general. If there are side-effects you want, getting them from the action of an assignment is bad practice for the simple reason that it would be fairly opaque from a maintenance point of view.</p> <p>.</p>
<p>It seems like your constructor is doing something else besides creating/initializing an object.</p> <p>It would be a cleaner solution to implement that extra functionality into a function or method.</p> <p>Constructors should be used to create and initialize objects.</p>