If I want to learn javascript by small project, what should I do?
<p>I found javascript is not so easy to master. And I want to dive into it. I think learning by using is a good way. Since javascript is different from other C-style language, what kind of project is good for learning? </p> <p>Thanks.</p>
<p>The first project I'd do is get JsUnit working and figure out how I'm going to run the tests I write for the rest of the project on a regular basis (as in, simulated or real continuous integration). </p>
<p>You can take up any project that involves an interactive UI, then build it as a web page.<br> It will give you a lot to learn about js, from syntax to event handling.</p> <p>E.g: a calculator</p>
<p>Since it's inevitable that people will suggest learning resources (whereas the question is about <em>projects</em>, here's a CW answer for people to use to list those resources.</p> <h3>Books</h3> <ul> <li><em>JavaScript: The Definitive Guide</em> (5th ed.) by David Flanagan. Good book from a good author. Getting a bit dated.</li> </ul> <h3>Online Resources</h3> <ul> <li><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm" rel="nofollow noreferrer">The Specification</a> (brand new 5th edition spec is out!). The language is turgid, but when you want to know <em>exactly</em> how something is supposed to work...</li> <li><a href="http://javascript.crockford.com/" rel="nofollow noreferrer">http://javascript.crockford.com/</a> Douglas Crockford is immensely knowledgeable about JavaScript. Not everyone (<em>myself included&nbsp;&mdash; T.J.</em>) agrees with all of Crockford's conclusions, especially around things like the <code>new</code> operator, but he does know his stuff and so if you take his various essays as observations to think about, not gospel, he's very educational and thought-provoking.</li> <li><a href="https://developer.mozilla.org/" rel="nofollow noreferrer">Mozilla Developer Center</a></li> </ul>
<p>Since you didn't post your age:<br> Playing around with Canvas might be a good start. The way I learned AS2 [which has similar functions and ECMAScript-style syntax, like JavaScript] was by creating a "Canvas"(MovieClip) and playing around with lineTo and moveTo. </p> <p>With that, you could write simple games like Pong [my first AS2 game] with a simple AI... </p> <p>Embarking on this project would cover: </p> <ol> <li>User Input</li> <li>Graphics</li> <li>Variables</li> <li>Flow Control</li> <li>setTimeout</li> <li>Logic </li> <li>Collision detection</li> </ol> <p>Pong is a great first project, because you can customize it all that you want. When I wrote my version, I made it so by holding Enter, you could place a block in the middle of the screen, that the ball would bounce off of. The possibilities are basically endless =/ </p> <hr> <p>If you're interested in more "classic" web development [non-RIA things]<br> You could go for a simple lights-out game, which would take around 30 minutes to write.</p>