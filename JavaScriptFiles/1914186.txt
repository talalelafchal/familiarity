How to calculate years and months between two dates in Javascript?
<p>Is there a way to calculate the count of years (considering leap years also) and months between two different dates in Javascript?</p>
<p>Have a look at the <a href="http://www.w3schools.com/js/js_obj_date.asp" rel="nofollow noreferrer">JavaScript Date object</a>.</p>
<p>You will find a complete <a href="http://javascript.internet.com/math-related/date-difference.html" rel="nofollow noreferrer">javascript function</a> here with validation.</p> <p>Edit: Link is dead - here is a simple JS line that calculates the difference in months between two dates:</p> <pre><code>return dateTo.getMonth() - dateFrom.getMonth() + (12 * (dateTo.getFullYear() - dateFrom.getFullYear())); </code></pre> <p>That is assuming that you have the dates in two variables called <code>dateTo</code> and <code>dateFrom</code>.</p>
<p>This might be a helpful source:</p> <p><a href="http://www.merlyn.demon.co.uk/js-date1.htm#DYMD" rel="nofollow noreferrer">http://www.merlyn.demon.co.uk/js-date1.htm#DYMD</a></p>
<p>Here is the best way I know to get years and months:</p> <pre><code>// Assumes Date From (df) and Date To (dt) are valid etc... var df= new Date("01/15/2010"); var dt = new Date("02/01/2012"); var allMonths= dt.getMonth() - df.getMonth() + (12 * (dt.getFullYear() - df.getFullYear())); var allYears= dt.getFullYear() - df.getFullYear(); var partialMonths = dt.getMonth() - df.getMonth(); if (partialMonths &lt; 0) { allYears--; partialMonths = partialMonths + 12; } var total = allYears + " years and " + partialMonths + " months between the dates."; var totalMonths = "A total of " + allMonths + " between the dates."; console.log(total); console.log(totalMonths); return {jaren: allYears, maanden: partialMonths}; </code></pre>