Dynamically positioning UILabel to bottom of content view with Swift?
I was trying to position my dynamically created UILabels to my contentView's bottom. I'm using HTML Parser called Fuzi to catch HTML tags and creating UILabels based on them; func stringFromHTML( _ string: String?) { do{ let doc = try HTMLDocument(string: string!, encoding: String.Encoding.utf8) if let root = doc.body { for element in root.children { if element.tag == "h2" { // Create new label let label = UILabel() label.text = element.stringValue label.numberOfLines = 0 label.font = UIFont(name: "Avenir Next", size: 17) label.textColor = UIColor.black self.contentView.addSubview(label) label.translatesAutoresizingMaskIntoConstraints = false // Label constraints let labelLeading = NSLayoutConstraint(item: label, attribute: .leading, relatedBy: .equal, toItem: contentView, attribute: .leading, multiplier: 1, constant: 20) let labelTrailing = NSLayoutConstraint(item: label, attribute: .trailing, relatedBy: .equal, toItem: contentView, attribute: .trailing, multiplier: 1, constant: -20) let labelTop = NSLayoutConstraint(item: label, attribute: .top, relatedBy: .equal, toItem: contentView, attribute: .top, multiplier: 1, constant: self.contentView.frame.origin.y) self.contentView.addConstraints([labelLeading, labelTrailing, labelTop]) } updateContentViewHeight() } } } catch{ print("html error\n",error) } } func updateContentViewHeight(){ var totalContentHeight:CGFloat = 0.0 for i in self.contentView.subviews { totalContentHeight += i.frame.height } let contentViewHeight:NSLayoutConstraint = NSLayoutConstraint(item: self.contentView, attribute: NSLayoutAttribute.height, relatedBy: NSLayoutRelation.equal, toItem: nil, attribute: NSLayoutAttribute.notAnAttribute, multiplier: 1, constant: totalContentHeight-29) self.contentView.addConstraint(contentViewHeight) } I tried calling my stringFromHTML function in viewDidAppear. But it positions my UILabels to far far away (they don't seem). I want to position my labels to the bottom of the last label, see the image below; Anyone can help? Thanks in advance!
Change let labelTop = NSLayoutConstraint(item: label, attribute: .top, relatedBy: .equal, toItem: contentView, attribute: .top, multiplier: 1, constant: self.contentView.frame.origin.y) To if label != nil { let labelTop = NSLayoutConstraint(item: label, attribute: .top, relatedBy: .equal, toItem: label[index], attribute: .top, multiplier: 1, constant: 2) } else { let labelTop = NSLayoutConstraint(item: label, attribute: .top, relatedBy: .equal, toItem: contentView, attribute: .top, multiplier: 1, constant: self.contentView.frame.origin.y) } Because you are basically forcing each label to be at the same y position.