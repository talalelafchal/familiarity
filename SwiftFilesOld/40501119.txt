Firebase: I can get value of node. It hurts me a week :(
I read a lot examples and most of them have old style (even they are written current year). Please help understand where my code is wrong? It is built but I can't get a value 123456. import UIKit import Firebase class ViewController: UIViewController { @IBOutlet weak var val_txt: UITextField! let ref = FIRDatabase.database().reference() var barcode = 0 override func viewDidLoad() { super.viewDidLoad() FIRAuth.auth()?.signIn(withEmail: "leonif1@gmail.com", password: "123456", completion: {(user,error) in print("Авторизация Ок!!!")}) } @IBAction func getData_btn(_ sender: Any) { ref.child("goods").child("1").observe(FIRDataEventType.value, with: {(snapshot) in let postDict = snapshot.value as? [String:AnyObject] ?? [:] print(postDict["barcode"] as? Int) }) print(barcode) } I've change code in order to understand Does print execute and I found that it doesn't print("Method started") ref.child("goods").child("1").observe(FIRDataEventType.value, with: {(snapshot) in let postDict = snapshot.value as? [String:AnyObject] ?? [:] print("Method is executing") }) print("Method completed") And I get just two rows of print "Method started" "Method completed"
Thank you for ask question... I think you done silly mistake in code. In your code let ref = FIRDatabase.database().reference() do not Point to reference URL because during initialization your firebase not configure in your app delegate file (Not called FIRApp.configure()). So please do put in func viewDidLoad() as follow... import UIKit import Firebase class ViewController: UIViewController { @IBOutlet weak var val_txt: UITextField! let ref:FIRDatabaseReference! var barcode = 0 override func viewDidLoad() { super.viewDidLoad() ref:FIRDatabaseReference = FIRDatabase.database().reference() FIRAuth.auth()?.signIn(withEmail: "leonif1@gmail.com", password: "123456", completion: {(user,error) in print("Авторизация Ок!!!")}) } Now everything's work perfectly... Hope it will help you.
If you want value only for "1": var ref: FIRDatabaseReference! ref = FIRDatabase.database().reference() ref.child("goods").child("1").observeSingleEvent(of: .value, with: { (snapshot) in let id = snapshot.childSnapshot(forPath: "barcode") print(id) }) but if you want all barcodes: var ref: FIRDatabaseReference! ref = FIRDatabase.database().reference() ref.child("goods").observeSingleEvent(of: .value, with: { (snapshot) in if let snapshots = snapshot.children.allObjects as? [FIRDataSnapshot] { for snap in snapshots { let barcode = snap.childSnapshot(forPath: "barcode").value! as! String print(barcode) } } })