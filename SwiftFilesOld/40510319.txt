UITapGestureRecognizer not working for specific [UIView] array
I have the following piece of code. It's a third party library for a menu (named CarbonKit). When I try to select a specific segment (tab) and add a gesture recognizer, it doesn't work. Any ideas what I'm doing wrong? To be clear, I placed a breakpoint in the handleTap, it it doesn't even enter the function.  override func viewDidLoad() { super.viewDidLoad() self.view.userInteractionEnabled = true let tgr : UITapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(OverviewFolder.handleTap(_:))) // segment 2 (categories) carbonTabSwipeNavigation.carbonSegmentedControl?.segments![2].userInteractionEnabled = true carbonTabSwipeNavigation.carbonSegmentedControl?.segments![2].addGestureRecognizer(tgr) } // tap func handleTap(gestureRecognizer : UITapGestureRecognizer){ let test = carbonTabSwipeNavigation.currentTabIndex if test == 2 { print("second item tapped") } }
If the 3rd party UISegmentedControl is like the generic one, you already have everything you need. Here's some of my code. If you are using IB, wire the control up to an IBAction instead. let imageSegments = UISegmentedControl (items: ["Original","Stained"]) override func viewDidLoad() { super.viewDidLoad() imageSegments.tintColor = UIColor.yellow imageSegments.selectedSegmentIndex = 1 imageSegments.addTarget(self, action: #selector(changeImageView), for: .valueChanged) view.addSubview(imageSegments) } func changeImageView() { switch imageSegments.selectedSegmentIndex { case 0: imageView.image = imgOriginal case 1: imageView.image = imgEdited default: break } imageView.setNeedsDisplay() }