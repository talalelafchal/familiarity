Filter core data array field by array of values
I have core data model: class Person: NSObject { var personName: String? var fruits: [String]? } There are two records sample in JSON format: Person 1: { "name" : "John", "fruits" : ["banana", "apple", "peach", "orange"] } Person 2: { "name" : "Alice", "fruits" : ["cherry", "mango", "pear", "strawberry"] } I want to filter result to receive only person who like cherry and mango. I have var fruitFilter: [String] = ["cherry", "mango"] How I can use NSPredicate to fetch filtered entity? var persons: [Person] = [] func fetchPersonWhoLike() { let request = NSFetchRequest<NSFetchRequestResult>(entityName: "Person") request.predicate = NSPredicate(format: "?????????", fruitFilter) ... } As result I should receive persons equals ["Alice"].
First, you need to have a proper to-many relationship with a Fruit entity with, say, a String property name. Then you can write a predicate like this: let soughtFruits = ["cherry", "mango"] request.predicate = NSPredicate(format: "SUBQUERY(fruits, $f, $f.name IN $@).@count = %d", soughtFruits, soughtFruits.count) This will only work if there are no duplicates.