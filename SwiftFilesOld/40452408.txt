Changing JUST .scale in UIImage?
Here, I'm creating a typical graphic (it's full-screen size, on all devices) on the fly... func buildImage()->UIImage { let wrapperA:UIView = blah.superview! let wrapperB:UIView = (blah?.textWrapperForRenderer)! let mainSize = basicImage.bounds.size UIGraphicsBeginImageContextWithOptions(mainSize, false, 0.0) basicImage.drawHierarchy(in: basicImage.bounds, afterScreenUpdates:true) wrapperA.drawHierarchy(in: wrapperA.bounds, afterScreenUpdates:true) wrapperB.drawHierarchy(in: wrapperB.bounds, afterScreenUpdates: true) let result:UIImage? = UIGraphicsGetImageFromCurrentImageContext() UIGraphicsEndImageContext() print( result?.scale ) // I want to change that image to have a scale of 1. // I don't know how to do that, so I actually just // make a new identical one, with scale of 1 let resultFixed:UIImage = UIImage(cgImage: result!.cgImage!, scale: 1.0, orientation: result!.imageOrientation) print( resultFixed.scale ) print("Let's use only '1-scale' images to send to the world, save, etc....") // return result return resultFixed // be sure to ask on SO if there's a way to // just "change the scale" rather than make new. } I need the final image to be .scale of 1 - but .scale is a read only property. The only thing I know how to do is make a whole new image copy ... but set the scale to 1 as it's being created. Is there a better way? Handy tip - This was motivated by: say you're saving a large image to the user's album, and also allowing UIActivityViewController so as to post to (example) Instagram. As a general rule, it seems to be best to make the scale 1 before sending to (example) Instagram; if the scale is say 3 you actually just get the top-left 1/3 of the image on your Instagram post. In terms of saving it to the iOS photo album, it does seem to be harmless (perhaps, better in some ways) to set the scale to 1. (I only say "better" as, if the image is, example, ultimately say emailed to a friend on PC, it can cause less confusion if the scale is 1.) Interestingly if you just use the iOS Photos album, and take a scale 2 or 3 image, and share it to Instagram: it does in fact appear properly on Instagram (perhaps Photos indeed makes it scale 1, before sending it; I don't know).
As you say, the scale property of UIImage is read-only – therefore you cannot change it directly. However, using UIImage's init(cgImage:scale:orientation) initialiser doesn't really copy the image – the underlying CGImage that it's wrapping (which contains the actual bitmap data) is still the same instance. It's only a new UIImage wrapper that is created. Although that being said, you could cut out the intermediate UIImage wrapper in this case by getting the CGImage from the context directly through CGContext's makeImage() method. For example: func buildImage() -> UIImage? { // ... let mainSize = basicImage.bounds.size UIGraphicsBeginImageContextWithOptions(mainSize, false, 0.0) defer { UIGraphicsEndImageContext() } // get the current context guard let context = UIGraphicsGetCurrentContext() else { return nil } // -- do drawing here -- // get the CGImage from the context by calling makeImage() – then wrap in a UIImage // through using Optional's map(_:) (as makeImage() can return nil) // by default, the scale of the UIImage is 1. return context.makeImage().map(UIImage.init(cgImage:)) }