How to stroke a grid of points relative to UIView size?
I'm trying to stroke an array of UIBezierPath as point grid on display. The spacing of the points would be relative to the size of the UIView , something like: (bounds.UIView / 10) to make the spacing 10 on each side So basically I have two questions: 1) How to stroke a single point using UIBezierPath? 2) How to create an array of points and stroke them on a UIView.
Here is an example in Swift 3: func addDashedLine(layer: CALayer, dotSize: CGFloat) { let p0 = CGPoint(x: 0, y: layer.bounds.height/2) let p1 = CGPoint(x: layer.bounds.width, y: layer.bounds.height/2) let path = UIBezierPath() path.move(to:p0) path.addLine(to:p1) path.stroke() let stepLength = Float(layer.bounds.width/10.0) let dashPattern = [NSNumber(value: 0.001), NSNumber(value: stepLength)] let shapeLayer = CAShapeLayer() shapeLayer.frame = layer.bounds shapeLayer.strokeColor = UIColor.red.cgColor shapeLayer.lineWidth = dotSize shapeLayer.lineJoin = kCALineJoinRound shapeLayer.lineCap = kCALineCapRound shapeLayer.lineDashPattern = dashPattern shapeLayer.lineDashPhase = dotSize shapeLayer.path = path.cgPath layer.addSublayer(shapeLayer) } This example uses a simple path to draw a horizontal line. If you need to draw a line with a fixed amount of dots, you will need to calculate it's length first and then divide it by the number of dots you want to be drawn. Usage: override func viewDidLoad() { super.viewDidLoad() addDashedLine(layer: view.layer, dotSize: 3) } Output: