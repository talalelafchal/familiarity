Print evens app error help - cannot convert to type string
I've been trying to take a number and display all of the even numbers up to said number in a string. Currently, I think I have everything working but I'm having trouble getting it to display in a label. The error I'm getting is on: label.text = factor. The error states: "cannot assign value of type '()' to type 'string?' I was wonder if anyone had any idea how to fix this or improve my code and explain what I did wrong? I'm still kind of new to Swift. Here's my code: import UIKit class ViewController: UIViewController { @IBOutlet var input1 : UITextField! @IBOutlet var label : UILabel! @IBAction func factorAction(sender: UIButton) { if let text = input1.text { if let num = Int(text) { // text to int let factor = getEvens(<#T##input: Int##Int#>) label.text = factor } else { // Show the user that the entered text isn't a number } } else { // There's no text } } // notifies user when no text or if a non number string/whole integer has been entered. // recycled code from factor application because it was useful func getEvens(_ input: Int){ var output: String = "" for i in 0 ... input { if (i % 2 == 0){ output += String(i) + "," } } output.remove(at: output.index(before: output.endIndex)) print(output); } // returns result override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } } Thanks again guys! Edit 2: I went ahead and updated the code; currently i'm getting a thread 1: breakpoint 1.1 whenever i try and enter a number into the textbox when testing the app. Any ideas why this would be happening? import UIKit class ViewController: UIViewController { @IBOutlet weak var input1 : UITextField! @IBOutlet weak var label : UILabel! @IBAction func factorAction(sender: UIButton) { if let text = input1.text { if let num = Int(text) { // text to int let factor = getEvens(num) label.text = factor } else { // Show the user that the entered text isn't a number } } else { // There's no text } } // notifies user when no text or if a non number string/whole integer has been entered. // recycled code from factor application because it was useful func getEvens(_ input: Int) -> String { let output = stride(from: 0, through: input, by: 2) .map(String.init) .joined(separator: ",") return output } override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. } }
Your getEvens() function prints a string to the console, but does not return anything. (More precisely, its return type is Void or (), and that is where type '()' in the error message "cannot assign value of type '()' to type 'string?' comes from.) What you probably want is func getEvens(_ input: Int) -> String { // <-- Return type is `String` var output: String = "" for i in 0 ... input { if (i % 2 == 0){ output += String(i) + "," } } output.remove(at: output.index(before: output.endIndex)) return output // <-- The returned value } Note that you can achieve the same result with func getEvens(_ input: Int) -> String { let output = stride(from: 0, through: input, by: 2) .map(String.init) .joined(separator: ",") return output } which may be a bit more "Swifty": stride(from: 0, through: input, by: 2) gives a sequence of the even numbers from 0 to input, map(String.init) converts each number to a String, and joined(separator: ",") concatenates the results to a single string, adding a comma between the elements.