Firebase Swift queryOrderedByChild fired twice
I am coding an iOS chat application where I reload the next 50 messages as a user scrolls up 50. This requires removing the previous observer on the query, and registering a new query with a new limit. However, sometimes (not all the time!) the query is fired twice when I do this change. I realize that this behavior does not happen when I removed queryOrderedByChild and just used queryLimited. Here's my code: // Before this function is called I removed the handle at the query func reobserveChatMessages(limit: UInt, connection: Connection, completed: @escaping (_ isSuccess: Bool, _ connection: Connection?) -> ()) -> (FIRDatabaseQuery, FIRDatabaseHandle) { let uid = getStoredUid() == nil ? "" : getStoredUid()! let chatId: String = getChatId(uid1: uid, uid2: connection.uid) let ref: FIRDatabaseReference = REF_MESSAGES.child(chatId) // Query with a new limit let q: FIRDatabaseQuery = ref.queryOrdered(byChild: "timestamp").queryLimited(toLast: limit) let handle = q.observe(.value, with: { snapshot in let conn = self.processChatSnapshot(snapshot: snapshot, connection: connection, uid: uid) completed(conn != nil, conn) }) return (q, handle) } Also if it helps, I am using FIRDatabase.database().persistenceEnabled = true. EDIT: Oddly enough, when I remove persistence this problem goes away. How do I maintain persistence yet still do the above?