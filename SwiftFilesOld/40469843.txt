Force Deinit ViewController to test it?
Im trying to see if my deinit method is called and I'm trying to write a test for it. As of now I have a static function which increments a counter being called when deinit is excuted. deinit { MethodCalledCounter.incrementCounter(classAndMethod: "deinit") print("deinit") } This is the function to increment it. static var methodCounter:[String:Int]? static func incrementCounter(classAndMethod: String) { setupIfNil() methodCounter?[classAndMethod] = called(classAndMethod: classAndMethod) + 1 } This is the test for it. describe(".viewDidLoad()"){ beforeEach { MethodCalledCounter.clearCounter() refPictureViewController = nil } describe(".viewDidLoad()"){ it("sets enableDismiss to false") { print("test!!!") expect(MethodCalledCounter.called(classAndMethod: "deinit")).to(equal(1)) } } } I insatiate the view controller then force deinit it using. refPictureViewController = nil But when I test it and go through how Swift goes from start to finish exciting the test I found it deinit always gets called after there test has been executed there the counter never gets incremented until after the test has been run. Is there anyway I can force it to deinit before the test is run? Any help is much appreciated!