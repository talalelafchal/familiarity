How to create a function that inserts data into a block
First can someone help me come up with a better title? I just don't know the correct terminology on this one. Here is my code, func loadPublicFeed() { ref = FIRDatabase.database().reference() ref.child("brackets").observeSingleEvent(of: FIRDataEventType.value, with: { (snapshot) in if let bracketsSnapshot = snapshot.children.allObjects as? [FIRDataSnapshot] { for brackets in bracketsSnapshot { if let bracketsDict = brackets.value as? Dictionary <String, Any> { let key = brackets.key as String let post = BracketsPublicFeed(postKey:key, postData: bracketsDict) self.posts.insert(post, at: 0) } } } self.stopRefresher() self.collectionView.reloadData() self.watchlistClicked = false }) } download data then do stuff. I want to take this function refactor it so I can just call the refactored function and add these self.stopRefresher() self.collectionView.reloadData() self.watchlistClicked = false into it. It might look something like this, func loadFeedTest() { fetchTest.loadPublicFeed(collectionView: self.collectionView, completionHandler: { () -> Void in self.stopRefresher() self.collectionView.reloadData() self.watchlistClicked = false }) I have tried using a completionHandler something like func loadPublicFeed(completionHandler: () -> Void) then the code. I have done many variations of this. I feel like I might be on the right path but I just can't nail this down.
You can refactor your function in the following way: func loadPublicFeed(collectionView: UICollectionView, completionHandler:() -> Void) { ref = FIRDatabase.database().reference() ref.child("brackets").observeSingleEvent(of: FIRDataEventType.value, with: { (snapshot) in if let bracketsSnapshot = snapshot.children.allObjects as? [FIRDataSnapshot] { for brackets in bracketsSnapshot { if let bracketsDict = brackets.value as? Dictionary <String, Any> { let key = brackets.key as String let post = BracketsPublicFeed(postKey:key, postData: bracketsDict) self.posts.insert(post, at: 0) } } } completionHandler(); }) }