Realm results sort by callback
I have a "importData" function that grabs a bunch of JSON from an API and stuffs it into a realm database. Part of that json looks like: files: [ 300, 19, 102 ] The numbers relate to id's in order parts of the JSON that i have already processed/imported prior to getting to these, and is basically just a list of files that belong to the group. This is modelled like so in my Realm Object: class SomeGroup : Object { let files = List<File>() } I need to preserve the sorting order of these id's so that when i link up the files relationship, the files are in the correct order. In order to grab the file models i need to link up i run a query as follows: let thefiles = realm.objects(File.self).filter("id IN %@", fileIds) the problem is this returns them in a different order and the .sorted method can only sort by the model attributes (from what i can tell from the docs). I considered looping through the results and turning them from a Result<File> type to a basic Array<File> or List<File> type so i can sort them myself, however that would lose the realm pointer information and therefore i would expect realm to not be able to create the link. The only other thing is to query each file and append it separately to the group files relationship, however the query counts are going to skyrocket if i do that. Could someone advise me the best way to order the Result<File> type by a custom function/callback so that it matches my id array from the json?
Best practice for maintaining the ordering of a set of objects in Realm is to simply store them in a List object. If you can adjust your logic to access the files property in SomeGroup, that seems like the best approach. Beside that, as hacky as it might seem, you can potentially consider creating a whole new Realm Object model whose role is to simply manage the ordered list of files. class FileList : Object { let files = List<File>() }