Query on multiple keys using Firebase doesn't order by key in Swift 3
I have a tableView which using Firebase I am populating its post struct using following code but as I am using Firebase observeSingleEvent inside another Firebase observe, it doesn't sort my cells. I had another version of code which I was sorting struct using didSet but then I will have duplicate cells when new post is posted. Any similar experience? I know that its happening because of querying again for user info but I don't know how to fix the issue. func fetchData() { // Start refreshing self.refreshControl.beginRefreshing() // query posts from Firebase self.refPost.queryOrdered(byChild: "userPostTime").observe(.value, with: {snapshot in // empty structs self.userInfo.removeAll() self.posts.removeAll() // loop all Firebase children for post in snapshot.children { // Convert Firebase snapshot to Dictionary if let dict = (post as! FIRDataSnapshot).value as? NSDictionary{ let userId = dict["userId"] as! String? let postImage = dict["userPostImage"] as! String? let postText = dict["userPostText"] as! String? let postTime = dict["userPostTime"] as! String? let tagInfo = dict["tagInfo"] as! NSArray? let post = Post(userId: userId!, userPostText: postText!, userPostImage: postImage!,userPostTime: postTime!,tagInfo: tagInfo,key: (post as AnyObject).key) // get post's user information self.refUser.child(userId!).observeSingleEvent(of: .value, with: {snapshot in if let dict = snapshot.value as! [String:AnyObject]? { if let pic = dict["picLink"] as! String? { self.userInfo.insert([dict["userName"]:pic], at: 0) } else { self.userInfo.insert([dict["userName"]:dict["socialPicLink"]], at: 0) } self.posts.insert(post!,at: 0) } }) } } // Reload TableView OperationQueue.main.addOperation({ self.refreshControl.endRefreshing() self.tableView.reloadData() }) }) }