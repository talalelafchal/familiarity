reloadRowsAtIndexPaths crashes with JSON imageUrls
i have a UITableView, which i fill with data from a JSON string. take a look at the code in the pastebin. at that point: dispatch_async(dispatch_get_main_queue(), { () -> Void in self.tableView.beginUpdates() self.tableView.reloadRowsAtIndexPaths( [indexPath], withRowAnimation: .Fade) self.tableView.endUpdates() }) it fails. I get the following message: 2016-11-06 16:32:06.579471 SO-33975355[4872:1389586] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'attempt to delete row 7 from section 0 which only contains 0 rows before the update' if i remove the reloadRowsAtIndexPaths, it works but i does not update the rows except for if you scroll or rotate the device. of course i want it to update directly. I guess it has something to do with it being to fast? But i am completely clueless since i modified this from the example. (the example does not work with JSON but with urls from wikipedia) i would be glad if someone could help.
Try this :  self.tableView.beginUpdates() self.tableView.reloadRowsAtIndexPaths( [indexPath], withRowAnimation: .Fade) self.tableView.endUpdates()
Before making the call for self.tableView.reloadRowsAtIndexPaths make sure that your tableView is already created and you properly set the dataSource. Also below two datasource should get called for your tableView (before self.tableView.reloadRowsAtIndexPaths).  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) { //Please return the maximum number of rows you are expecting from JSON. This is required because when you do reloadRowsAtIndexPaths, it should know that row index already exist } func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell { //Return cell }
The error is pretty clear: reason: 'attempt to delete row 7 from section 0 which only contains 0 rows before the update' You are trying to reload the first row in section 7, but section 7 has zero rows, so there is no first row. Tripple check your data model.