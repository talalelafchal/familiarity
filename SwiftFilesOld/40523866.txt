(Swift) How to check if content-encoding is gzip
Is there any way in Swift to find out if data from a request returns in gzip? I want to write a test method to check if Content-Encoding returns gzip file:
If you read the first 4 bytes of the file, you should get a Magic Number So you should be able to do something like: var magicNumber = [UInt](count: 4, repeatedValue: 0) data.getBytes(&magicNumber, length: 4 * sizeof(UInt)) If it's GZipped, it will have a Magic Number of 1f 8b, so check for that.
You can get this info from the header fields in the HTTPURLResponse: URLSession.shared.dataTask(with: url) { (data, response, error) in if let response = response as? HTTPURLResponse { if let encoding = response.allHeaderFields["Content-Encoding"] as? String { print(encoding) print(encoding == "gzip") } } }.resume() Note that this downloads the headers and the data. If you want to only get the headers without downloading the data, a better solution is to use an URLRequest set to "HEAD" like this: var request = URLRequest(url: url) request.httpMethod = "HEAD" URLSession.shared.dataTask(with: request) { (_, response, _) in if let response = response as? HTTPURLResponse { if let enc = response.allHeaderFields["Content-Encoding"] as? String { print(enc) print(enc == "gzip") } } }.resume() This way, only the headers are downloaded.