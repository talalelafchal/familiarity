Textfield not working once clicked on in the simulator
I am using the Google Maps SDK and currently I have a map that will route the user from wherever they are to a specific location. I would like for the user to be able to input where they want to go, rather than always being routed to the same location. I added a text field to the GUI and whenever I run the app in the simulator and click the textfield, no keyboard comes up and it acts as though I did not tap on it. Here is how I have set up my project: import UIKit import GoogleMaps import GooglePlaces import CoreData class ViewController: UIViewController, CLLocationManagerDelegate, UITextFieldDelegate { let locationManager = CLLocationManager() var currLocation: CLLocationCoordinate2D! var keyy = "myKeyIsHere" var didFindMyLocation = false var count: Int = 0 var button = UIButton() var latitude = UITextField() var longitude = UITextField() var path = GMSMutablePath() super.viewDidLoad() let blah = GMSCameraPosition.camera(withLatitude: 39.8282, longitude: -98.5795, zoom: 25.0) mapView.camera = blah locationManager.delegate = self locationManager.requestWhenInUseAuthorization() mapView.addObserver(self, forKeyPath: "myLocation", options: NSKeyValueObservingOptions.new, context: nil) currLocation = mapView.myLocation?.coordinate button = UIButton(type: .system) button.frame = CGRect(x: 135, y: 40, width: 100, height: 40) button.backgroundColor = UIColor.clear button.layer.cornerRadius = 5 button.layer.borderWidth = 1 button.layer.borderColor = UIColor.blue.cgColor button.setTitle("Route", for: UIControlState.normal) button.addTarget(self, action: #selector(ViewController.buttonPressed), for: UIControlEvents.touchUpInside) latitude = UITextField() latitude.frame = CGRect(x: 5, y: 90, width: 175, height: 35) latitude.backgroundColor = UIColor.white latitude.layer.cornerRadius = 5 latitude.layer.borderWidth = 1 latitude.layer.borderColor = UIColor.black.cgColor latitude.isUserInteractionEnabled = true latitude.text = " Enter Latitude" latitude.keyboardType = UIKeyboardType.numbersAndPunctuation self.latitude.delegate = self longitude = UITextField() longitude.frame = CGRect(x: 195, y: 90, width: 175, height: 35) longitude.backgroundColor = UIColor.white longitude.layer.cornerRadius = 5 longitude.layer.borderWidth = 1 longitude.layer.borderColor = UIColor.black.cgColor longitude.isUserInteractionEnabled = true longitude.text = " Enter Longitude" longitude.keyboardType = UIKeyboardType.numbersAndPunctuation self.longitude.delegate = self self.view.addSubview(latitude) self.view.addSubview(button) self.view.addSubview(longitude) } There is more but this all I feel is relevant for the problem. Ive actually added two text fields here, and neither work! Please help!
You need to enable the Control State of your textField as below from storyboard or programatically.  latitude.isEnabled = true longitude.isEnabled = true Updated: Note: Move all your code inside viewDidLoad? like below  override func viewDidLoad() { super.viewDidLoad() } Try one of the below method to enable textField.When textField begin editing...  func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool { print("textFieldShouldBeginEditing:") return true } func textFieldDidBeginEditing(_ textField: UITextField){ print("textFieldDidBeginEditing:") }
Have your wrote textfield delegate methods in your code? Then check textFieldShouldBeging function, if your wrote code to resigning that textfield keyboard. Other then, I don't see any reason of not showing the keyboard even you wrote your textfield declaration by coding. As you wrote all of your elements programmatically in your class, check if any of the element override your textfield. That's why even you think you are clicking on the textfield, you are actually clicking something else.
You will be able to type in the textfield using your macs keyboard. If you want the keyboard to show up then press cmd + K in simulator to toggle software keyboard. The keyboard will show up on device.
Please move all of your buttons and textfields declaration from 'viewDidLoad' method to 'viewDidLayoutSubviews' method. If you are using auto layouts, then writing the buttons and textfield declaration in view did load method can cause issues.