App freezes after redirecting to view controller
I am having trouble redirecting to a view controller after I perform some action in my code. I have this view controller which makes a request to google maps and geocodes and address as longituge/latitude and then adds an event to my database.(I'm using firebase). My problem with this is that once it redirects me to the other view controller, my app freezes. My problem seems to be that when I add an event to the database, the code in my other viewcontroller is listening for that specific event and automatically updates the map with events placed as markers. From that I get the InternalInconsistancyError saying UI can only be updated on the main thread. For that reason I added the OperationQueue.main.addOperation line, but when I add that it seems to freeze my app after redirecting. Any help is appreciated. let task = URLSession.shared.dataTask(with: url!, completionHandler: { (data, response, error) in let json = try! JSONSerialization.jsonObject(with: data!, options: JSONSerialization.ReadingOptions.allowFragments) as! NSDictionary if let result = json["results"] as? NSArray { if let geometry = (result[0] as! NSDictionary)["geometry"] { if let location = geometry as? NSDictionary { if let loc = location["location"] as? NSDictionary { longitude = loc["lat"]! as! Double latitude = loc["lng"]! as! Double OperationQueue.main.addOperation { let ref: FIRDatabaseReference = FIRDatabase.database().reference() let db = DBAccessObject(DBAccessObj: ref) db.addEventTreeStructure(eventRoot: "Events", title: self.titleText.text!, description: self.descriptionText.text!, avatar: "",Category: self.category.text!, chatChannel: 0, images: [], startDate: self.startDate.text!, endDate: self.endDate.text!, longitude: longitude, latitude: latitude) self.titleText.text = "" self.descriptionText.text = "" self.location.text = "" self.startDate.text = "" self.endDate.text = "" self.category.text = "" } } } } } }) task.resume() } Here is the other view controller incase it will help. let eventHandle = eventHandler.observe(FIRDataEventType.value, with: { (snapshot) in for event in snapshot.children { let _events = event as! FIRDataSnapshot let id = _events.key event_IDs.add(id) } for id in event_IDs { let locationHandler = eventHandler.child(id as! String) let locationHandle = locationHandler.observe(FIRDataEventType.value, with: { (snapshot) in let value = snapshot.value as? NSDictionary let longitude = value?["longitude"] let latitude = value?["latitude"] let eventTitle = value?["title"] let eventDesc = value?["description"] titleArr.add(eventTitle) descArr.add(eventDesc) longArr.add(longitude) latArr.add(latitude) for longitude in longArr { for latitude in latArr { var long = longitude as! Double var lat = latitude as! Double let newMarker = GMSMarker() newMarker.position = CLLocationCoordinate2D(latitude: long, longitude: lat) for title in titleArr { for desc in descArr { newMarker.title = title as! String newMarker.snippet = desc as! String newMarker.map = mapView } } } }