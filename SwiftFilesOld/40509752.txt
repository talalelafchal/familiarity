Swift 3 timed event
I have the following:  let processURLS = processingViewController() Timer.scheduledTimer(timeInterval: 1, target: self, selector: #selector(processURLS.getURLsToSend), userInfo: nil, repeats: true) When this event is triggered, I received the following error and I'm not sure why this doesn't work 2016-11-09 14:47:00.504932 AcumenJLR[3414:905978] * Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[AcumenJLR.homeViewController getURLsToSend]: unrecognized selector sent to instance 0x100d25c60' * First throw call stack: (0x1816721c0 0x1800ac55c 0x181679278 0x181676278 0x18157059c 0x18215c8f8 0x1816208f4 0x181620608 0x18161fec4 0x18161dac0 0x18154c048 0x182fd2198 0x1875372fc 0x187532034 0x100114620 0x1805305b8) libc++abi.dylib: terminating with uncaught exception of type NSException Here is the getURLsToSend method func getURLsToSend () { //create a fetch request, telling it about the entity let fetchRequest: NSFetchRequest<URLsToSend> = URLsToSend.fetchRequest() let context = getContext() do { //Get results let searchResults = try getContext().fetch(fetchRequest) print ("num of results = \(searchResults.count)") //You need to convert to NSManagedObject to use 'for' loops for urls in searchResults as [NSManagedObject] { //get the Key Value pairs (although there may be a better way to do that... //print("\(urls.value(forKey: "url"))") let currentURL = urls.value(forKey: "url")! //print(urls.value(forKey: "url")!) completeLoadAction(urlString: currentURL as! String) { code in if (code == 200){ context.delete(urls) } } } } catch { print("Error with request: \(error)") }
May be you have some paramter in method but you are not sending any value from there
According to the target / action pattern the method specified in selector must be declared in the class specified in target in this case the current class self. Either change the target or implement the method in self.