How to update location while app in backgrounded using swift 2
I am developing an app using MKMapView. I want to update the location every 3 minutes to the server. Now I am able to update location using NSTimer but I am not able to update when app is in the background. I have searched other stack overflow answers but they didn't help. What I have tried: I switched on background modes and selected location updates I included this code to my view did load method: self.locationManager.allowsBackgroundLocationUpdates = true What can I do next? Can someone help me out to do this one?
Timers work in conjunction with run loops. To use a timer effectively, you should be aware of how run loops operate—see RunLoop and Threading Programming Guide. Note in particular that run loops maintain strong references to their timers, so you don’t have to maintain your own strong reference to a timer after you have added it to a run loop. A timer is not a real-time mechanism; it fires only when one of the run loop modes to which the timer has been added is running and able to check if the timer’s firing time has passed. Because of the various input sources a typical run loop manages, the effective resolution of the time interval for a timer is limited to on the order of 50-100 milliseconds. If a timer’s firing time occurs during a long callout or while the run loop is in a mode that is not monitoring the timer, the timer does not fire until the next time the run loop checks the timer. Therefore, the actual time at which the timer fires potentially can be a significant period of time after the scheduled firing time.From Apple official document. This method is called while our app is in the background. The OS limits us to (I believe) thirty seconds. After thirty seconds, our time is up. We must call the completionHandler() (or the OS will think we used all of our time). Try to perform your task inside func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool { application.setMinimumBackgroundFetchInterval(UIApplicationBackgroundFetchIntervalMinimum) return true } func application(application: UIApplication, performFetchWithCompletionHandler completionHandler: (UIBackgroundFetchResult) -> Void) { // do background work } Source : - Background task.