Printing user location distance in meters from marker every X seconds with Timer, in Swift 3
Disclaimer: very beginner level coder here, so excuse any "obvious" mistakes. I am trying to build an app that shows to user how close they are to a marker. I have a GoogleMaps map view and I want to refresh user location continuously (every say 3 seconds). calculate and print its linear distance (in meters) from the marker, and set that to my left navigation item button. I tried doing this through GoogleMaps to no avail. So tried with CLLocation and CoreLocation. Problem is, I get first value in meters (15m), second value (9m) 3 seconds later, then every other 3 second iteration of my timer only gives 9m forever, no matter if I move around (and my googlemaps view does update successfully the blue user position dot as I move around, laptop and linked ipad in hand). What I am doing is have my timer fire off "findDistance" function every 3 seconds. The "findDistance" function runs locationmanager (which sets globalUserLocation to current one - if I am not doing something wrong), calculates distance and sets it to GlobalDistance, then updates the left navigation button item to that new distance. But it seems like the user location is only updated twice (instead of every 3 seconds, forever). What am I doing wrong? Any help would be greatly appreciated I have added all the plist requirements, and here is my code: import UIKit import GoogleMaps import CoreLocation import MapKit class googleMaps: UIViewController, MKMapViewDelegate, CLLocationManagerDelegate { let locationmanager = CLLocationManager() var globalDistance: CLLocationDistance = 0 var mapView: GMSMapView? = nil var globalUserLocation = CLLocation(latitude: 40.085260, longitude: 22.601468) override func viewDidLoad() { super.viewDidLoad() let timer = Timer.scheduledTimer(timeInterval: 3, target: self, selector: #selector(googleMaps.findDistance), userInfo: nil, repeats: true) self.locationmanager.delegate = self self.locationmanager.desiredAccuracy = kCLLocationAccuracyBest self.locationmanager.startUpdatingLocation() timer.fire() GMSServices.provideAPIKey("**mykeyhere**") let camera = GMSCameraPosition.camera(withLatitude: 40.085260 , longitude: 22.601468, zoom: 40) mapView = GMSMapView.map(withFrame: CGRect(origin: CGPoint(x: 0,y :0), size: CGSize(width: 200, height: 500)), camera: camera) mapView?.isMyLocationEnabled = true view = mapView navigationItem.leftBarButtonItem = UIBarButtonItem(title: "\(globalDistance)", style: UIBarButtonItemStyle.plain, target: self, action: #selector(googleMaps.next as (googleMaps) -> () -> ())) mapView?.mapType = kGMSTypeNormal self.mapView?.settings.myLocationButton = true self.mapView?.settings.compassButton = true } func locationmanager(manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) { globalUserLocation = locations.last! } func findDistance(){ locationmanager let currentLat = locationmanager.location!.coordinate.latitude let currentLong = locationmanager.location!.coordinate.longitude globalUserLocation = CLLocation(latitude: currentLat, longitude: currentLong) let myMarker = CLLocation(latitude: 40.085260, longitude: 22.601468) if globalUserLocation != nil { let distance = globalUserLocation.distance(from: myMarker) print(distance) globalDistance = distance navigationItem.leftBarButtonItem?.title = "\(globalDistance)" } }