passing values from uitableview to uicollectionview
How can I pass parsed values from a url which has been used in an UITableview to a UICollectionview(scrolled horizontally) which has been used in each of the UITableviews cell? I want do this in swift language. I am using a model with the name "collectionCat". import Foundation public class CollectionCat{ var brandid:String = "" var brandname:String = "" var result:String = "" var noitems:String = "" } I am also using Alamofire to parse data from url. override func viewDidLoad() { super.viewDidLoad() self.startActivityAnimating(message: "", type: NVActivityIndicatorType.BallClipRotate, color: AppColor.AppRed, padding: 10) Alamofire.request(.POST, "http://goringr.co.in/Mathrubhumi_project_ios/brand.php", parameters: ["": ""]) .validate() .responseJSON { response in switch response.result { case .Success: print("Validation Successful") self.jsonResultParse(response.result.value!) self.stopActivityAnimating() case .Failure(let error): print(error) self.stopActivityAnimating() // return userCatagory } } // Do any additional setup after loading the view. } if JSONArray.count != 0 { //_ = [UserCatagory]() for i:Int in 0 ..< JSONArray.count { let jObject = JSONArray[i] as! NSDictionary let uCollect:CollectionCat = CollectionCat() uCollect.brandid = (jObject["brandid"] as AnyObject? as? String) ?? "" uCollect.brandname = (jObject["brandname"] as AnyObject? as? String) ?? "" uCollect.result = (jObject["result"] as AnyObject? as? String) ?? "" uCollect.noitems = (jObject["noitems"] as AnyObject? as? String) ?? "" collect.append(uCollect) print("collect COUNT ",collect.count) } self.newTable.reloadData() } } What i dont know is how to transfer the stored data to UICollection view which is in each cell of the mentioned UITableview. func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell { // collectMaster = collect[indexPath.row] let cell = tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath) as! SecondHomeViewCell // collectMaster = CollectionCat() cell.get = ???? return cell } Can anyone Please help me with this? The SecondHomeViewCell's code goes like this. import UIKit import Kingfisher import Alamofire import NVActivityIndicatorView class SecondHomeViewCell: UITableViewCell{ @IBOutlet weak var collectionView: UICollectionView! var genre:CollectionCat? = nil{ didSet { collectionView.reloadData() } } func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int { //return genre!.brandid // return genre return 1 } func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell { let cell = collectionView.dequeueReusableCellWithReuseIdentifier("secondHome", forIndexPath: indexPath) as! SecondHomeCollectionViewCell if let genre = genre { cell.genre = genre.brandid[indexPath.row] } return cell } func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAtIndexPath indexPath: NSIndexPath) -> CGSize { let itemsPerRow:CGFloat = 4 let hardCodedPadding:CGFloat = 5 let itemWidth = (collectionView.bounds.width / itemsPerRow) - hardCodedPadding let itemHeight = collectionView.bounds.height - (2 * hardCodedPadding) return CGSize(width: itemWidth, height: itemHeight) } }
Add a array in your ViewController, call it var collCat = [CollectionCat]() func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell { let collectMaster = collCat[indexPath.row] let cell = tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath) as! SecondHomeViewCell cell.brandID = collectMaster.brandid //and so on return cell } If this is not the answer you are looking for, please tell me. Because I wanted to clarify but I don't have the ability to comment yet. I need to reach 50 reputation to be able to comment and ask some clarifications.
You can pass data to collection view by creating function in UITableviewCell custom class class SecondHomeViewCell: UITableViewCell{ //Array containing modals for particular tableview cell index path var arrDataFromViewController = NSArray() func getData(arrData:NSArray){ arrDataFromViewController = arrData collectionView.delegate = self collectionView.dataSource = self collectionView.reloadData() } @IBOutlet weak var collectionView: UICollectionView! var genre:CollectionCat? = nil{ didSet { collectionView.reloadData() } } func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int { //return genre!.brandid // return genre return 1 } func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell { let cell = collectionView.dequeueReusableCellWithReuseIdentifier("secondHome", forIndexPath: indexPath) as! SecondHomeCollectionViewCell if let genre = genre { cell.genre = genre.brandid[indexPath.row] } return cell } func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAtIndexPath indexPath: NSIndexPath) -> CGSize { let itemsPerRow:CGFloat = 4 let hardCodedPadding:CGFloat = 5 let itemWidth = (collectionView.bounds.width / itemsPerRow) - hardCodedPadding let itemHeight = collectionView.bounds.height - (2 * hardCodedPadding) return CGSize(width: itemWidth, height: itemHeight) } } //Now in tableview data source method func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell { // collectMaster = collect[indexPath.row] let cell = tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath) as! SecondHomeViewCell // collectMaster = CollectionCat() cell.getData = yourArray[indexPath.row]//Get Array data return cell }