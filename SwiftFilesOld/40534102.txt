Alamofire http post - Registering user Swift 3
Quick question: I'm registering a user to my database using Alamofire library. I got the endpoint and parameters from the backend developer and tested it in Postman myself and data is passing fine. I'm implementing it in my Register View Controller but been getting no response. Here is my implementation. FYI: I left user type off the View Controller. The end user is not supposed to know they are user type 3. I may be doing something wrong here. I'm not getting back no response in the output. let params = ["username":usernameField.text!, "firstname":firstNameField.text!, "lastname":lastNameField.text!, "password":passwordField.text!, "usertype":"3", "email":emailAddressField.text! ] let apiMethod = "http://api.example.com" Alamofire.request(apiMethod, method: .post, parameters: params, encoding: URLEncoding.default).responseString { (response) in print(response); let alertController = UIAlertController(title: "REGISTRATION SUCCESSFUL!", message: nil, preferredStyle: .alert); alertController.addAction(UIAlertAction(title: "OK", style: .default,handler: nil)); self.present(alertController, animated: true, completion: nil) } } if let json = response.result.value as? Dictionary<String, String> { print ("JSON: \(json)") if (json["register_status"]! == "userExist") { return } else { self.performSegue(withIdentifier: "registerSuccess", sender: self) } } Once the user has registered properly, my response should be: { "username": "userregister", "register_status": "RegistrationComplete", "register_date": "11/10/2016" } But if user exists then I would get back this message: { "username": "userregister", "register_status": "userExist", "register_date": "11/10/2016" } What am I doing wrong in my Swift 3 code? Edit (Adding Register View Controller) for clarity:
Your callback is made on another thread, so you need to wrap your alert controller presentation call in a DispatchQueue.main.async block because all ui needs to happen on the main thread or you can get weird drawing/timing errors. Anyways thats likely not the problem with your request. You are making a http request which is now disabled by default as of iOS 9. You need to explicitly set the app transport security keys in your info.plist file. You can see the values in the Apple documentation. I am guessing you probably want both NSAllowsArbitraryLoads and NSExceptionAllowsInsecureHTTPLoads.
I will something like this if your response is JSON. This will help you debug the code. Also, I would suggest you put breakpoints and check for response in console. Alamofire.request(apiMethod, method: .post, parameters: params, encoding: URLEncoding.default).responseJSON {response in var err:Error? switch response.result { case .success(let json): print(json) // update UI on main thread DispatchQueue.main.async { let alertController = UIAlertController(title: "REGISTRATION SUCCESSFUL!", message: nil, preferredStyle: .alert); alertController.addAction(UIAlertAction(title: "OK", style: .default,handler: nil)); self.present(alertController, animated: true, completion: nil) } case .failure(let error): err = error print(err) } } If this doesn't help you, please share your rest client request payload so that I can help you further.
Thanks for the assistance @hacker_1989 @Josh @Aaron yesterday. My solution to the registration of user using Alamofire Library with Swift 3 language is as below: @IBAction func registerTappedButton(_ sender: Any) { if(userNameField.text == nil || (userNameField.text?.isEmpty)!) { self.showAlertError("Username required", message: "") return } if(firsNameField.text == nil || (firsNameField.text?.isEmpty)!) { self.showAlertError("First Name required", message: "") return } if(lastNameField.text == nil || (lastNameField.text?.isEmpty)!) { self.showAlertError("Last Name required", message: "") return } if(passwordField.text == nil || (passwordField.text?.isEmpty)!) { self.showAlertError("Password required", message: "") return } if(emailAddressField.text == nil || (emailAddressField.text?.isEmpty)!) { self.showAlertError("Email Address required", message: "") } let params = ["username": userNameField.text!, "firstname": firsNameField.text!, "lastname": lastNameField.text!, "password": passwordField.text!, "usertype": 3, "email": emailAddressField.text!] as [String : Any] let apiMethod = "http://api.example.com" //<-Set your endpoint here Alamofire.request(apiMethod, method: .post, parameters: params, encoding: JSONEncoding.default).responseString { (response) in print(response); let alertController = UIAlertController(title: "REGISTRATION SUCCESSFUL!", message: nil, preferredStyle: .alert); alertController.addAction(UIAlertAction(title: "OK", style: .default,handler: nil)); self.present(alertController, animated: true, completion: nil) } } The backend developer changed the endpoint to expect JSON object. He had set the endpoint to expect URL Encoded parameters before. Now everything is working fine. Data is passing successfully.