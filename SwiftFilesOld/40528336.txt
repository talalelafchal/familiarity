Getting a struct variable to show in the UITableView Cell? swift /xcode8
Im trying to get my struct variable, "title" to display as the cell text label in the UITableView, does anyone know if this is possible? I have achieved this before using a string, but I'm not sure how to access one of the struct variables in this context This is where I have declared the struct import Foundation struct Note { var title: String var text: String } class Notes { var notes:[Note] public static let sharedInstance = Notes() private init() { self.notes = [] } public func add(title1: String, text1: String) throws { self.notes.append(Note(title: title1, text: text1)) } } and this is the controller class, where I am trying to add simple values to the struct and display the value of the "title" variable in the struct override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: "note1", for: indexPath) let note1 = Notes.sharedInstance try? note1.add(title1: "Hello", text1: "World") print(note1) if let label = cell.textLabel { // I've been trying to get it to work on this line //label.text = note1.notes(get title here?)[indexPath.row] } return cell }
Close! You need to pick out the array element before trying to get its title: if let label = cell.textLabel { label.text = note1.notes[indexPath.row].title }
import UIKit struct Note { var title: String var text: String init(title: String, text: String) { self.title = title self.text = text } } class Notes { var notes:[Note] = [] public static let sharedInstance = Notes() private init() { self.notes = [] } public func add(title1: String, text1: String) throws { notes.append(Note(title: title1, text: text1)) } } class ViewController: UIViewController, UITableViewDataSource { var note1 = Notes.sharedInstance override func viewDidLoad() { super.viewDidLoad() for i in 1...10 { try! note1.add(title1: "dfsad \(i)", text1: "sdfsdfsd") } } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } func numberOfSections(in tableView: UITableView) -> Int { return 1 } func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int { return note1.notes.count } func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: "Cell")! as UITableViewCell cell.textLabel?.text = note1.notes[indexPath.row].title return cell } } OutPut: Thanks:)