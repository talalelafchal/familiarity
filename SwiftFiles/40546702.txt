How to add UIActivityIndicatorView to the bottom of UITableView, and toggle it on loadings
I have a "scroll to load more" behavior on my UITableView. It starts loading more content when you scroll to the bottom. What I want to achieve is to show a UIActivityIndicatorView at the bottom of the UITableView when service call is in progress, and hide it when new items are added. What is a good way to solve this problem? I am using Swift but objective-C solutions are also welcome.
I have implemented the same functionality in objective-C In the cellForRowAtIndexPath if (indexPath.row == [self.yourArrayData count] - 1) { // Call the API [self loadMoreData:@"all" andPages:[NSString stringWithFormat:@"%ld", (long)pages] AndIsLoadMore:YES]; } Add loader or design -(void)addLoaderViewAtBottom { viewLoader = [[UIView alloc] initWithFrame:CGRectMake(0, self.view.frame.size.height-100, self.view.frame.size.width, 50)]; [viewLoader setBackgroundColor:[UIColor whiteColor]]; [self.view addSubview:viewLoader]; UIActivityIndicatorView *activityIndicator1 = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray]; activityIndicator1.center = CGPointMake((SCREEN_SIZE.width/2), 30); activityIndicator1.alpha = 1.0; activityIndicator1.hidden = NO; [viewLoader addSubview:activityIndicator1]; [activityIndicator1 startAnimating]; } -(void)hideLoaderView { [UIView animateWithDuration:1 animations:^(void) { [viewLoader setFrame:CGRectMake(0, self.view.frame.size.height, self.view.frame.size.width, 50)]; }]; } then use this two methods in your API call method. Call addLoaderViewAtBottom when API call starts and call hideLoaderView after getting the responses Happy coding...
Initialize UIActivityIndicatorView: @interface MyBulletinVC () { UIActivityIndicatorView *activityLoadMore; } -(void)viewDidLoad { activityLoadMore = [[UIActivityIndicatorView alloc]initWithActivityIndicatorStyle:(UIActivityIndicatorViewStyleGray)]; } Check when UITableView is being scrolled and what is the content offset - (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView { float bottomEdge = scrollView.contentOffset.y + scrollView.frame.size.height; float tblBottomEdge = _tblBulletin.frame.size.height+_tblBulletin.frame.origin.y; if (bottomEdge <= tblBottomEdge) { return; } if (bottomEdge >= scrollView.contentSize.height) { [self show_bottom_loader]; } } If applicable as per content offset then display loader in footer of table: -(void)show_bottom_loader { _tblBulletin.tableFooterView = [self returnLoaderViewWhileFetchingRecords]; CGPoint newContentOffset = CGPointMake(0, [_tblBulletin contentSize].height - _tblBulletin.bounds.size.height); [_tblBulletin setContentOffset:newContentOffset animated:YES]; [self getNewsRecords]; } Hide footer when data is loaded: -(void)hide_bottom_loader { _tblBulletin.tableFooterView = nil; UIView *v = [[UIView alloc] initWithFrame:CGRectZero]; v.backgroundColor = [UIColor clearColor]; [_tblBulletin setTableFooterView:v]; [activityLoadMore stopAnimating]; } -(UIView*)returnLoaderViewWhileFetchingRecords { UIView *view = [[UIView alloc]initWithFrame:CGRectMake(0,0,_tblBulletin.frame.size.width,44)]; view.backgroundColor =[UIColor clearColor]; UILabel *lblBg =[[UILabel alloc]initWithFrame:CGRectMake(0,1,_tblBulletin.frame.size.width,42)]; lblBg.backgroundColor =[UIColor whiteColor]; [view addSubview:lblBg]; UILabel *lbl =[[UILabel alloc]initWithFrame:CGRectMake(_tblBulletin.frame.size.width/2 - 20,0,_tblBulletin.frame.size.width/2,view.frame.size.height)]; lbl.textAlignment = NSTextAlignmentLeft; lbl.text = @"Loading..."; lbl.font = [UIFont fontWithName:@"Arial" size:14.0f]; lbl.textColor = [UIColor darkGrayColor]; lbl.backgroundColor = [UIColor clearColor]; lbl.userInteractionEnabled = NO; [view lbl]; activityLoadMore.frame = CGRectMake(_tblBulletin.frame.size.width/2-35,22,0,0); [activityLoadMore startAnimating]; [view addSubview:activityLoadMore]; return view; } -(void)getNewsRecords { //fetch new records and add to your array. [self hide_bottom_loader]; //reload table. } Replace tblBulletin with you table name.