How to integrate and use Font Awesome with Objective-C or Swift in an Xcode project?
<p>So I am trying to use this font <a href="http://fortawesome.github.com/Font-Awesome/">http://fortawesome.github.com/Font-Awesome/</a>. I've added the font as a resource and put it in the plist file. Here's how I am using it:</p> <pre><code>[homeFeedButton.titleLabel setFont:[UIFont fontWithName:@"fontawesome" size:8]]; NSString *str = [NSString stringWithFormat:@"%C", @"\f030"]; </code></pre> <p>However this doesn't work. Does anyone know how to use this font in an Xcode project?</p>
<p>It is because your <code>+[NSString stringWithFormat:]</code> method contains the literal for a unichar, not an NSString, which is an object that uses %@, which is beside the point because literal'ing a literal is redundant.</p>
<p>For using custom fonts make sure that the name of font which you have given in your plist and here,have the same real name.I mean the name of the font should be the same which in generally it have.Dont try to modify for the name.Check if the name of the font you are using is really the name of this font.</p> <p>Thanks Sanjay</p>
<p>NSLog your all font using following code and provide exact name. </p> <pre><code> NSArray *familyNames = [[NSArray alloc] initWithArray:[UIFont familyNames]]; NSArray *fontNames; NSInteger indFamily, indFont; for (indFamily=0; indFamily&lt;[familyNames count]; ++indFamily) { NSLog(@"Family name: %@", [familyNames objectAtIndex:indFamily]); fontNames = [[NSArray alloc] initWithArray: [UIFont fontNamesForFamilyName: [familyNames objectAtIndex:indFamily]]]; for (indFont=0; indFont&lt;[fontNames count]; ++indFont) { NSLog(@" Font name: %@", [fontNames objectAtIndex:indFont]); } } </code></pre>
<p>You can just use the literal code string by affixing it with <code>\u</code>. </p> <p>e.g. You can use <code>\f030</code> in your iOS app using the following snippet.</p> <p><code>[[[UILabel alloc] initWithFrame:CGRectZero] setText:@"\uf030"];</code></p>
<p>Not sure you ever got this working properly, but there's now a couple of nice projects on github:</p> <p><a href="https://github.com/alexdrone/ios-fontawesome">https://github.com/alexdrone/ios-fontawesome</a> - which gives you a category for NSString which offers basic help using FontAwesome.</p> <p>and <a href="https://github.com/leberwurstsaft/FontAwesome-for-iOS">https://github.com/leberwurstsaft/FontAwesome-for-iOS</a> which gives you a NSString category with <code>fontAwesomeIconStringForIconIdentifier</code> and also an <code>UIImageView</code> subclass: <code>FAImageView</code> </p>
<p>Here is an example for a cell's label text:</p> <pre><code>cell.textLabel.font = [UIFont fontWithName:@"FontAwesome" size:12]; cell.textLabel.text = @"\uf000"; </code></pre> <p>Make sure you get the font name correct as suggested above.</p>
<p>You can also use the library <a href="https://www.cocoacontrols.com/controls/fontawesome-ios" rel="nofollow">FontAwesome+iOS for iOS</a></p> <p>Then you only need to use this code:</p> <pre><code>label.text = [NSString fontAwesomeIconStringForIconIdentifier:@"icon-github"]; // or: label.text = [NSString fontAwesomeIconStringForEnum:FAIconGithub]; </code></pre>
<p>FontAwesome font name comes in like so: FontAwesome</p> <p>Try <code>[UIFont fontWithName:@"FontAwesome" size:8]]</code>.</p> <p>Watching this video tutorial might help: <a href="http://youtu.be/J1EHAS0icv0" rel="nofollow">http://youtu.be/J1EHAS0icv0</a>.</p>
<p>not sure if this answer will be useful looking at the date you posted your question.... but to help someone maybe who is doing it at the moment,</p> <p>[self.homefeedbutton setTitle:@"o" forState:UIControlStateNormal]; [self.homefeedbutton.titleLabel setFont:[UIFont fontWithName:@"fontawesome" size:30]];</p> <p>setTitle:@"o" o is a name of the font, don't use the unichar, instead rename your font to something else preferable a letter, e.g if you check fontello.com , select icon, then click customize code tab, on top of you icon there is a small box, change it to any letter....</p> <p>shout if its not clear enough , I will try to explain in a different way.</p>
<p>In <strong>Swift</strong>: </p> <p><a href="http://fortawesome.github.io/Font-Awesome/cheatsheet/">Font Awesome Cheatsheet.</a></p> <p><a href="https://www.youtube.com/watch?v=J1EHAS0icv0">Tutorial on how to integrate the font called "Font Awesome" in your Xcode project.</a></p> <p><a href="http://codewithchris.com/common-mistakes-with-adding-custom-fonts-to-your-ios-app/#doublechecktarget">Common Mistakes With Adding Custom Fonts to Your iOS App</a></p> <pre><code>let label = UILabel(frame: CGRectMake(0, 0, 100, 100)) label.font = UIFont(name: "FontAwesome", size: 40) let myChar: UniChar = 0xF180 label.text = String(format: "%C", myChar) self.view.addSubview(label) </code></pre>
<p>I have made a library in swift language with easy integration for <code>UILabel</code>, <code>UIButton</code> and <code>UIBarButtonItem</code>. Also supports Pods. <a href="https://github.com/Vaberer/Font-Awesome-Swift" rel="nofollow">Font Awesome Swift</a></p>
<p>Below is the code to set image to a UIButton using FontAwesome</p> <pre><code> UIButton *btnMenu = [UIButton buttonWithType:UIButtonTypeCustom]; btnMenu.frame = CGRectMake(0, 0, 40, 32); [btnMenu setTitle:@"\uf0c9" forState:UIControlStateNormal]; [btnMenu setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal]; [btnMenu.titleLabel setFont:[UIFont fontWithName:@"FontAwesome" size:16]]; </code></pre>
<p>This may help someone else... I had about 90% of Font Awesome icons working in my project, except a handful of them I couldn't get them to display correctly. They'd instead display a "..." icon instead.</p> <p>After several hours of investigating unicode characters in Objective-C, I realised I was barking up the wrong tree! "..." isn't a FontAwesome icon, it's UIKit telling me that the frame of the UILabel is too small/font too large to display the text string! D'oh.</p>
<p>I was looking for the helper library for Swift3 and found this to be very simple and working solution <a href="https://github.com/Syndicode/FontAwesomeKitSwift3" rel="nofollow noreferrer">https://github.com/Syndicode/FontAwesomeKitSwift3</a>. It has animations that explain for novices like me how to include it and use quickly. </p>