How do you pass a Class from Swift into Cocoa in order to dequeue a new UITableViewCell?
<p>I'm working on building a <em>UITableViewController</em> subclass in Swift. In order to properly use the modern</p> <pre><code>- (id)dequeueReusableCellWithIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath </code></pre> <p>(or, in Swift):</p> <pre><code>func dequeueReusableCellWithIdentifier(identifier: String!, forIndexPath indexPath: NSIndexPath!) -&gt; AnyObject! </code></pre> <p>to get or create a <em>UITableViewCell</em>, I need to first call </p> <pre><code>- (void)registerClass:(Class)cellClass forCellReuseIdentifier:(NSString *)identifier </code></pre> <p>(aka):</p> <pre><code>func registerClass(cellClass: AnyClass!, forCellReuseIdentifier identifier: String!) </code></pre> <p>I haven't been able to find <em>AnyClass</em> in the book or other documentation, so I'm not sure how to turn a typename (in this case, <em>UITableViewCell</em>) into an <em>AnyClass</em> descriptor. </p> <p>How do you do this?</p>
<p>You can use the <a href="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Functions/#//apple_ref/c/func/NSClassFromString" rel="nofollow">NSClassFromString</a> method for getting the <code>AnyClass</code>.</p> <p>Function signature:</p> <pre><code>func NSClassFromString(_ aClassName: String!) -&gt; AnyClass! </code></pre> <p>Usage:</p> <pre><code>var cellClass:AnyClass = NSClassFromString("MyCellClassName"); </code></pre>
<p>If you know the class of the cell you'd like to create at compile time, you can refer to it directly with <code>UITableViewCell.self</code>, in the same way that you'd say <code>[UITableViewCell class]</code> in Objective-C. (See "Metatype Type" in the <a href="https://developer.apple.com/library/prerelease/ios/documentation/swift/conceptual/swift_programming_language/Types.html" rel="nofollow">Swift Programming Guide</a>.)</p> <p>It should only be necessary to use <code>NSClassFromString()</code> if you need to turn a string into a class reference at run time.</p> <p>EDIT: except that in the current (first) seed, there is apparently a known bug that prevents Swift from converting a type obtained as I describe to an <code>AnyClass</code>. So this may not actually work right now.</p>
<p>Here's how I identified cellClass in my UITableViewController subclass:</p> <pre><code>override func viewDidLoad() { self.tableView.registerClass(UITableViewCell.self, forCellReuseIdentifier: "UITableViewCell") } </code></pre>