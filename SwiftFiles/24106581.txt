When to use inferred type vs explicit types in swift?
<p>Taking a look at Swift and I was wondering people's opinions on when to take advantage of inferred types? Coming from Obj-C/C I'm used to doing types all the time so that's currently how I'm writing my Swift code but there must be some reasons to use type inference? I've seen this answer, <a href="http://stackoverflow.com/questions/463870/when-to-exploit-type-inference-in-haskell">When to exploit type inference in Haskell?</a> but it's about Haskell.</p> <p>Thanks!</p>
<p>My initial gut tells me that anytime you immediately or shortly declare the value of the variable it's probably preferable to allow type inference to kick in. As a more general rule, I'd say anytime things are made more readable (subjective I know) go for it.</p> <p>Things like the below I believe greatly improve from type inference.</p> <pre><code>let hello = "Hello" </code></pre> <p>vs </p> <pre><code>let hello: String = "Hello" </code></pre> <p>and a much better example:</p> <pre><code>let add = { (a1: Int, a2: Int) -&gt; Int in return a1 + a2 } </code></pre> <p>vs</p> <pre><code>let add: (Int, Int) -&gt; Int = { (a1: Int, a2: Int) -&gt; Int in return a1 + a2 } </code></pre>