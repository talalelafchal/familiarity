NotificationCenter actions stacking ontop of eachother?
I've got buttons that represent user posts from Firebase. When the viewAppears I'm redrawing the circles to keep it up to date with information. However, each time I'm redrawing the circles it's messing up the actions I have associated with the buttons by adding 1 onto the amount of times the actions are called. I have a class that takes care of adding the actions onto the button.  override init(frame: CGRect) { super.init(frame: frame) let doubleTap = UITapGestureRecognizer(target: self, action: #selector(self.doubleTapAction(sender:))) self.addGestureRecognizer(doubleTap) } func doubleTapAction(sender : UIButton) { print("Double tapped") NotificationCenter.default.post(name: .didDoubleTap , object: nil, userInfo: ["tagTapped" : self.tag]) } So that code is all done from within my "buttonPost" class. Then on my mainVC I'm adding observers for the NotificationCenter for .didDoubleTap in viewDidLoad  NotificationCenter.default.addObserver(self, selector: #selector(self.didDoubleTapOnACircle(sender:)), name: .didDoubleTap , object: nil) and finally I have the function that handles what I'm wanting it to do:  func didDoubleTapOnACircle(sender: Notification) { print("double tapped action called") } What is happening is when I first load up the page buttons are being drawn in and work as they should. If I doubletap on a circle I get both the "Double tapped" from my class function and the "double tapped action called" from my observer function. The problem is when I leave the viewcontroller that's in charge of drawing the circles and then I come back to it "didDoubleTapOnCircle" gets called twice, "double tapped action called" gets printed out twice, but "double tapped" gets printed out once. If I were to leave and come back to the main page (aka redrawing the circles 10 times), "double tapped action called" would be printed 10 times and "Double tapped" would still be called one time. What is causing this? I do not understand why if I leave the view controller and come back I'm not getting duplicate buttons being drawn overtop of the old ones, but the gesture recognizer actions are being stacked ontop of eachother from the last time they were drawn in. So the tl;dr is I'm representing user posts from firebase as buttons that can be doubletapped on the front page. When I initially load in the buttons work perfectly, the doubletapp action gets called a single time. Each time I leave and come back to the button page the amount of times the didDoubleTapOnCircle function is called is increased by 1.
I needed to remove the observer to the notification. I assumed because I was redrawing the buttons completely that this wasn't necessary but removing the observers fixed the issue. Apple suggests handling observer listeners in viewWillAppear / Dissapear.  override func viewWillAppear(_ animated: Bool) { NotificationCenter.default.addObserver(self, selector: #selector(self.handleTapped(sender:)), name: .didTap , object: nil) NotificationCenter.default.addObserver(self, selector: #selector(self.didDoubleTapOnACircle(sender:)), name: .didDoubleTap , object: nil) } override func viewWillDisappear(_ animated: Bool) { NotificationCenter.default.removeObserver(self, name: .didTap, object: nil) NotificationCenter.default.removeObserver(self, name: .didDoubleTap, object: nil) NotificationCenter.default.removeObserver(self) }