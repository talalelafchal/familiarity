Swift Bitwise Operations with UInt64
<p>It seems that bitwise operators don't work with UInt64 variables in Swift.</p> <pre><code>class Polyomino { var squares : UInt64 = 0 var xLength : UInt8 = 0 var yLength : UInt8 = 0 func addSquareAt(x : UInt8, y : UInt8) { squares |= (UInt64(1) &lt;&lt; (x + y * 8)) } } </code></pre> <p>The line with the bitwise operator gives the error "could not fin overload for "\=" with the supplied arguments". The same thing goes with the following statement:</p> <pre><code>squares = squares | (UInt64(1) &lt;&lt; (x + y * 8)) </code></pre> <p>I'm assuming this is an error on Apple's part (could be wrong) but is there any way to fix this temporarily or should I just wait for Apple for a fix? Or maybe I'm doing something wrong?</p>
<p>The type safety in Swift means that you can't do operations between different numeric types. You're trying to shift <code>UInt8</code>s against a <code>UInt64</code>, which isn't supported. Try casting the result to <code>UInt64</code> instead:</p> <pre><code>func addSquareAt(x : UInt8, y : UInt8) { squares |= UInt64(1 &lt;&lt; (x + y * 8)) } </code></pre>