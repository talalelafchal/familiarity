Mathematical functions in Swift
<p>I've been going through the documentation but could not seem to find an answer.</p> <p>How do I use mathematical functions like <code>sqrt()</code>, <code>floor()</code>, <code>round()</code>, <code>sin()</code>, etc?</p> <hr> <p><img src="https://i.stack.imgur.com/vplCJ.png" alt="enter image description here"></p>
<p>You can use them right inline:</p> <pre><code>var square = 9.4 var floored = floor(square) var root = sqrt(floored) println("Starting with \(square), we rounded down to \(floored), then took the square root to end up with \(root)") </code></pre>
<p>As other noted you have several options. If you want only mathematical functions. You can import only Darwin.</p> <pre><code>import Darwin </code></pre> <p>If you want mathematical functions and other standard classes and functions. You can import Foundation.</p> <pre><code>import Foundation </code></pre> <p>If you want everything and also classes for user interface, it depends if your playground is for OS X or iOS.</p> <p>For OS X, you need import Cocoa.</p> <pre><code>import Cocoa </code></pre> <p>For iOS, you need import UIKit.</p> <pre><code>import UIKit </code></pre> <p>You can easily discover your playground platform by opening File Inspector (⌥⌘1).</p> <p><img src="https://i.stack.imgur.com/s0JDh.png" alt="Playground Settings - Platform"></p>
<p>To use the math-functions you have to <code>import Cocoa</code></p> <p>You can see the other defined mathematical functions in the following way. Make a Cmd-Click on the function name <code>sqrt</code> and you enter the file with all other global math functions and constanst.</p> <p>A small snippet of the file</p> <pre><code>... func pow(_: CDouble, _: CDouble) -&gt; CDouble func sqrtf(_: CFloat) -&gt; CFloat func sqrt(_: CDouble) -&gt; CDouble func erff(_: CFloat) -&gt; CFloat ... var M_LN10: CDouble { get } /* loge(10) */ var M_PI: CDouble { get } /* pi */ var M_PI_2: CDouble { get } /* pi/2 */ var M_SQRT2: CDouble { get } /* sqrt(2) */ ... </code></pre>
<p>To be perfectly precise, Darwin is enough. No need to import the whole Cocoa framework.</p> <pre><code>import Darwin </code></pre> <p>Of course, if you need elements from Cocoa or Foundation or other higher level frameworks, you can import them instead</p>
<p>For people using swift [2.2] on Linux i.e. Ubuntu, the import is different!</p> <p>The correct way to do this is to use Glibc. This is because on OS X and iOS, the basic Unix-like API's are in Darwin but in linux, these are located in Glibc. Importing Foundation won't help you here because it doesn't make the distinction by itself. To do this, you have to explicitly import it yourself:</p> <pre><code>#if os(OSX) || os(iOS) import Darwin #elseif os(Linux) import Glibc #endif </code></pre> <p>You can follow the development of the Foundation framework <a href="https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md">here</a> to learn more</p>