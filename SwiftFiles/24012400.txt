Convert CGFloat to CFloat in Swift
<p>I'm simply trying to round the <code>CGFloat</code> return value of <code>CGRectGetWidth</code>.</p> <pre><code>override func layoutSubviews() { let roundedWidth = roundf(CGRectGetWidth(self.bounds)) ... } </code></pre> <p>The compiler won't let me, giving the error:</p> <p><code>'NSNumber' is not a subtype of 'CFloat'</code>.</p> <p>I guess there is some basic thing I am missing here. <code>roundf</code> is taking a <code>CFloat</code> as argument, so how can I convert my <code>CGFloat</code> to <code>CFloat</code> to make the conversion? </p> <p><strong>Update:</strong></p> <p>Now using round instead of roundf but I am still getting the same error. I've tried cleaning the project and restarting Xcode.</p> <p><img src="https://i.stack.imgur.com/IqxTJ.png" alt="enter image description here"></p>
<p><code>CGRect</code> members are <code>CGFloats</code>, which, despite their name, are actually <code>CDoubles</code>. Thus, you need to use <code>round()</code>, not <code>roundf()</code></p> <pre><code>override func layoutSubviews() { let roundedWidth = round(CGRectGetWidth(self.bounds)) ... } </code></pre>
<p>For some reason I needed to make an explicit typecast to <code>CDouble</code> to make it work.</p> <pre><code>let roundedWidth = round(CDouble(CGRectGetWidth(self.bounds))) </code></pre> <p>I find this pretty strange since a <code>CGFloat</code> is a <code>CDouble</code> by definition. Seems like the compilator got a bit confused here for some reason.</p>
<p>The problem is that CGFloat is platform dependent (just like it is in ObjC). In a 32 bit environment, CGFloat is type aliased to CFloat - in a 64 bit environment, to CDouble. In ObjC, without the more pedantic warnings in place, round was happy to consume your float, and roundf your doubles.</p> <p>Swift doesn't allow implicit type conversions.</p> <p>Try building for an iPhone 5 and a iPhone 5s simulator, I suspect you'll see some differences.</p>
<p>CGFloat() works with all architectures for me.</p>