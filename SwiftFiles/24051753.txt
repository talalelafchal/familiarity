arithmetic within string literal in Swift
<p>Playing with Swift, I found something awkward error.</p> <pre><code>let cost = 82.5 let tip = 18.0 let str = "Your total cost will be \(cost + tip)" </code></pre> <p>This works fine as I expect, but</p> <pre><code>let cost = 82.5 let tip:Float = 18 let str = "Your total cost will be \(cost + tip)" </code></pre> <p>would not work with error </p> <pre><code>could not find member 'convertFromStringInterpolationSegment' let str = "Your total cost will be \(cost + tip)" </code></pre> <p>The difference between two example is declaring tip constant to explicitly float or not. Would this be reasonable result? </p>
<p>You still need to cast the numbers into the same type so they can be added together, e.g:</p> <pre><code>let cost = 82.5 let tip:Float = 18 let str = "Your total cost will be \(Float(cost) + tip)" </code></pre> <p>By default real number literals are inferred as <code>Double</code>, i.e:</p> <pre><code>let cost:Double = 82.5 </code></pre> <p>So they need to be either explicitly cast to a <code>Double</code> or a <code>Float</code> to be added together.</p>
<p>In your code <code>cost</code> in inferred to be of type <code>Double</code>.</p> <p>In your first (working) example <code>tip</code> is also inferred to be <code>Double</code> and the expressions <code>cost + tip</code> is an addition of two <code>Double</code> values, resulting in a <code>Double</code> value.</p> <p>In your second (not working) example <code>tip</code> is declared to be <code>Float</code> therefore the expressions <code>cost + tip</code> is an error. The error message is not very informative. But the problem is that you are adding a <code>Double</code> to a <code>Float</code> and in a strongly statically typed language you will not have automatic type conversions like you had in C or Objective C.</p> <p>You have to do either <code>Float(cost) + tip</code> or <code>cost + Double(tip)</code></p>
<p>Values are never implicitly converted to another type.</p> <pre><code>let cost = 82.5 let tip:Float = 18 let str = "Your total cost will be \(cost + tip)" </code></pre> <p>In the above example it is considering cost as double &amp; you have defined tip as float, so it is giving error.</p> <p>Rather specify the type of cost as float as shown below </p> <pre><code>let cost:Float = 82.5 </code></pre> <p>Hope it will solve your problem.</p>