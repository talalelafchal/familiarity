Could not instantiate class named IBNSLayoutConstraint
<p>I'm using XCode6 beta and trying out Swift. When I put some auto layout constraints in a view controller the app crashes with the following error: <code>Terminating app due to uncaught exception 'NSInvalidUnarchiveOperationException', reason: 'Could not instantiate class named IBNSLayoutConstraint'</code></p>
<p>There is an option in the inspector window when you select the xib file that will not use the constrains under "Show file the inspector" in the inspector called "Use autolayout".</p>
<p>There was some problem with using size classes. I disabled that option from the storyboard properties and use only auto layout. It wasn't such a big problem since the app is iPhone only.</p>
<p>You're getting this error because you've set a constraint to an IBOutlet that is removed at runtime. This happens when you set the constraint to be a placeholder in Interface Builder. Since the constraint is removed, when it goes to unarchive it, it throws an error saying it can't do so.</p> <p>There are two ways to correct this.</p> <h2>Method 1</h2> <ol> <li>Right-click on your Storyboard > Open As > Source Code</li> <li>In the opened storyboard xml, search for <code>placeholder="YES"</code>.</li> <li>You'll find constraints that are set to be removed at runtime. Remove the placeholder attribute from the constraint, save and close.</li> <li>Run the app and your problem should be fixed.</li> </ol> <h2>Method 2</h2> <ol> <li>Find the constraint that's causing your problems in Interface Builder. Uncheck the Placeholder option in the GUI. This should be one of the constraints that's set to an IBOutlet in the ViewController that's causing your crash.</li> </ol> <p><img src="https://i.stack.imgur.com/17Umn.png" alt="Interface Builder attribute editor showing the Placeholder option checked."></p> <p>This is what it should look like:</p> <p><img src="https://i.stack.imgur.com/ciqHr.png" alt="Interface Builder attribute editor showing the Placeholder option unchecked."></p> <h2>Alternative</h2> <p>Assuming you actually want the constraint to be a placeholder, then you'll need to remove any referencing outlets. To do this, select the constraint that you wish to be a placeholder. Then open the connections inspector (the button furthest to the right that looks like this: (->) ) and then remove any referencing outlets that may exist on that constraint.</p>
<p>I had the same problem just now and the following worked for me.</p> <p>I released a working version of my app to the App Store, came back to work on it again a few days later tapping onto one my tabs in the UITabBarController it crashed with the error:</p> <pre><code>Terminating app due to uncaught exception 'NSInvalidUnarchiveOperationException', reason: 'Could not instantiate class named IBNSLayoutConstraint' </code></pre> <p>I didn't have any placeholder layout constraints that I was aware of or constraint outlets that shouldn't have been defined. </p> <p>The solution for me was to simply turn size classes off and keep size class data for iPhone (App is only for iPhone). This must've deleted anything I'd missed in the size classes. I want size classes so I turned them back on and the app just worked again.</p>
<p>This might not be necessarily a constraint problem. For me it was caused by not having checked "Installed" for a size class that was applying to my layout, see here <a href="https://i.stack.imgur.com/dGmU4.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/dGmU4.png" alt="install must be checked"></a></p>
<p>What ended up happening to me was that I cut a subview inside of Interface Builder to copy it into another xib. This left the subview in original xib Interface builder with it being greyed out. After removing the subview from it's original place (by selecting and deleting). I was able to get rid of the error. </p>
<p>I made a change to a scroll view so that it would let the picker controls embedded in it work properly using a solution I found elsewhere in Stackoverflow. My new storyboard simply added these attributes to the scroll view, which seemed fine to me.</p> <pre><code> delaysContentTouches="NO" canCancelContentTouches="NO" </code></pre> <p>But in addition, I saw in my storyboard in another scene the following new fragment:</p> <pre><code> &lt;variation key="default"&gt; &lt;mask key="subviews"&gt; &lt;exclude reference="86H-aM-wei"/&gt; &lt;/mask&gt; &lt;/variation&gt; </code></pre> <p>I have no idea where it came from. At first I ignored it because everything seemed to work find on my dev machine. But when the build was built as Release and tested, I got the crash. Removing that spurious(?) fragment fixed the crash and has not seemed to impact anything else.</p>
<p>I had this issue when I had a button in a custom UICollectionViewCell, and had some of its constraints as IBOutlets on that class. I moved the button from the cell to the parent view controller and the IBOutlets were still referenced in the cell but didn't actually exist on the cell so blew everything up. Just needed to remove those IBOutlets and everything worked fine again!</p>