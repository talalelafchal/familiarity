Best way to reload UICollectionView
I have a UICollectionView where I load collection of photos from Photo library. for asset: PHAsset in self.photoAssets! { SFSImageManger.imageFromAsset(asset, isOriginal: false, toSize: CGSize(width: 150, height: 150), resultHandler: { (image: UIImage?) in guard image != nil else { return } dispatch_async(dispatch_get_main_queue(), { self.photos.append(image!) self.albumCollection.reloadData() }) }) } This is how I load photos. The problem is when I have many photos, say more than 500, the collectionView flickers when I scroll and collectionView selection doesn't work until the for loop completes. I do not want the app to show loading progress and freeze the UI also. So, How do I increase the performance in this case?
What I would do is to create a didSet in your photos array like this: var photos = [UIImages]() { didSet { albumCollection.reloadData() { } And I suppose that your loop is in a function, in that case I would create a temporary array and initialise it with the photos array, append the images to the temporary array and after the loop assign the temporary array back to the original photos array. Something like this is my idea: var tempPhotos = photos for asset: PHAsset in self.photoAssets! { SFSImageManger.imageFromAsset(asset, isOriginal: false, toSize: CGSize(width: 150, height: 150), resultHandler: { (image: UIImage?) in guard image != nil else { return } dispatch_async(dispatch_get_main_queue(), { self.tempPhotos.append(image!) }) }) } photos = tempPhotos This way the collectionView will only update once. Greetings Jorge Paravicini.
What's about generating image from asset in cellForRow method and while image is generating show placeholder or just grey background instead image in the cell.
You should not reload the complete collection view. Instead use incremental updates with insertItems().