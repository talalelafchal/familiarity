Can't hook up an outlet collection in Xcode 6 using storyboard
<p>I am having trouble creating an outlet collection in Xcode 6. Outlet collections in Xcode 6 now function as regular IBOutlets, and you use the same @IBOutlet attribute to declare an outlet collection while being sure to specify an array for the type. I have done this in my view controller's swift file i.e.</p> <pre><code>@IBOutlet var cardButtons: UIButton[] </code></pre> <p>In Xcode 5 when one control drags from an element in the storyboard to the corresponding view controller using the assistant editor they are presented with an option to create either an outlet or an outlet collection. This seems to no longer be possible in Xcode 6 and my guess is because outlets and outlet collection now share the same @IBOutlet attribute. How should I create an outlet collection which will contain say 10 buttons without being able to control drag each one from the storyboard view and hook it up to my</p> <pre><code>@IBOutlet var cardButtons: UIButton[] </code></pre> <p>property in my view controller swift file?</p>
<p>You've got it right, you just need to define the array more formally:</p> <pre><code>@IBOutlet var cardButtons: Array&lt;UIButton&gt; </code></pre> <p>Now you'll be able to connect the buttons from IB.</p> <hr> <p>The above <em>should</em> work, but still doesn't in Xcode 6 beta 3. A workaround is to use an <code>NSArray</code> until Xcode and Swift can handle this properly:</p> <pre><code>class ViewController: UIViewController { @IBOutlet strong var labels: NSArray! override func viewDidLoad() { super.viewDidLoad() for label in self.labels as [UILabel] { label.textColor = UIColor.redColor() } } } </code></pre>
<p>This is under the Xcode 6 beta known issues: "Interface Builder does not support declaring outlet collections in Swift classes. (15607242)"</p> <p>Nate Cook's answer is correct for attaching outlets, but not outlet collections. Hopefully in the next Xcode 6 beta release this issue will be resolved.</p>
<p>Interesting. That exact code gets me a crash (xcode6 beta2):</p> <p>ImplicitlyUnwrappedOptional>'</p> <p>:0: error: unable to execute command: Segmentation fault: 11</p> <p>:0: error: swift frontend command failed due to signal (use -v to see invocation)</p> <p>Command /Applications/Xcode6-Beta2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift failed with exit code 254</p>
<p>In seed 3 of Xcode 6, the following syntax works:</p> <pre><code>@IBOutlet strong var cardButtons: NSArray? </code></pre> <p>Note the following:</p> <ul> <li><p>You have to use <code>strong</code> because @IBOutlet is weak by default, and since the array is not in the interface, it will vanish before you have a chance to use it.</p></li> <li><p>You have to use NSArray because you can't mark Array as strong.</p></li> </ul> <p>Knowing the contained type is now up to you, of course.</p> <p>Note also that this is <em>not</em> the syntax advertised by the docs or by Xcode itself when you control-drag to form an outlet collection. I can't help that; using that syntax causes a seg fault, so clearly something else is needed, at least for now.</p>
<p>It is strange, I did IBOutlet with swift and it works for a while, Just realize it stop working and find out something get broke in last release of xcode beta where it is not working.</p>