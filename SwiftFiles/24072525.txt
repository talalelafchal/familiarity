Comparing Characters in Swift
<pre><code>let a:Character = "a" // Would not really be a literal in my app... let b:Character = "b" // ...but this illustrates the issue let compare = a == b </code></pre> <p>The compiler complains: Could not find an overload for == that accepts the supplied arguments.</p> <p>This despite the fact that if you right-click on Character you can easily find this declaration</p> <pre><code>func ==(lhs: Character, rhs: Character) -&gt; Bool </code></pre> <p>Any suggestions? I can work around by assigning the Characters to Strings and doing a String compare, BUT I am iterating over thousands of Characters. Surely there is a Swift Way.</p>
<p>This should actually work. Here's the output of your supplied code.</p> <p><img src="https://i.stack.imgur.com/mzexs.png" alt="Code above shown in an Xcode playground"></p>
<p>This works w/o a problem:</p> <pre><code> 3&gt; let a: Character = "a" a: Character = SmallRepresentation { SmallRepresentation = 9223372036854775649 } 4&gt; let b: Character = "b" b: Character = SmallRepresentation { SmallRepresentation = 9223372036854775650 } 5&gt; let compare = (a == b) compare: (Bool) = false 6&gt; let compare2 = a == b compare2: Bool = false </code></pre>