How can I make a Swift 3.0 timer that calculates in hh:mm:ss:ms
I followed DuncanC's solution in Swift timer in milliseconds. Code below: startTime = NSDate.timeIntervalSinceReferenceDate Timer.scheduledTimer(timeInterval: 0.02, target: self, selector: Selector(("advanceTimer:")), userInfo: nil, repeats: true) func advanceTimer(timer: Timer) { //Total time since timer started, in seconds self.time = NSDate.timeIntervalSinceReferenceDate - startTime //The rest of your code goes here } Xcode recommended I change NSDate.timeIntervalSinceReferenceDate() to NSDate.timeIntervalSinceReferenceDate and startTime: NSTimeInterval to startTime: TimeInterval for Swift 3.0. My code produces the error: Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[MyGame.GameScene advanceTimer:]: unrecognized selector sent to instance
In Swift 3 Selector syntax is changed, now you need to pass first parameter label with your action, your selector should be like #selector(self.advanceTimer(timer:)). Timer.scheduledTimer(timeInterval: 0.02, target: self, selector: #selector(self.advanceTimer(timer:)), userInfo: nil, repeats: true)
advanceTimer(timer:) should be declared differently according to Swift API Design Guidelines, You should use Swift's native Date instead of NSDate and selector syntax has changed so your code would now be written like this: startTime = NSDate.timeIntervalSinceReferenceDate Timer.scheduledTimer(timeInterval: 0.02, target: self, selector: #selector(advanceTimer), userInfo: nil, repeats: true) func advanceTimer(_ timer: Timer) { //Total time since timer started, in seconds self.time = NSDate.timeIntervalSinceReferenceDate - startTime //The rest of your code goes here } Also, Timer has new closure based methods, so your the whole thing can now be reduced to: startTime = NSDate.timeIntervalSinceReferenceDate Timer.scheduledTimer(withTimeInterval: 0.02, repeats: true) { timer in //Total time since timer started, in seconds self.time = NSDate.timeIntervalSinceReferenceDate - startTime //The rest of your code goes here }