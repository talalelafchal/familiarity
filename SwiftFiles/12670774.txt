Detect the reachability in background
<p>I have been testing different way to implement the possibility to know if the device get internet back when the app it is in background so the first code I test was the Apple reachability sample code <a href="http://developer.apple.com/library/ios/#samplecode/Reachability/Introduction/Intro.html">http://developer.apple.com/library/ios/#samplecode/Reachability/Introduction/Intro.html</a> </p> <p>But this code doesn´t notify internet state when the App it´s in background. So I tried also the folowing code and it work when App is launched from Background state to foreground (same as Apple reachability sample code)</p> <pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { // check for internet connection [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(checkNetworkStatus:) name:kReachabilityChangedNotification object:nil]; // Set up Reachability internetReachable = [[Reachability reachabilityForInternetConnection] retain]; [internetReachable startNotifier]; ... } - (void)applicationDidEnterBackground:(UIApplication *)application { // check for internet connection [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(checkNetworkStatus:) name:kReachabilityChangedNotification object:nil]; // Set up Reachability internetReachable = [[Reachability reachabilityForInternetConnection] retain]; [internetReachable startNotifier]; } - (void)checkNetworkStatus:(NSNotification *)notice { // called after network status changes NetworkStatus internetStatus = [internetReachable currentReachabilityStatus]; switch (internetStatus) { case NotReachable: { NSLog(@"The internet is down."); break; } case ReachableViaWiFi: { NSLog(@"The internet is working via WIFI"); //Alert sound in Background when App have internet again UILocalNotification *notification = [[[UILocalNotification alloc] init] autorelease]; if (notification) { [notification setFireDate:[NSDate date]]; [notification setTimeZone:[NSTimeZone defaultTimeZone]]; [notification setRepeatInterval:0]; [notification setSoundName:@"alarmsound.caf"]; [notification setAlertBody:@"Send notification internet back"]; [[UIApplication sharedApplication] scheduleLocalNotification:notification]; } break; } case ReachableViaWWAN: { NSLog(@"The internet is working via WWAN!"); //Alert sound in Background when App have internet again UILocalNotification *notification = [[[UILocalNotification alloc] init] autorelease]; if (notification) { [notification setFireDate:[NSDate date]]; [notification setTimeZone:[NSTimeZone defaultTimeZone]]; [notification setRepeatInterval:0]; [notification setSoundName:@"alarmsound.caf"]; [notification setAlertBody:@"Send notification internet back"]; [[UIApplication sharedApplication] scheduleLocalNotification:notification]; } break; } } } </code></pre> <p><strong>My question is :</strong> <em>What is the way to get notified when internet state changed when the app is in Background ?</em></p>
<p>I don't believe there is a way to receive reachability notifications while you're in the background. The correct way to handle this would be to check for reachability in AppDelegate's - (void)applicationWillEnterForeground:(UIApplication *)application.</p> <p>The only background event that background apps react to is receipt of push notifications, and that is because the OS wakes them up to do so, and then only when the user requests it.</p>
<p>You app should be multitasking (VoIP, LOCATION or Audio). And in this way, you can catch the network changing when the app in the background.</p>
<p><em>Live</em> you cannot change if the network connection changed, the <strong>very best</strong> you can do to make it work is to use <code>Background Fetch</code> mode from <code>Capabilities</code>. Firstable you need to check the checkbox for background mode: <a href="https://i.stack.imgur.com/BSVI6.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/BSVI6.png" alt="enter image description here"></a></p> <p>Then you need to ask for time interval <em>as often as you can</em> the sooner the better so i suggest <code>application:didFinishLaunchingWithOptions:</code> and you need to put this line:</p> <pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { [application setMinimumBackgroundFetchInterval:UIApplicationBackgroundFetchIntervalMinimum]; return YES; } </code></pre> <p>The <code>UIApplicationBackgroundFetchIntervalMinimum</code> it's as often as possible, but it's not exact number of seconds between fetches from the docs:</p> <blockquote> <p>The smallest fetch interval supported by the system.</p> </blockquote> <p>And then when background fetch will fire you can check in <code>AppDelegate</code> with method:</p> <pre><code>-(void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler{ Reachability *reachability = [Reachability reachabilityForInternetConnection]; [reachability startNotifier]; NetworkStatus status = [reachability currentReachabilityStatus]; switch (status) { case NotReachable: { NSLog(@"no internet connection"); break; } case ReachableViaWiFi: { NSLog(@"wifi"); break; } case ReachableViaWWAN: { NSLog(@"cellurar"); break; } } completionHandler(YES); } </code></pre> <p>All of this will work in <strong>iOS 7.0</strong> or higher.</p>