Swift Dispatch Groups with Network calls and Completion
I have a a function where I need to get the difference of 2 arrays and use a completion to return the difference in dictionary form. It requires a network call to create an object from the TVDB api. I tried to implement dispatchGroups with .enter() and .leave() and everything seems to work in the right order (checking with breakpoints) until the last iteration it crashes on the line with "groupDispatch.leave()" with no error message in the console. Here is the function in question:  func showsToWatch(idArray: [Int], completion:@escaping(_ dict: [Int:[Int]])->Void){ var toWatch:[Int:[Int]] = [:] let groupDispatch = DispatchGroup() for id in idArray { groupDispatch.enter() guard let watchedId = SeriesController.sharedController.watchedDict[id] else {return} NetworkController.getEpisodes(id) { (episodes, error) in if let episodes = episodes { let episodesId = episodes.map({$0.id}) let difference = episodesId.filter { !watchedId.contains($0) } toWatch[id] = difference } groupDispatch.leave() } } groupDispatch.notify(queue: DispatchQueue.main, execute: { () -> Void in completion(toWatch) }) } This is the NetworkController.getEpisodes function: static func getEpisodes(_ id: Int, completion:@escaping (_ episode: [Episode]?, _ error: NSError?)->Void) { NetworkController.getPageCount(id) { (pageCount) in var allEpisodes = [Episode]() for i in 1...pageCount { let idString = String(id) let searchUrl = baseUrl + "series/\(idString)/episodes?page=\(i)" let searchParam = searchUrl let myUrl = URL(string: searchParam) var request = URLRequest(url:myUrl!) request.httpMethod = "GET" request.addValue("application/json", forHTTPHeaderField: "Accept") let headerString = "Bearer " + myToken request.addValue(headerString, forHTTPHeaderField: "Authorization") let task = URLSession.shared.dataTask(with: request, completionHandler: { data, response, error in if error != nil { print("error=\(error)") completion(nil, error as NSError?) return } do { if let convertedJsonIntoDict = try JSONSerialization.jsonObject(with: data!, options: []) as? NSDictionary { if let dataDict = convertedJsonIntoDict as? [String:AnyObject] { if let dataArray = dataDict["data"] as? [[String:AnyObject]]{ for episodeDict in dataArray { let episode = Episode(dict: episodeDict) //print("S\(episode.airedSeason)E\(episode.airedEpisodeNumber)") if episode.absoluteNumber < 0 { if episode.airedSeason > 0 && episode.airedEpisodeNumber > 0 { allEpisodes.append(episode) } } else { allEpisodes.append(episode) } } } } } completion(allEpisodes, nil) } catch let error as NSError { print(error.localizedDescription) completion(nil, error as NSError?) } }); task.resume() } } } I tried putting the groupDispatch.leave() in different places within the function/for loop but then it doesn't complete in the correct order (edit: it hits the completion before it sets the variable "difference" array to the correct key in "toWatch" dictionary variable). I am a bit confused as the how the .leave() works it seems. Thanks!