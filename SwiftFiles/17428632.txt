Drag &amp; Drop between two UICollectionViews
<p>I need to drag a Cell from <code>CollectionView</code> One and drop it to <code>CollectionView</code> Two. The Drag &amp; Drop inside one CollectionView is no Problem, but how can i get the Cell out of CollectionView One to CollectionView Two?</p> <p>Any ideas? Any projects or frameworks that have already solved this problem? Thanks for helping!</p>
<p>When you select the cell from the first collection view, remove it from this collection view, create a new view as copy of that cell place it as subview of the superview on top of all views. Make that view movable using pan gestures. As soon as you "drop" this intermediary cell, detect its position and add it to the current collection view.</p>
<p><a href="https://github.com/Ice3SteveFortune/i3-dragndrop" rel="nofollow">https://github.com/Ice3SteveFortune/i3-dragndrop</a> Check this out - its a helper I'm working on to achieve just that. It also supports tableviews</p> <p><strong>UPDATE</strong></p> <p>I've recently released the second version of this codebase, called <a href="https://github.com/ice3-software/between-kit" rel="nofollow">BetweenKit</a>. Its now a fully-fledged drag-and-drop framework.</p> <p>Hope it proves useful !</p>
<p>I wrote a tutorial in Swift about that followed by some code. You can have a look at</p> <p><a href="http://karmadust.com/drag-and-drop-between-uicollectionviews/" rel="nofollow">http://karmadust.com/drag-and-drop-between-uicollectionviews/</a></p>
<p>Ok, here is the simplest flow ever for the following example:</p> <p><a href="https://i.stack.imgur.com/tX9GD.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/tX9GD.png" alt="enter image description here"></a></p> <ol> <li>Add <code>UIGestureRecognizer</code> for every of <code>UICollectionView</code>. </li> <li><p>Connect every gesture recognizer with one method:</p> <pre><code>@IBAction func longPressGestureChanged(recognizer: UILongPressGestureRecognizer) { ... } </code></pre></li> <li><p>Within <code>UIViewController</code> add <code>@IBOutlet</code> for each of <code>UICollectionView</code>:</p> <pre><code>@IBOutlet var collectionViewGreen: UICollectionView! @IBOutlet var collectionViewYellow: UICollectionView! </code></pre></li> <li><p>Implement gesture recognizer method to detect changes:</p> <pre><code>@IBAction func longPressGestureChanged(recognizer: UILongPressGestureRecognizer) { let globalLocation = recognizer.locationInView(view) if CGRectContainsPoint(collectionViewGreen.frame, globalLocation) { //you cover green collection view let point = view.convertPoint(globalLocation, toView: collectionViewGreen) if let indexPath = collectionViewGreen.indexPathForItemAtPoint(point) { //you cover cell in green collection view } else { //you do not cover any of cells in green collection view } } else if CGRectContainsPoint(collectionViewYellow.frame, globalLocation) { //you cover yellow collection view let point = view.convertPoint(globalLocation, toView: collectionViewYellow) if let indexPath = collectionViewYellow.indexPathForItemAtPoint(point) { //you cover cell in yellow collection view } else { //you do not cover any of cells in yellow collection view } } else { //you do not cover any of collection views } } </code></pre></li> </ol>