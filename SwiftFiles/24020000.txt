Subclass UIApplication with Swift
<p>In Objective C it was simple: it was sufficient to update the main.m file and change the UIApplicationMain() parameters</p> <pre><code>return UIApplicationMain(argc, argv, NSStringFromClass([CustomUIApplication class]), NSStringFromClass([AppDelegate class])); </code></pre> <p>But in swift there is no main.m file, since the guide says</p> <p>“Code written at global scope is used as the entry point for the program, so you don’t need a main function.”</p> <p>So, how to subclass UIApplication in swift?? Any suggestion?</p>
<p>One alternative is to extend <code>UIApplication</code> instead of subclassing it. According to the <a href="https://itun.es/br/jEUH0.l">iBook</a> released by Apple, extensions in Swift can:</p> <blockquote> <p>Add computed properties and computed static properties Define instance methods and type methods Provide new initializers Define subscripts Define and use new nested types Make an existing type conform to a protocol</p> <p>Excerpt From: Apple Inc. “The Swift Programming Language.</p> </blockquote> <p>If your needs in subclassing <code>UIApplication</code> are satisfied by those capabilities, an Extension might be the way to go.</p>
<p>Ok, I've found the solution First, I've noticed that, at the top of the AppDelegate.swift file, there is this line</p> <pre><code>@UIApplicationMain </code></pre> <p>Since this line is outside any scope (it's at file level), it's executed immediately, and I assume that the compiler translate it in a standard main function. </p> <p>So, I did this, starting from a new Swift-Only application: </p> <ul> <li>commented out <code>@UIApplicationMain</code></li> <li>added a main.swift file like this (FLApplication is my subclass).<br> <strong>IMPORTANT</strong> the file MUST BE NAMED main.swift, since top level statements are not supported on other files! You can't add the UIApplicationMain() call inside any other file, otherwise you'll receive this error:</li> </ul> <blockquote> <p>Expressions are not allowed at the top level</p> </blockquote> <p>This is the main.swift file . </p> <pre><code>import Foundation import UIKit UIApplicationMain(C_ARGC, C_ARGV, NSStringFromClass(FLApplication), NSStringFromClass(AppDelegate)) </code></pre> <p>create a swift file for the UIApplication subclass, FLApplication.swift, with this code:</p> <pre><code>import UIKit import Foundation class FLApplication: UIApplication { override func sendEvent(event: UIEvent!) { super.sendEvent(event) println("send event") // this is an example // ... dispatch the message... } } </code></pre> <p>now, UIApplication is correctly subclassed and you'll see the "send event" messages in the log</p> <p><strong>EDIT</strong></p> <p>As commented by Hu Junfeng now the explanations about <code>UIApplicationMain</code> and the main.swift file are documented in the Attributes section of The Swift Language Reference: <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Attributes.html">Link</a></p> <p><strong>EDIT - MARCH 2015</strong></p> <p>As commented by Thomas Verbeek In the XCode 6.3 Beta, you might find that C_ARGC and C_ARGV have been renamed to Process.argc and Process.unsafeArgv respectively. Your UIApplicationMain call in the main.swift file will need updating to: </p> <pre><code>UIApplicationMain(Process.argc, Process.unsafeArgv, NSStringFromClass(FLApplication), NSStringFromClass(AppDelegate)) </code></pre>