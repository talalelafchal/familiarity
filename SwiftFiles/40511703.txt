Update to Xcode 8.1: Can no longer convert JSON data of type AnyObject to expected Type
When receiving a dictionary [String:AnyObject] my parsing now fails on trivial stuff. When I used to be able to convert, for example the following: the model is simply: class Invoice:NSObject { var id:String var amount:Float init?(json: [String:AnyObject]) { if let id = json["id"] as? String { self.id = id } if let amount = json["amount"] as? Float { self.amount = amount } } } The input is for example: ["id":"1", "amount":0] or ["id":"1", "amount":4] or ["id":"1", "amount":4.50] As of XCode 8.1 my models now return nil and I cannot see why. Did 8.1 change casting or something?
Your class's init method won't work in this case, as there is a chance that some of its properties won't be initialised due to the unwrapping not working in your if let statements. So you would have to set some defaults for those properties: var id: String = "" var amount: Float = 0 Another way is to add an else case for the unwrapping: if let amount = json["amount"] as? Float { self.amount = amount } else { amount = 0 } Which is basically the same as setting a default like we did before, so it would be more clear to leave it as the first way described above. Or, more easily, if you don't want to have defaults for a specific property, you'd have to make it an optional, e.g. var id: String?
I am not sure it may be your solution class Invoice:NSObject { var id:String? var amount:Float? init?(json: [String:AnyObject]) { if let id = json["id"] as? String { self.id = id } if let amount = json["amount"] as? Float { self.amount = amount } } } var jsontimey = ["id" : "1" as AnyObject , "amount":4.50 as AnyObject] as [String : AnyObject] var ins = Invoice( json: jsontimey ) output :
Changing my 'if let' works. var amount:Double Xcode 8.0 if let amount = json["amount"] as? Float { self.amount = amount } Xcode 8.1 if let amount = json["amount"] as? NSNumber { self.amount = amount.doubleValue }