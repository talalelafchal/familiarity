try-catch exceptions in Swift
<p>Is it possible to catch exceptions in Swift? Given the following code:</p> <pre><code>NSException.raise(NSRangeException, format: "Now you've gone too far!", arguments: CVaListPointer(fromUnsafePointer: UnsafePointer())) </code></pre> <p>Is it possible to prevent the exception from crashing the entire program? That is, what is the Swift equivalent of the following in Objective-C:</p> <pre><code>@try { [NSException raise:NSRangeException format:@"Now you've gone too far!"]; } </code></pre>
<p>I believe that, as of today, Swift does not support this. It will most likely be added on future betas.</p>
<p>It doesn't have exception handling, <a href="https://devforums.apple.com/message/970961">and this discussion in the developer forum discusses why it may be so</a>:</p> <blockquote> <p>but keep in mind that Cocoa and Cocoa Touch traditionally don't intend for you to catch exceptions; they intend for you to not cause them to be thrown in the first place. Ordinary errors should be handled with optional types and inout NSError parameters; you should address any situation that causes an assertion to fail (which seems to be the only exception-throwing mechanism in Swift) by writing better code.</p> </blockquote>