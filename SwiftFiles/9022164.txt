How to make first letter uppercase?
<p>I'm developing an iPhone app. In a label, i want to show an user's first letter of the name uppercase. How do I do that?</p>
<p>If there is only one word-NSString, then use the method</p> <p><a href="http://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/Reference/NSString.html#//apple_ref/occ/instm/NSString/capitalizedString">-capitalizedString</a></p> <pre><code>NSString *capitalizedString = [myStr capitalizedString]; // capitalizes every word </code></pre> <p>Otherwise, for multi word strings, you have to extract first character and make only that character upper case.</p>
<p>(2014-07-24: Currently accepted answer is not correct) The question is very specific: Make the first letter uppercase, leave the rest lowercase. Using capitalizedString produces a different result: “Capitalized String” instead of “Capitalized string”. There is another variant depending on the locale, which is capitalizedStringWithLocale, but it's not correct for spanish, right now it's using the same rules as in english, so this is how I'm doing it for spanish:</p> <pre><code>NSString *abc = @"this is test"; abc = [NSString stringWithFormat:@"%@%@",[[abc substringToIndex:1] uppercaseString],[abc substringFromIndex:1] ]; NSLog(@"abc = %@",abc); </code></pre>
<p>This is for your <code>NSString+Util</code> category...</p> <pre><code>- (NSString *) capitalizedFirstLetter { NSString *retVal; if (self.length &lt; 2) { retVal = self.capitalizedString; } else { retVal = string(@"%@%@",[[self substringToIndex:1] uppercaseString],[self substringFromIndex:1]); } return retVal; } </code></pre> <p>You can do that with <code>NSString stringWithFormat</code>, of course. I use this weirdness:</p> <pre><code>#define string(...) \ [NSString stringWithFormat:__VA_ARGS__] </code></pre>
<p>here's a swift extension for it</p> <pre><code>extension NSString { func capitalizeFirstLetter() -&gt; NSString { return self.length &gt; 1 ? self.substringToIndex(1).capitalizedString + self.substringFromIndex(1) : self.capitalizedString } } </code></pre>
<p>This is how it worked for me:</p> <pre><code>NSString *serverString = jsonObject[@"info"]; NSMutableString *textToDisplay = [NSMutableString stringWithFormat:@"%@", serverString]; [textToDisplay replaceCharactersInRange:NSMakeRange(0, 1) withString:[textToDisplay substringToIndex:1].capitalizedString]; cell.infoLabel.text = textToDisplay; </code></pre> <p>Hope it helps.</p>
<p><strong>Swift:</strong></p> <pre><code>let userName = "hard CODE" yourLabel.text = userName.localizedUppercaseString </code></pre> <p>I recommend using this localised version of uppercase, since names are locale sensitive.</p>
<p>In case someone is still interested in 2016, here is a <strong>Swift 3</strong> extension:</p> <pre><code>extension String { func capitalizedFirst() -&gt; String { let first = self[self.startIndex ..&lt; self.index(startIndex, offsetBy: 1)] let rest = self[self.index(startIndex, offsetBy: 1) ..&lt; self.endIndex] return first.uppercased() + rest.lowercased() } func capitalizedFirst(with: Locale?) -&gt; String { let first = self[self.startIndex ..&lt; self.index(startIndex, offsetBy: 1)] let rest = self[self.index(startIndex, offsetBy: 1) ..&lt; self.endIndex] return first.uppercased(with: with) + rest.lowercased(with: with) } } </code></pre> <p>Then you use it exactly as you would for the usual uppercased() or capitalized():</p> <p><code>myString.capitalizedFirst()</code> or <code>myString.capitalizedFirst(with: Locale.current)</code></p>
<p>Simply</p> <pre><code>- (NSString *)capitalizeFirstLetterOnlyOfString:(NSString *)string{ NSMutableString *result = [string lowercaseString].mutableCopy; [result replaceCharactersInRange:NSMakeRange(0, 1) withString:[[result substringToIndex:1] capitalizedString]]; return result; } </code></pre>