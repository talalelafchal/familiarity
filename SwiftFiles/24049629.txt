How to break outer loops from inner structures that respond break (loops/switch)
<p>How to I break an outer loop from within an nested structure that responds to the <code>break</code> statement in Swift?</p> <p>For example:</p> <pre><code>while someCondition { if someOtherCondition { switch (someValue) { case 0: // do something case 1: // exit loop case 2...5: // do something else default: break } } else { someCondition = false } } </code></pre> <p>The <code>break</code> will only get me out of the <code>switch</code>, and in Swift, it has to be used as empty cases are not allowed. How can I entirely exit the loop from within the <code>switch</code>?</p>
<p>Swift allows for <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID141">labeled statements</a>. Using a labeled statement, you can specify which which control structure you want to <code>break</code> from no matter how deeply you nest your loops (although, generally, less nesting is better from a readability standpoint). This also works for <code>continue</code>.</p> <p>Example:</p> <pre><code>outerLoop: while someCondition { if someOtherCondition { switch (someValue) { case 0: // do something case 1: break outerLoop // exit loop case 2...5: // do something else default: break } } else { someCondition = false } } </code></pre>