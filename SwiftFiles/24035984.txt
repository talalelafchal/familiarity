Instantiate and Present a viewController in Swift
<h2>Issue</h2> <p>I started taking a look of the new <code>Swift</code> on <code>Xcode 6</code>, and I tried some demo projects and tutorials. Now I am stuck at:</p> <p><strong>Instantiating and then presenting a <code>viewController</code> from a specific storyboard</strong></p> <h2>Objective-C Solution</h2> <pre><code>UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"myStoryboardName" bundle:nil]; UIViewController *vc = [storyboard instantiateViewControllerWithIdentifier:@"myVCID"]; [self presentViewController:vc animated:YES completion:nil]; </code></pre> <p>How to achieve this on Swift?</p>
<p>For people using <a href="http://stackoverflow.com/a/24036067/2664437">@akashivskyy's answer</a> to instantiate <code>UIViewController</code> and are having the exception:</p> <blockquote> <p>fatal error: use of unimplemented initializer 'init(coder:)' for class</p> </blockquote> <p><strong>Quick tip:</strong></p> <p>Manually implement <code>init(coder: NSCoder!)</code> at your destination <code>UIViewController</code> that you are trying to instantiate</p> <pre><code>init(coder aDecoder: NSCoder!) { super.init(coder: aDecoder) } </code></pre> <p>If you need more description please refer to my answer <a href="http://stackoverflow.com/questions/24036393/fatal-error-use-of-unimplemented-initializer-initcoder-for-class/24036440#24036440">here</a></p>
<p>It all is a matter of the new syntax, functionality hasn't changed:</p> <pre><code>// Swift 3.0 let storyboard = UIStoryboard(name: "MyStoryboardName", bundle: nil) let controller = storyboard.instantiateViewController(withIdentifier: "someViewController") as! UIViewController self.present(controller, animated: true, completion: nil) </code></pre> <p>If you're having problems with <code>init(coder:)</code>, please refer to <a href="http://stackoverflow.com/a/24036227/736649">EridB's answer</a>.</p>
<pre><code>// "Main" is name of .storybord file " let mainStoryboard: UIStoryboard = UIStoryboard(name: "Main", bundle: nil) // "MiniGameView" is the ID given to the ViewController in the interfacebuilder // MiniGameViewController is the CLASS name of the ViewController.swift file acosiated to the ViewController var setViewController = mainStoryboard.instantiateViewControllerWithIdentifier("MiniGameView") as MiniGameViewController var rootViewController = self.window!.rootViewController rootViewController?.presentViewController(setViewController, animated: false, completion: nil) </code></pre> <p>This worked fine for me when i put it in AppDelegate </p>
<p><a href="http://sketchytech.blogspot.sg/2012/11/instantiate-view-controller-using.html">This link has both the implementations:</a></p> <p>Swift:</p> <pre><code>let viewController:UIViewController = UIStoryboard(name: "Main", bundle: nil).instantiateViewControllerWithIdentifier("ViewController") as UIViewController self.presentViewController(viewController, animated: false, completion: nil) </code></pre> <p>Objective C</p> <pre><code>UIViewController *viewController = [[UIStoryboard storyboardWithName:@"MainStoryboard" bundle:nil] instantiateViewControllerWithIdentifier:@"ViewController"]; </code></pre> <p><a href="http://stackoverflow.com/questions/25914744/swift-instantiateviewcontrollerwithidentifier">This link has code for initiating viewcontroller in the same storyboard</a></p> <pre><code>/* Helper to Switch the View based on StoryBoard @param StoryBoard ID as String */ func switchToViewController(identifier: String) { let viewController = self.storyboard?.instantiateViewControllerWithIdentifier(identifier) as! UIViewController self.navigationController?.setViewControllers([viewController], animated: false) } </code></pre>
<p>akashivskyy's answer works just fine! But, in case you have some trouble returning from the presented view controller, this alternative can be helpful. It worked for me!</p> <p>Swift:</p> <pre><code>let storyboard = UIStoryboard(name: "MyStoryboardName", bundle: nil) let vc = storyboard.instantiateViewControllerWithIdentifier("someViewController") as! UIViewController // Alternative way to present the new view controller self.navigationController?.showViewController(vc, sender: nil) </code></pre> <p>Obj-C:</p> <pre><code>UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"MyStoryboardName" bundle:nil]; UIViewController *vc = [storyboard instantiateViewControllerWithIdentifier:@"someViewController"]; [self.navigationController showViewController:vc sender:nil]; </code></pre>
<p>If you want to present it modally, you should have something like bellow:</p> <pre><code>let vc = self.storyboard!.instantiateViewControllerWithIdentifier("YourViewControllerID") self.showDetailViewController(vc as! YourViewControllerClassName, sender: self) </code></pre>