Passing lists from one function to another in Swift
<p>I can't quite understand why I can't past an Int[] from one function to another:</p> <pre><code>func sumOf(numbers: Int...) -&gt; Int { var sum = 0 for number in numbers { sum += number } return sum } func average(numbers:Int...) -&gt; Double { var sum = sumOf(numbers) return Double(sum) / Double(numbers.count) } </code></pre> <p>This gives me the following error:</p> <p><code>Playground execution failed: error: &lt;REPL&gt;:138:19: error: could not find an overload for '__conversion' that accepts the supplied arguments</code></p> <pre><code>var sum = sumOf(numbers) ^~~~~~~~~~~~~~ </code></pre> <p>Thanks for your help!</p>
<p>I was able to get it to work by replacing <code>Int...</code> with <code>Int[]</code> in <code>sumOf()</code>. </p> <pre><code>func sumOf(numbers: Int[]) -&gt; Int { var sum = 0 for number in numbers { sum += number } return sum } func average(numbers: Int...) -&gt; Double { var sum = sumOf(numbers) return Double(sum) / Double(numbers.count) } average(3,4,5) </code></pre> <p>Your problem is <code>Int...</code> is a variable amount of Ints while <code>Int[]</code> is an array of <code>Int</code>. When sumOf is called it turns the parameters into an Array called numbers. You then try to pass that Array to sumOf, but you had written it to take a variable number of Ints instead of an Array of Ints.</p>
<p>The <code>numbers: Int...</code> parameter in <code>sumOf</code> is called a <em>variadic parameter</em>. That means you can pass in a variable number of that type of parameter, and everything you pass in is converted to an array of that type for you to use within the function.</p> <p>Because of that, the <code>numbers</code> parameter inside <code>average</code> is an array, not a group of parameters like <code>sumOf</code> is expecting.</p> <p>You might want to overload <code>sumOf</code> to accept either one, like this, so your averaging function can call the appropriate version:</p> <pre><code>func sumOf(numbers: [Int]) -&gt; Int { var sum = 0 for number in numbers { sum += number } return sum } func sumOf(numbers: Int...) -&gt; Int { return sumOf(numbers) } </code></pre>