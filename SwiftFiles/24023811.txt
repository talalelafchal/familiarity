SpriteKit and UISwipeGestureRecognizer
<p>In my <code>viewDidLoad</code> function, I setup a swipe gesture recognizer:</p> <pre><code>var swipeRecognizer:UISwipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action: Selector("move")) swipeRecognizer.direction = .Right view.addGestureRecognizer(swipeRecognizer) </code></pre> <p>And then I set up the move function:</p> <pre><code>func move(swipe:UISwipeGestureRecognizer) { NSLog("swiped") } </code></pre> <p>However, I keep getting the following error when I swipe right:</p> <pre><code>[_TtC8swiftris9GameScene move]: unrecognized selector sent to instance 0xc81c200 2014-06-03 14:52:57.560 swiftris[45440:6777826] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[_TtC8swiftris9GameScene move]: unrecognized selector sent to instance 0xc81c200' </code></pre> <p>What could be the problem?</p>
<p>You defined your function as <code>move(swipe:UISwipeGestureRecognizer)</code>, which maps to the obj-c method name <code>move:</code>, but your selector is just <code>"move"</code>. You need to use <code>"move:"</code> instead.</p>
<p>As @Kevin Ballard correctly points out, your selector doesn't match your method, which explains the "unrecognized selector" exception. However, I think it's worth noting that you can ditch the cast to Selector altogether, and use a string literal in its stead.</p> <p><a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/BuildingCocoaApps/BuildingCocoaApps.pdf" rel="nofollow">Quote from</a></p> <blockquote> <p>You can construct a selector with a string literal, such as let mySelector: Selector = "tappedButton:". Because string literals can be automatically converted to selectors, you can pass a string literal to any method that accepts a selector.</p> </blockquote> <p>Example:</p> <pre><code>let gesture: UISwipeGestureRecognizer = UISwipeGestureRecognizer(target: self, action:"move:") </code></pre>