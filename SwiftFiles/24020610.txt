How to access both Objective-C and Swift classes from same storyboard?
<p>I have implemented one UIButton-derived class (RoundButton) in Swift and the rest is still in Objective-C. How do I access both Objective-C-based classes and Swift-based classes in the same storyboard?</p> <p>You can type <code>RoundButton</code> in a UIButton <code>Custom Class - Class</code> field in a Storyboard, but iOS gives the following warning runtime:</p> <pre><code>Unknown class RoundButton in Interface Builder file. </code></pre>
<p>You should make sure that you have added Objective C bridging header. It is not a problem to use both Objective C and Swift in the same storyboard.</p> <p><a href="http://i58.tinypic.com/33aqbyu.png" rel="nofollow">http://i58.tinypic.com/33aqbyu.png</a></p>
<p>It seems that Xcode 6.0 (6A215l) needs to upgrade the Storyboard file to a newer version before it can access Swift classes.</p> <p>If you replaced an Objective-C class with a Swift class with the same name, you need to open the Storyboard, edit the name of the custom class (like remove the last letter), save the Storyboard and then rename the class back. This will force the Storyboard file to be upgraded to a newer version, and the new Xcode to correctly write the custom class key like this:</p> <p>Version information diff: <img src="https://i.stack.imgur.com/GhDrT.png" alt="enter image description here"></p> <p>UIButton custom class definition diff: <img src="https://i.stack.imgur.com/tAHTM.png" alt="enter image description here"></p> <p>After these changes in the Storyboard file the warning seems to disappear and the correct custom class is used.</p>
<p>It indeed seems like an issue with the Storyboard file itself in Xcode 6.0 (6A254o) / iOS 8 Beta 3.</p> <p>If you're using pre-Xcode 6 Storyboard version it might help to manually update the subclass that Interface Builder is complaining about simply by forcing update of the 'Custom Class' field in the 'Identity Inspector'.</p>
<p>I wanted to add two other solutions that worked for me, in two separate cases were I got the same message (<code>Unknown class MySwiftClass in Interface Builder file.</code>)</p> <p>In the first case, I had a Swift subclass of a UIViewController. Well I had thought I wanted to set something in init so I had implemented:</p> <pre><code>override func initWithNibName:bundle: </code></pre> <p>As that's the designated initializer... I was every doing anything in the method yet, it was just in place. And yet at runtime my class was not seen until I removed that method.</p> <p>The other case I had a different Swift <code>UIViewController</code> subclass that also was not being found at runtime. The end fix for that was to re-name the Swift class (I added a "2" into the name). I changed the class also in the storyboard, and suddenly it worked... this was after trying to remove the name from the storyboard and re-adding, which did not work.</p> <p>Both of these cases may really be other examples of the accepted answer - but in my case just changing the name in the storyboard was not enough, I had to change the swift class itself in some way.</p>