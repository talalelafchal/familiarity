How to catch all iOS Push Notifications with different user actions including tap on app icon
<p>As per the Apple guide:</p> <p>"As a result of the presented notification, the user taps the action button of the alert or taps (or clicks) the application icon. If the action button is tapped (on a device running iOS), the system launches the application and the application calls its delegate’s application:didFinishLaunchingWithOptions: method (if implemented); it passes in the notification payload (for remote notifications) or the local-notification object (for local notifications).</p> <p>If the application icon is tapped on a device running iOS, the application calls the same method, but furnishes no information about the notification . If the application icon is clicked on a computer running Mac OS X, the application calls the delegate’s applicationDidFinishLaunching: method in which the delegate can obtain the remote-notification payload."</p> <p>My question is Suppose user got 3-4 Push notifications from provider and all are stored in apple's notification center. If user tapped on notification alert, he/she can easily get the notification data in the app. But if user tapped app icon on iPhone, how to get all the data related of all previous notifications.</p> <p>Thanks in advance!</p>
<p>You can't, you will only receive information about the notification that was used to open your app.</p> <p>So if a user opens your app, and your app has notifications, you will not be able to retrieve them from with in your app.</p> <p>A work around could be to also keep track of notification on a server and handle this with in the app. Thus the server keeps track on which notification has been read. This is how Facebook does it.</p>
<p>Conceptually when application is loaded with clicking alert view presented for Push notification, than application is launched with <code>didReceiveLocalNotification</code> delegate method if your application is in background. At this point <code>applicationDidFinishLaunching</code> delegate method is not called. </p> <p>When your application is not in background, clicking alert view presented for Push notification will call <code>applicationDidFinishLaunching</code> method.</p> <p>Hope this clears your understanding between these 2 delegate methods.</p>
<p>You can use this code:</p> <pre><code> NSArray *pendingNotifications = [[[UIApplication sharedApplication] scheduledLocalNotifications] sortedArrayUsingComparator:^(id obj1, id obj2) { if ([obj1 isKindOfClass:[UILocalNotification class]] &amp;&amp; [obj2 isKindOfClass:[UILocalNotification class]]) { UILocalNotification *notif1 = (UILocalNotification *)obj1; UILocalNotification *notif2 = (UILocalNotification *)obj2; return [notif1.fireDate compare:notif2.fireDate]; } return NSOrderedSame; }]; // if there are any pending notifications -&gt; adjust their badge number if (pendingNotifications.count != 0) { //do something } </code></pre>
<p>I had the same problem: if user clicks on push banner he gets info of push in app, if he clicks on app icon he doesn't get it. You can handle derivative one from it, but with some limits only. Example, if you want to have a badge number from push, you can do it: (Push -> App icon -> App icon badge -> your var)</p> <p>in AppDelegate</p> <pre><code>- (void)applicationWillEnterForeground:(UIApplication *)application { newMessages = application.applicationIconBadgeNumber; } </code></pre>
<p>To do it in a right way, some conditions must be met:</p> <blockquote> <p>Your server knows about what your app currently have seen and what notifications it could send once again.</p> </blockquote> <p>Let's consider only remote notifications. There are three states of app:</p> <ul> <li><p><strong>FOREGROUND</strong>: </p> <ul> <li><p>notification appears without user's action:</p> <pre><code>func application(application: UIApplication, didReceiveRemoteNotification userInfo: [NSObject : AnyObject]) { //handle your notification } </code></pre></li> </ul> <p>You can display banner using third party library: <a href="https://github.com/kunass2/BSForegroundNotification" rel="nofollow">BSForegroundNotification</a></p></li> <li><p><strong>BACKGROUND</strong> </p> <ul> <li><p>notification appears on the screen. <em>(Note that setting content-available=1 in a push notification can lead to the latest push message being visible once the app icon is pressed, as didReceive... <strong>is</strong> called).</em></p> <pre><code>//nothing is called in the app, but app icon badge changes // OR - if the notification contains the field content-available set to 1 - func application(application: UIApplication, didReceiveRemoteNotification userInfo: [NSObject : AnyObject]) { //handle your notification } </code></pre></li> <li><p>user tap on notification </p> <pre><code>func application(application: UIApplication, didReceiveRemoteNotification userInfo: [NSObject : AnyObject]) { //handle your notification } </code></pre></li> <li><p>user take notification action</p> <pre><code>func application(application: UIApplication, handleActionWithIdentifier identifier: String?, forRemoteNotification userInfo: [NSObject : AnyObject], completionHandler: () -&gt; Void) { //handle your notification's action } </code></pre> <p>or</p> <pre><code>func application(application: UIApplication, handleActionWithIdentifier identifier: String?, forRemoteNotification userInfo: [NSObject : AnyObject], withResponseInfo responseInfo: [NSObject : AnyObject], completionHandler: () -&gt; Void) { //handle your notification's action response info } </code></pre></li> <li><p>user tap app icon</p> <pre><code>func applicationDidBecomeActive(application: UIApplication) { //fetch pending notifications from server } </code></pre></li> </ul></li> <li><p><strong>NOT RUNNING AT ALL</strong></p> <ul> <li><p>notification appears on the screen. </p> <pre><code>//nothing is called in the app, but app icon badge changes </code></pre></li> <li><p>user tap on notification </p> <pre><code>func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -&gt; Bool { if let userInfo = launchOptions?[UIApplicationLaunchOptionsRemoteNotificationKey] as? [NSObject: AnyObject] { //handle your notification } } </code></pre></li> <li><p>user take notification action</p> <pre><code>func application(application: UIApplication, handleActionWithIdentifier identifier: String?, forRemoteNotification userInfo: [NSObject : AnyObject], completionHandler: () -&gt; Void) { //handle your notification's action } </code></pre> <p>or</p> <pre><code>func application(application: UIApplication, handleActionWithIdentifier identifier: String?, forRemoteNotification userInfo: [NSObject : AnyObject], withResponseInfo responseInfo: [NSObject : AnyObject], completionHandler: () -&gt; Void) { //handle your notification's action response info } </code></pre></li> <li><p>user tap app icon</p> <pre><code>func applicationDidBecomeActive(application: UIApplication) { //fetch pending notifications from server } </code></pre></li> </ul></li> </ul> <p><strong>How to handle notification?</strong></p> <ol> <li><p><code>let notification = WLNotification(userInfo: userInfo)</code></p> <blockquote> <p>Within <code>WLNotification</code> remember to keep current application state when you receive notification. In future you may need it to know where that notification come from.</p> </blockquote></li> <li><p><code>WLNetworkClient.sharedClient().notificationForIdentifier(notification.identifier)</code></p> <blockquote> <p>Fetch from server details about that notification, and in the same time let it know that you REALLY get that notification, and effected on user's data.</p> </blockquote></li> </ol> <p><strong>How to fetch all pending notifications?</strong></p> <pre><code>WLNetworkClient.sharedClient().pendingNotificationsWithCompletionBlock(nil) </code></pre> <blockquote> <p>Fetch all notifications you missed. in other words, fetch those ones, which were not marked in server as received by you.</p> </blockquote> <p>Read <a href="http://bluetubeinc.com/blog/2013/6/limitations-of-apple-push-notifications" rel="nofollow">Limitations of Apple Push Notifications</a>.</p> <p><strong>See the related questions:</strong> </p> <ul> <li><a href="http://stackoverflow.com/q/32932920/2725435">How to ensure that iOS app received EVERY push notification send by server?</a></li> </ul>