Swift.String to CMutablePointer&lt;CChar&gt;
<p>I've imported and created a bridging header for some old C source code to Swift. The function signature looks like so:</p> <pre><code>struct Message prattle_parse_message(char *line); </code></pre> <p>The swift declaration for it is:</p> <pre><code>func prattle_parse_message(line: CMutablePointer&lt;CChar&gt;) -&gt; Message </code></pre> <p>However, I'm not sure how to convert a Swift <code>String</code> (or an <code>NSString</code>) to a <code>CMutablePointer&lt;CChar&gt;</code> to be passed to this function.</p> <p><code>("Test" as NSString).UTF8String</code> returns a <code>CString</code> which won't work.</p> <p>Could someone point me in the right direction with this?</p>
<p>This <em>should</em> be it...</p> <pre><code>var data = inString.dataUsingEncoding(encoding, allowsLossyConversion: allow) var ccharstr = CChar[](count:data.length, repeatedValue:CChar(0)) data.getBytes(&amp;ccharstr length:data.length) ccharstr.append(CChar(0)) var message = prattle_parse_message(&amp;ccharstr) </code></pre> <p>Can't test the last line but I think this should work</p>
<p>This seems to work:</p> <p>prattle_parse_message(str.bridgeToObjectiveC().UTF8String)</p>