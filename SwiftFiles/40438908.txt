How to get rid of artefacts when converting `CVImageBufferRef` to OpenGL ES texture with `glTexImage2D`?
I tried to load texture from CVImageBufferRef: func createTextureFromCVImageBufferRef(buffer: CVImageBufferRef) { let bufferHeight = CVPixelBufferGetHeight(buffer) let bufferWidth = CVPixelBufferGetWidth(buffer) let bytesPerRow = CVPixelBufferGetBytesPerRow(buffer) let w = bytesPerRow / 4 // I option //let w = bufferWidth // II option let h = bufferHeight CVPixelBufferLockBaseAddress(buffer, CVPixelBufferLockFlags(rawValue: CVOptionFlags(0))) glTexParameteri(GLenum(GL_TEXTURE_2D), GLenum(GL_TEXTURE_MIN_FILTER), GL_LINEAR) glTexParameteri(GLenum(GL_TEXTURE_2D), GLenum(GL_TEXTURE_MAG_FILTER), GL_LINEAR) glTexParameteri(GLenum(GL_TEXTURE_2D), GLenum(GL_TEXTURE_WRAP_S), GL_CLAMP_TO_EDGE) glTexParameteri(GLenum(GL_TEXTURE_2D), GLenum(GL_TEXTURE_WRAP_T), GL_CLAMP_TO_EDGE) glTexImage2D(GLenum(GL_TEXTURE_2D), GLint(0), GLint(GL_RGBA), GLsizei(w), GLsizei(h), GLint(0), GLenum(GL_BGRA), GLenum(GL_UNSIGNED_BYTE), CVPixelBufferGetBaseAddress(buffer)) } in 2 different ways: 1) let w = bytesPerRow / 4 2) let w = bufferWidth Both options work perfectly on iPhone 5s, but I have artifacts on iPhone 6 because of CVImageBufferRef data alignment, as I understand. On iPhone 6 bytesPerRow / 4 is equal to 752, but bufferWidth equal to 750. And in both cases I have the following artifacts: In the first case: there is a 2 pixel line in the right side of image. (It is part of the texture, not just black background view) In the second case: some hell is going on with the texture.
As you have found you need to handle the row padding, but handle it in such a way that GL ignores it completely. Both your current approaches treat it like actual texture data, which is why it isn't working. You can use UNPACK_ROW_LENGTH to skip entire pixels, and UNPACK_ALIGNMENT to handle straggling byte padding (set via glPixelStorei before your texture upload). I think in your case you want to set UNPACK_ROW_LENGTH to 752, and your glTexImage2D width parameter to 750.