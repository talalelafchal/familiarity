ViewDidAppear is not called when Opening app from background
<p>I have a View Controller in which my value is 0 (label) and when i open that View Controller from another <code>ViewController</code> i have set <code>viewDidAppear</code> to set value 20 on label . and it works fine but when i close my app and than again i open my app but values doesn't change because <code>viewDidLoad</code>, <code>viewDidAppear</code> and <code>viewWillAppear</code> nothing get called . how can i call when i open my app. do i have to do anything from <code>applicationDidBecomeActive</code>? </p>
<p>Just have your view controller register for the <code>UIApplicationWillEnterForegroundNotification</code> notification and react accordingly.</p>
<p><strong>Using Objective-C</strong></p> <p>You should register a <code>UIApplicationWillEnterForegroundNotification</code> in your <code>ViewController</code>'s <code>viewDidLoad</code> method and whenever app comes back from background you can do whatever you want to do in the method registered for notification. <code>ViewController</code>'s <strong>viewWillAppear</strong> or <strong>viewDidAppear</strong> won't be called when app comes back from background to foreground.</p> <pre><code>-(void)viewDidLoad{ [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(doYourStuff) name:UIApplicationWillEnterForegroundNotification object:nil]; } -(void)doYourStuff{ // do whatever you want to do when app comes back from background. } </code></pre> <p>Don't forget to unregister the notification you are registered for.</p> <pre><code>-(void)dealloc { [[NSNotificationCenter defaultCenter] removeObserver:self]; } </code></pre> <p><strong>Note</strong> if you register your <code>viewController</code> for <code>UIApplicationDidBecomeActiveNotification</code> then your method would be called every time your app becomes active, It is not recommended to register <code>viewController</code> for this notification .</p> <p><strong>Using Swift</strong></p> <p>For adding observer you can use the following code</p> <pre><code> override func viewDidLoad() { super.viewDidLoad() NSNotificationCenter.defaultCenter().addObserver(self, selector:"doYourStuff", name: UIApplicationWillEnterForegroundNotification, object: nil) } func doYourStuff(){ // your code } </code></pre> <p>To remove observer you can use deinit function of swift.</p> <pre><code>deinit { NSNotificationCenter.defaultCenter().removeObserver(self) } </code></pre>
<p>Curious about the exact sequence of events, I instrumented an app as follows: (@Zohaib, you can use the NSNotificationCenter code below to answer your question).</p> <pre><code>// AppDelegate.m - (void)applicationWillEnterForeground:(UIApplication *)application { NSLog(@"app will enter foreground"); } - (void)applicationDidBecomeActive:(UIApplication *)application { NSLog(@"app did become active"); } // ViewController.m - (void)viewDidLoad { [super viewDidLoad]; NSLog(@"view did load"); [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(appDidBecomeActive:) name:UIApplicationDidBecomeActiveNotification object:nil]; [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(appWillEnterForeground:) name:UIApplicationWillEnterForegroundNotification object:nil]; } - (void)appDidBecomeActive:(NSNotification *)notification { NSLog(@"did become active notification"); } - (void)appWillEnterForeground:(NSNotification *)notification { NSLog(@"will enter foreground notification"); } - (void)viewWillAppear:(BOOL)animated { [super viewWillAppear:animated]; NSLog(@"view will appear"); } - (void)viewDidAppear:(BOOL)animated { [super viewDidAppear:animated]; NSLog(@"view did appear"); } </code></pre> <p>At launch, the output looks like this:</p> <pre><code>2013-04-07 09:31:06.505 myapp[15459:11303] view did load 2013-04-07 09:31:06.507 myapp[15459:11303] view will appear 2013-04-07 09:31:06.511 myapp[15459:11303] app did become active 2013-04-07 09:31:06.512 myapp[15459:11303] did become active notification 2013-04-07 09:31:06.517 myapp[15459:11303] view did appear </code></pre> <p>Enter the background then reenter the foreground:</p> <pre><code>2013-04-07 09:32:05.923 myapp[15459:11303] app will enter foreground 2013-04-07 09:32:05.924 myapp[15459:11303] will enter foreground notification 2013-04-07 09:32:05.925 myapp[15459:11303] app did become active 2013-04-07 09:32:05.926 myapp[15459:11303] did become active notification </code></pre>
<p>I think registering for the UIApplicationWillEnterForegroundNotification is risky as you may end up with more than one controller reacting to that notification. Nothing garanties that these controllers are still visible when the notification is received.</p> <p>Here is what I do: I force call viewDidAppear on the active controller directly from the App's delegate didBecomeActive method:</p> <p>Add the code below to <code>- (void)applicationDidBecomeActive:(UIApplication *)application</code></p> <pre><code>UIViewController *activeController = window.rootViewController; if ([activeController isKindOfClass:[UINavigationController class]]) { activeController = [(UINavigationController*)window.rootViewController topViewController]; } [activeController viewDidAppear:NO]; </code></pre>