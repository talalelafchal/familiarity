Programatically Add Image to TableView Cell
<p>I have a <code>UITableView</code> that gets information from a server and publishes the data into a table view. Inside of each cell is the information from the server. </p> <p>For the purpose of this example, let's say the information we get from the server are numbers: 1, 2, 3, 4.</p> <p>What I want to do is add an image (programatically because there are if statements involved, etc) to the left side of the cell, and the text (1, 2, etc) right next to it. </p> <p>Basically, I want each cell to look like this:</p> <pre><code> _____________________________________ | (IMAGE) (TEXT) | --CELL 0 -------------------------------------- _____________________________________ | (IMAGE) 2 | --CELL 1 -------------------------------------- </code></pre> <p>Please excuse my crude illustration. :)</p>
<p>Try this: <a href="http://jainmarket.blogspot.com/2009/05/creating-custom-table-view-cell.html" rel="nofollow">http://jainmarket.blogspot.com/2009/05/creating-custom-table-view-cell.html</a></p>
<p>UITableViewCell objects have an <a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableViewCell_Class/Reference/Reference.html#//apple_ref/occ/instp/UITableViewCell/imageView" rel="nofollow"><code>imageView</code></a> property; you can just set this image view's image and it will automatically display the image in the right place with the title next to it.</p>
<p>You can add both the image and the text to the UITableViewCell in your UITableViewController subclass like so:</p> <pre><code>- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath { static NSString *CellIdentifier = @"Cell"; UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier]; if (cell == nil) { cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease]; } [[cell imageView] setImage:anImage]; [[cell textLabel] setText:[NSString stringWithFormat:@"%d",[indexPath row]]; return cell; } </code></pre> <p>There are a few "built-in" properties to UITableViewCell that you can take advantage of, such as the imageView, textLabel, and detailTextLabel. For more information, check out the <a href="http://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html" rel="nofollow">Table View Programming Guide</a>.</p>
<p>here you go:</p> <pre><code>cell.imageView.image = [UIImage imageNamed:@"image.png"]; </code></pre>
<pre><code>// create a rectangle box for image view UIImageView *iconImage = [[UIImageView alloc] init]; iconImage.frame = CGRectMake(12,4,53.5,53.5); // Create a label for cells UILabel *cellName = [[UILabel alloc] initWithFrame:CGRectMake(75,18,200,20)]; cellName.font = [self fontForBodyTextStyle]; NSString *cellNameStr = [NSString stringWithFormat:@"%@",self.tableCellNames[indexPath.row]]; // Select path row tab actions switch (indexPath.row) { case 0: cellName.text = cellNameStr; iconImage.image = [UIImage imageNamed:@"condition.png"]; [cell.contentView addSubview:iconImage]; [cell.contentView addSubview:cellName]; break; case 1: cellName.text = cellNameStr; iconImage.image = [UIImage imageNamed:@"videos.png"]; [cell.contentView addSubview:iconImage]; [cell.contentView addSubview:cellName]; break; case 2: cellName.text = cellNameStr; iconImage.image = [UIImage imageNamed:@"provider.png"]; [cell.contentView addSubview:iconImage]; [cell.contentView addSubview:cellName]; break; case 3: cellName.text = cellNameStr; iconImage.image = [UIImage imageNamed:@"info.png"]; [cell.contentView addSubview:iconImage]; [cell.contentView addSubview:cellName]; break; default: NSAssert(NO, @"Unhandled value in cellForRowAtIndexPath"); break; } </code></pre>
<p>The Swift 2.0 version of the first answer is:</p> <pre><code>cell.imageView?.image = UIImage(named: "image.png") </code></pre>