How to Properly Space SKSpriteNodes?
I'm working on a game where nodes are continuously scrolling down the screen. I have them set up to spawn at a certain position and everything looks even: The issue occurs when the user pauses the game repeatedly, the nodes get misaligned like so: I believe that when I pause the game my timing is thrown off. Here are my updateCurrentTime() functions. I have it set so it adds a new random row every 0.6 seconds.  func updateWithTimeSinceLastUpdate (_ timeSinceLastUpdate:CFTimeInterval) { lastYieldTimeInterval += timeSinceLastUpdate if lastYieldTimeInterval > 0.6 { lastYieldTimeInterval = 0 addRandomRow() } } override func update(_ currentTime: TimeInterval) { if screenIsPaused == 1{ pauseScreen() }else if screenIsPaused == 0{ unPauseScreen() screenIsPaused = 2 } else if screenIsPaused == 3{ gameLayer.isPaused = true } var timeSinceLastUpdate = currentTime - lastUpdateTimeInterval lastUpdateTimeInterval = currentTime if timeSinceLastUpdate > 1 { timeSinceLastUpdate = 1/60 lastUpdateTimeInterval = currentTime } updateWithTimeSinceLastUpdate(timeSinceLastUpdate) } Here is the code that I use to pause my game:  func pauseScreen(){ overlay.color = UIColor.black overlay.alpha = 0.6 overlay.size.height = self.size.height overlay.size.width = self.size.width overlay.position = CGPoint(x: self.frame.width / 2, y: self.frame.height / 2) overlay.zPosition = 100 addChild(overlay) gameLayer.isPaused = true screenIsPaused = 3 label.text = "Press screen to play!" label.fontColor = SKColor.white label.fontSize = 50 label.position = CGPoint(x: self.size.width / 2, y: self.size.height / 2) addChild(label) let Fade = SKAction.sequence([SKAction.fadeIn(withDuration: 1), SKAction.fadeOut(withDuration: 1)]) label.run(SKAction.repeatForever(Fade)) } func unPauseScreen(){ label.removeFromParent() overlay.removeFromParent() screenIsPaused = 2 gameLayer.isPaused = false } The pause function is called in touchesEnded() and the un-pause function is called in touchesBegan. Please let me know if there is anything I can try or if you require more information. Thanks!
I finally found a solution. I'm not sure if it is the best answer; however, it works. I modified my function updateWithTimeSinceLastUpdate here it is now: func updateWithTimeSinceLastUpdate (_ timeSinceLastUpdate:CFTimeInterval) { if lastYieldTimeInterval > 0.6 { lastYieldTimeInterval = 0 addRandomRow() } if screenIsPaused == 1{ pauseScreen() lastYieldTimeInterval += timeSinceLastUpdate }else if screenIsPaused == 0{ unPauseScreen() lastYieldTimeInterval += timeSinceLastUpdate screenIsPaused = 2 } else if screenIsPaused == 3{ gameLayer.isPaused = true }else if screenIsPaused == 2{ lastYieldTimeInterval += timeSinceLastUpdate } } I moved that screenIsPaused if statements here instead of my update(_ currentTime: TimeInterval). In addition, I added lastYieldTimeInterval += timeSinceLastUpdate into each of the if statements. Now every time the game pauses or un-pauses the time is updated.