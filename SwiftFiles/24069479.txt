Swift playgrounds with UIImage
<p>I am working with Xcode 6, and I'm trying to recreate the code demoed during session 401 "What's new in Xcode 6". I've added an image to Images.xcassets (called Sample) and within the playground file I'm trying to access this image, as demoed.</p> <p>My code is as follows (like the demo):</p> <pre><code>var sample = UIImage(named: "Sample") </code></pre> <p>However, I can't get it to work like the demo. Am I missing something?</p>
<blockquote> <p>However, I can't get it to work like the demo. Am I missing something?</p> </blockquote> <p>I'm not sure where you need to put the image to refer to it using only the name, but I got the same code to work by specifying the full path to the image, like:</p> <pre><code>var sample = UIImage(named: "/Users/my_user_name/Desktop/Image1234.jpg") </code></pre> <p>Having to use the full path seems more complicated than it should be, but it works and it let me move on to more interesting problems.</p>
<ol> <li>Open the .playground file in Finder.</li> <li>Create a folder called Resources next to it.</li> <li>Add any images you want to this folder.</li> <li>In the playground press opt-cmd-1 to open the File Inspector. You should see the playground on the right. If you don't have it selected, press cmd-1 to open the Project Navigator and click on the playground file.</li> </ol> <p><img src="https://i.stack.imgur.com/huFFk.png" alt="File Inspector"></p> <ol start="5"> <li>Under 'Resource Path' choose 'Relative To Playground'</li> <li>Click the folder icon underneath and choose the Resources folder created earlier.</li> </ol> <p>You should now have a bundle that you can use with the standard NSImage(named:"filename_without_extension"):</p> <p><img src="https://i.stack.imgur.com/KCCzL.png" alt="Working nsbundle image"></p> <p>Note: Because Xcode will frequently overwrite the .playground folder, I recommend using this method so the resources folder isn't getting constantly deleted and re-created.</p>
<p>You can find out the path of resourcePath using these commands in playground:</p> <pre><code>var bundle = NSBundle.mainBundle() var path = bundle.resourcePath </code></pre> <p>Default for me was:</p> <pre><code>/Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Xcode/Agents </code></pre>
<p>I had difficulty getting this setup for an iOS playground, as opposed to an OS X playground. Trying to do it using bundles and relative paths makes it more complicated.</p> <p>If you just want to get your hands on an image quickly, you can also just use absolute file path:</p> <p>On iOS:</p> <pre><code># iOS let absoluteImagePath = "/absolute/path/to/image.png" let image = UIImage(contentsOfFile: absoluteImagePath) </code></pre> <p>And on OS X</p> <pre><code># OS X let absoluteImagePath = "/absolute/path/to/image.png" let image = NSImage(contentsOfFile: absoluteImagePath) </code></pre>
<p>I had some trouble with this also.</p> <p>Unfortunately, Chris' answer didn't work for me. I suspect perhaps a later beta release of Xcode 6 may have removed this setting.</p> <p>Here's a solution as of Xcode 6.0 beta 4 (6A267N) available 21st July 2014. I would guess that this corresponds to the "Inside playground" option previously. That is where the Resources folder is within the playground package itself. </p> <p>Here's how to set this up.</p> <p>Using Finder - or if you're like me and use the awesome <a href="http://cocoatech.com/pathfinder/" rel="nofollow noreferrer">Path Finder</a> - right select and choose <strong>Show Package Contents</strong> as follows:</p> <p><img src="https://i.stack.imgur.com/VYdz0.png" alt="enter image description here"></p> <p>That reveals the packages <strong>Resources</strong> folder: </p> <p><img src="https://i.stack.imgur.com/cQ1UE.png" alt="enter image description here"></p> <p>Copying the image files into that folder will do the business:</p> <pre><code>let imageNames = ["back-button", "background", "bg_top"] let images = imageNames.map { UIImage(named: $0) } </code></pre> <p><img src="https://i.stack.imgur.com/SNAFC.png" alt="enter image description here"></p>
<p>On the iOS playground with XCode 6 beta 5 (and probably later) you can see the image inside the bundle:</p> <ol> <li>In the playground press Cmd+Opt+1 and click the arrow under the Resource Path (this will open Finder)</li> <li>Put your picture to this folder</li> <li><p>Access it with either </p> <pre><code>let img = UIImage(named: "logo.png", inBundle: NSBundle.mainBundle(), compatibleWithTraitCollection: nil) </code></pre> <p>or</p> <pre><code>let path = NSBundle.mainBundle().pathForResource("logo", ofType: "png") let img = UIImage(contentsOfFile:path) </code></pre></li> </ol>
<p>This is what worked for me on Xcode Version 6.1.1. </p> <ol> <li><p>Create Playground file under same directory as main storyboard.</p> <p><img src="https://i.stack.imgur.com/mRi3K.png" alt="Folder Structure"></p></li> <li><p>Open Utilities pane for Playground file, and click the right arrow in <code>Resource Path</code> section to add your images in that directory.</p> <p><img src="https://i.stack.imgur.com/AIZt7.png" alt="Resource Path for Playground"></p></li> <li><p>Test image within Playground file. </p> <p><img src="https://i.stack.imgur.com/uNBTd.png" alt="Result"></p></li> </ol>
<p>Using XCode 6.3.1 and running playground in full simulator (iOS) I had to do the following:</p> <ol> <li>Find your .playground file in finder</li> <li>Right click it -> show package contents</li> <li>If it doesn't already exist, create a folder named Resources inside the package</li> <li>Add your image there</li> </ol> <p>Then just instantiate with <code>let i = UIImage(named: "filename.png")</code></p>
<p>Look at the iOS Developer Library-><a href="https://developer.apple.com/library/ios/recipes/Playground_Help/Chapters/AboutPlaygrounds.html#//apple_ref/doc/uid/TP40015166-CH28-SW1" rel="nofollow noreferrer">Playground Help</a> and search"Resource Files" and you will find the answer</p> <p>1、Open the .playground</p> <p>2、Show the Project navigator by selecting View > Navigators > Show Project Navigator. </p> <p>3、Drag the images to the Resources </p> <p>Like follow:</p> <p><img src="https://i.stack.imgur.com/uDrEA.png" alt="enter image description here"></p>
<p>As of Xcode 8 Beta 1, you can use Image Literals to import an image into an Xcode playground:</p> <p>Start typing <code>image</code> to add an image literal:</p> <p><a href="https://i.stack.imgur.com/tCyOYm.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/tCyOYm.png" alt="Swift Image Literal"></a></p> <p>Select (or browse for) your image:</p> <p><a href="https://i.stack.imgur.com/k1vH4m.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/k1vH4m.png" alt="Image"></a></p> <p>See your image inline:</p> <p><a href="https://i.stack.imgur.com/5N0xIm.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/5N0xIm.png" alt="Inline"></a></p>