Difference between println and print in Swift
<p>The use of <code>println</code> and <code>print</code> in Swift both print to the console. But the only difference between them seems to be that <code>println</code> returns to the next line whereas <code>print</code> will not.</p> <p>For example:</p> <pre><code>println("hello world") println("another world") </code></pre> <p>will output the following two lines:</p> <pre><code>hello world another world </code></pre> <p>while:</p> <pre><code>print("hello") print("world") </code></pre> <p>outputs only one line:</p> <pre><code>helloworld </code></pre> <p>The <code>print</code> seems to be more like the traditional <code>printf</code> in C. The Swift documentation states that <code>println</code> is the equivalent to <code>NSLog</code> but what's the purpose of <code>print</code>, is there any reason to use it other than not returning to the next line?</p>
<p>Exactly like you said, to print without adding a new line. There are some cases where you may want this. This is a simple example:</p> <pre><code>var arr = [1,2,3,4,5] print("My array contains: ") for num in arr{ print("\(num) ") } </code></pre>
<p>That's exactly what it is, it's used when you want to print multiple things on the same line.</p>
<p>In the new swift 2, the println has been renamed to print which as an option "terminator" argument. </p> <p>(udpated 2015-09-16 with the new terminator: "")</p> <pre><code>var fruits = ["banana","orange","cherry"] // #1 for f in fruits{ print(f) } // #2 for f in fruits{ print("\(f) ", terminator: "") } </code></pre> <h3>#1 will print</h3> <pre><code>banana orange cherry </code></pre> <h3>#2 will print</h3> <pre><code>banana orange cherry </code></pre>
<p>The deference between print and println is that after print prints the cursor does not skip lines and after println prints the cursor skips a line </p>