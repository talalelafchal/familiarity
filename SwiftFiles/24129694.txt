Struct passing self causes: self subtype of @lvaue error
<p>Best way I can describe the situation is just to show an example:</p> <pre><code>struct One { func setup(inout t:Two) { // inout is important to not copy the struct in } } struct Two { func getOne() -&gt; One { var o = One() o.setup(&amp;self) // Two is not subtype of '@lvalue $T5' return o } } </code></pre> <p>Why is this happening and how can I get past it?</p>
<p>you need to add <code>mutating</code> keyword to the method. otherwise method in struct are default to immutable, which means you cannot modify <code>self</code> in the method. and pass <code>self</code> to another method takes <code>inout</code> keyword implicitly saying you are going to modify it. </p> <pre><code>struct Two { mutating func getOne() -&gt; One { var o = One() o.setup(&amp;self) // Two is not subtype of '@lvalue $T5' return o } } </code></pre>