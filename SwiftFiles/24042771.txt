JSON result (NSArray): valueForKey doesn't work as expected
<p>I have a NSArray as a result of a web service (JSON) request.</p> <p>If I print <code>NSLog("%@", jsonResult)</code> the Array it shows up correctly:</p> <pre><code>( { text = “Some text”; coordinates = “11.333345 - 09.33349”; } { text = “Some text2”; coordinates = “11.333345 - 09.33349”; } { text = “Some text3”; coordinates = “11.333345 - 09.33349”; } … ) </code></pre> <p>But If I try to access the value of the key "text" of each entry within the NSArray with my following function, I always get an output like this:</p> <pre><code>Text )r'ì• (instead of "Some text2, 3 ....") </code></pre> <p>So I think there is a mismatch of types, but I don't know how to figure out where the problem is. In Objective-C it works very well.</p> <pre><code>func getResult(){ self.webService.getResult({ jsonResult in jsonResult!.enumerateObjectsUsingBlock({ object, index, stop in var txt : NSString = object.valueForKey("text") as NSString NSLog("Text %s", txt) }) NSLog("Ready %@", jsonResult!) }); } </code></pre> <p>Any ideas what's going wrong?</p> <p><strong>UPDATE 1</strong></p> <p>I figured out, that if I just use NSObject instead of NSString it displays the text correct</p> <pre><code>var txt : NSObject = object.valueForKey("text") as NSObject NSLog("%@", txt) </code></pre> <p>But anyway, I have to cast that NSObject object to NSString or String, to display...</p> <p>Which encoding is it expecting to display the string...or how to cast this NSObject????</p>
<pre><code>var txt : NSString = object.valueForKey("text") as NSString NSLog("Text %s", txt) </code></pre> <p>The problem is the <code>%s</code> format specifier, which is for C-style strings. You need <code>%@</code>, which is for objects.</p> <p>In Swift, it's recommended to use <code>println()</code>, which does away with format strings altogether:</p> <pre><code>var txt : NSString = object.valueForKey("text") as NSString println("Text \(txt)") </code></pre>