Customize UITableView header section
<p>I want to to customize <code>UITableView</code> header for each section. So far, i've implemented </p> <pre><code>-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section </code></pre> <p>this <code>UITabelViewDelegate</code> method. What i do want to do is get current header for each section and just add <code>UILabel</code> as a subview. </p> <p>So far, i'm not able to accomplish that. Because, i couldn't find anything to get default section header. First question,<strong>is there any way to get default section header</strong> ?</p> <p>If it's not possible, i need to create a container view which is a <code>UIView</code> but,this time i need to set default background color,shadow color etc. Because, if you look carefully into section's header, it's already customized. </p> <p>How can i get these default values for each section header ? </p> <p>Thank you all.</p>
<p>You can try this:</p> <pre><code> -(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section { UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, tableView.frame.size.width, 18)]; /* Create custom view to display section header... */ UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(10, 5, tableView.frame.size.width, 18)]; [label setFont:[UIFont boldSystemFontOfSize:12]]; NSString *string =[list objectAtIndex:section]; /* Section header is in 0th index... */ [label setText:string]; [view addSubview:label]; [view setBackgroundColor:[UIColor colorWithRed:166/255.0 green:177/255.0 blue:186/255.0 alpha:1.0]]; //your background color... return view; } </code></pre>
<p>If I were you, I would make a method which returns an UIView given a NSString to contain. For example</p> <pre><code>+ (UIView *) sectionViewWithTitle:(NSString *)title; </code></pre> <p>In the implementation of this method create a UIView, add a UILabel to it with the properties you want to set, and of course set its title to the given one.</p>
<p>If you use default header view you can only change the text on it with</p> <pre><code>- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section </code></pre> <p>For Swift:</p> <pre><code>override func tableView(tableView: UITableView, titleForHeaderInSection section: Int) -&gt; String? { </code></pre> <p>If you want to customize the view you need to create a new one your self.</p>
<p>why not use <a href="https://developer.apple.com/library/ios/documentation/uikit/reference/UITableViewHeaderFooterView_class/Reference/Reference.html">UITableViewHeaderFooterView</a>?</p>
<p>besides to titleForHeaderInSection, you can simply change view of header, footer. check my comment here: <a href="http://stackoverflow.com/questions/8413436/change-uitable-section-backgroundcolor-without-loosing-section-title/29043165#29043165">Change UITable section backgroundColor without loosing section Title</a></p>
<pre><code>-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section { //put your values, this is part of my code UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, 30.0f)]; [view setBackgroundColor:[UIColor redColor]]; UILabel *lbl = [[UILabel alloc] initWithFrame:CGRectMake(20, 5, 150, 20)]; [lbl setFont:[UIFont systemFontOfSize:18]]; [lbl setTextColor:[UIColor blueColor]]; [view addSubview:lbl]; [lbl setText:[NSString stringWithFormat:@"Section: %ld",(long)section]]; return view; } </code></pre>
<p>The selected answer using <code>tableView :viewForHeaderInSection:</code> is correct.</p> <p>Just to share a tip here. </p> <p>If you are using storyboard/xib, then you could create another prototype cell and use it for your "section cell". The code to configure the header is similar to how you configure for row cells.</p> <pre><code>- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section { static NSString *HeaderCellIdentifier = @"Header"; UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:HeaderCellIdentifier]; if (cell == nil) { cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:HeaderCellIdentifier]; } // Configure the cell title etc [self configureHeaderCell:cell inSection:section]; return cell; } </code></pre>
<p>This is the easiest solution possible. The following code can be used directly for creating a custom section header. </p> <pre><code> -(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section { SectionHeaderTableViewCell *headerView = [tableView dequeueReusableCellWithIdentifier:@"sectionHeader"]; //For creating a drop menu of rows from the section //==THIS IS JUST AN EXAMPLE. YOU CAN REMOVE THIS IF-ELSE.== if (![self.sectionCollapsedArray[section] boolValue]) { headerView.image.image = [UIImage imageNamed:@"up_icon"]; } else { headerView.image.image = [UIImage imageNamed:@"drop_icon"]; } //For button action inside the custom cell headerView.dropButton.tag = section; [headerView.dropButton addTarget:self action:@selector(sectionTapped:) forControlEvents:UIControlEventTouchUpInside]; //For removing long touch gestures. for (UIGestureRecognizer *recognizer in headerView.contentView.gestureRecognizers) { [headerView.contentView removeGestureRecognizer:recognizer]; [headerView removeGestureRecognizer:recognizer]; } return headerView.contentView; } </code></pre>
<p>Try this......</p> <pre><code>override func tableView(tableView: UITableView, willDisplayHeaderView view: UIView, forSection section: Int) { // Background view is at index 0, content view at index 1 if let bgView = view.subviews[0] as? UIView { // do your stuff } view.layer.borderColor = UIColor.magentaColor().CGColor view.layer.borderWidth = 1 } </code></pre>
<p><strong>Magically add Table View Header in swift</strong></p> <p>Recently I tried this.</p> <p>I needed one and only one header in the whole UITableView. </p> <p>Like I wanted a UIImageView on the top of the TableView. So I added a UIImageView on top of the UITableViewCell and automatically it was added as a tableViewHeader. Now I connect the ImageView to the ViewController and added the Image.</p> <p>I was confused because I did something like this for the first time. So to clear my confusion open the xml format of the MainStoryBoard and found the Image View was added as a header.</p> <p>It worked for me. Thanks xCode and swift.</p>
<p>If headerInSection isn't show, can try this.</p> <pre><code>- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section { return 45; } </code></pre> <p>This returns a height for the header of a given section.</p>
<p>Swift version of <a href="http://stackoverflow.com/a/15611529/1136433">Lochana Tejas</a> answer:</p> <pre><code>override func tableView(tableView: UITableView, viewForHeaderInSection section: Int) -&gt; UIView? { let view = UIView(frame: CGRectMake(0, 0, tableView.frame.size.width, 18)) let label = UILabel(frame: CGRectMake(10, 5, tableView.frame.size.width, 18)) label.font = UIFont.systemFontOfSize(14) label.text = list.objectAtIndex(indexPath.row) as! String view.addSubview(label) view.backgroundColor = UIColor.grayColor() // Set your background color return view } </code></pre>