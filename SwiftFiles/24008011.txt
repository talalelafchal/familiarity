How do I declare a class level function in Swift?
<p>I can't seem to find it in the docs, and I'm wondering if it exists in native Swift. For example, I can call a class level function on an <code>NSTimer</code> like so:</p> <pre><code>NSTimer.scheduledTimerWithTimeInterval(0.2, target: self, selector: "someSelector:", userInfo: "someData", repeats: true) </code></pre> <p>But I can't seem to find a way to do it with my custom objects so that I could call it like:</p> <pre><code>MyCustomObject.someClassLevelFunction("someArg") </code></pre> <p>Now, I know we can mix Objective-C w/ Swift and it's possible that the <code>NSTimer</code> class method is a remnant from that interoperability.</p> <h3> Question </h3> <ol> <li><p>Do class level functions exist in Swift?</p></li> <li><p>If yes, how do I define a class level function in Swift?</p></li> </ol>
<p>Yes, you can create class functions like this:</p> <pre><code>class func someTypeMethod() { //body } </code></pre> <p>Although in Swift, they are called Type methods.</p>
<p>You can define Type methods inside your class with:</p> <pre><code>class Foo { class func Bar() -&gt; String { return "Bar" } } </code></pre> <p>Then access them from the class Name, i.e:</p> <pre><code>Foo.Bar() </code></pre> <p>In Swift 2.0 you can use the <code>static</code> keyword which will prevent subclasses from overriding the method. <code>class</code> will allow subclasses to override.</p>
<p>UPDATED: Thanks to <a href="http://stackoverflow.com/users/2611971/logan">@Logan</a></p> <p>With Xcode 6 beta 5 you should use <code>static</code> keyword for structs and <code>class</code> keyword for classes:</p> <pre><code>class Foo { class func Bar() -&gt; String { return "Bar" } } struct Foo2 { static func Bar2() -&gt; String { return "Bar2" } } </code></pre>
<p>you need to define the method in your class</p> <pre><code> class MyClass { class func MyString() -&gt; String { return "Welcome" } } </code></pre> <p>Now you can access it by using Class Name eg:</p> <pre><code> MyClass.MyString() </code></pre> <p>this will result as "Welcome".</p>
<p>From the <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html#//apple_ref/doc/uid/TP40014097-CH15-ID241" rel="nofollow">official Swift 2.1 Doc</a>:</p> <blockquote> <p>You indicate type methods by writing the static keyword before the method’s func keyword. Classes may also use the class keyword to allow subclasses to override the superclass’s implementation of that method.</p> </blockquote> <p>In a struct, you must use <code>static</code> to define a Type method. For classes, you can use either <code>static</code> or <code>class</code> keyword, depending on if you want to allow your method to be overridden by a subclass or not.</p>