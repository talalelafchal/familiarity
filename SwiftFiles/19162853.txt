Horizontally mirror a SKSpriteNode texture
<p>I'm developing an iOS7 game with the new API called Sprite Kit. I'd like to horizontally rotated a SKSpriteNode image/texture. I've tried it by first mirroring the image, then creating a SKTexture and finally applying it to the SKSpriteNode but it doesn't work. Is there some way to do this? Or I should have to different images?</p>
<p>If you're just trying to flip the sprite along an axis, you can do something like this:</p> <pre><code>sprite.xScale = -1.0; </code></pre>
<p>You can use this code to flip among x-axis:</p> <pre><code>spriteNode.xScale = spriteNode.xScale * -1; </code></pre> <p>but be careful you can lose some of physicsbody's property, I highly suggest u to use xScale in this way:</p> <pre><code>spriteNodeBody = [SKNode node]; spriteNodeBody.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:spriteNode.size]; spriteNodeBody.physicsBody.categoryBitMask = CNPhysicsCategoryPlayer; spriteNodeBody.physicsBody.collisionBitMask = CNPhysicsCategoryBall; [spriteNodeBody addChild:spriteNode]; [self addChild:spriteNodeBody]; </code></pre> <p>And now you can safely use:</p> <pre><code> spriteNode.xScale = spriteNode.xScale * -1; </code></pre>
<p>I use this for my rightHanded or leftHanded sprites:</p> <p>with some help from here <a href="http://stackoverflow.com/questions/4778119/horizontal-flip-of-a-frame-in-objective-c">Horizontal Flip of a frame in Objective-C</a></p> <pre><code>BOOL leftHanded = YES; SKSpriteNode *sprite; if (leftHanded) { //my textures point east, so I flip vertically SKTexture *texture = [SKTexture textureWithImageNamed:@"figure-step0"]; CIFilter *filter = [CIFilter filterWithName:@"CIAffineTransform"]; [filter setValue:[CIImage imageWithCGImage:[texture CGImage]] forKey:kCIInputImageKey]; #ifdef IOS_BLOCK //set these up with defines CGAffineTransform flipTransform = CGAffineTransformMakeScale(1.0f, -1.0f); // vert [filter setValue:[NSValue valueWithBytes:&amp;flipTransform objCType:@encode(CGAffineTransform)] forKey:@"inputTransform"]; #else //OSX_BLOCK NSAffineTransform* flipTransform = [NSAffineTransform transform]; [flipTransform scaleXBy:1.0f yBy: -1.0f]; // vert [filter setValue:flipTransform forKey:@"inputTransform"]; #endif sprite = [SKSpriteNode spriteNodeWithTexture: [texture textureByApplyingCIFilter:filter]]; } else { sprite = [SKSpriteNode spriteNodeWithImageNamed:@"figure-step0"]; } </code></pre> <p>You can do the same for animation frames likewise. Works for iOS or OS X.</p>
<p>This is my solution written in <strong>Swift 2.x</strong>, usually I prefeer to use <code>landscape</code> mode for my games, so I write this extension:</p> <pre><code>extension SKTexture { class func flipImage(name:String,flipHoriz:Bool,flipVert:Bool)-&gt;SKTexture { if !flipHoriz &amp;&amp; !flipVert { return SKTexture.init(imageNamed: name) } let image = UIImage(named:name) UIGraphicsBeginImageContext(image!.size) let context = UIGraphicsGetCurrentContext() if !flipHoriz &amp;&amp; flipVert { // Do nothing, X is flipped normally in a Core Graphics Context // but in landscape is inverted so this is Y } else if flipHoriz &amp;&amp; !flipVert{ // fix X axis but is inverted so fix Y axis CGContextTranslateCTM(context, 0, image!.size.height) CGContextScaleCTM(context, 1.0, -1.0) // flip Y but is inverted so flip X here CGContextTranslateCTM(context, image!.size.width, 0) CGContextScaleCTM(context, -1.0, 1.0) } else if flipHoriz &amp;&amp; flipVert { // flip Y but is inverted so flip X here CGContextTranslateCTM(context, image!.size.width, 0) CGContextScaleCTM(context, -1.0, 1.0) } CGContextDrawImage(context, CGRectMake(0.0, 0.0, image!.size.width, image!.size.height), image!.CGImage) let newImage = UIGraphicsGetImageFromCurrentImageContext() UIGraphicsEndImageContext(); return SKTexture(image: newImage) } } </code></pre> <p><strong>Usage:</strong> </p> <pre><code>let spriteTxt = SKTexture.flipImage(imageName, flipHoriz: true, flipVert: false) </code></pre> <p>P.S.: If you want the same function but to <code>portrait</code> mode please refeer to this <a href="http://stackoverflow.com/a/6481903/1894067">answer</a></p>