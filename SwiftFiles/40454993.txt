NSPhotoLibraryUsageDescription key added to info.plist, still crashing due to privacy sensitive data
Trying to follow the FoodTracker Apple tutorial. xCode 8.1. I get this crashlog: 2016-11-06 16:49:17.922832 FoodTracker[2307:660318] [access] This app has crashed because it attempted to access privacy-sensitive data without a usage description. The app's Info.plist must contain an NSPhotoLibraryUsageDescription key with a string value explaining to the user how the app uses this data. (lldb) I have read several posts on missing privacy keys in iOS 10, and so I added the required key... Privacy - Photo Library Usage Description ...and a custom message under the value column. Yet I still get the same crash when I tap the image. Any help would be great. I would love to finish this tutorial. Thanks! INFO: I cannot include a screenshot of my info.plist yet, so here is the link to a screenshot: screenshot of info.plist Here is my ViewController.swift just in case: import UIKit class ViewController: UIViewController, UITextFieldDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate { // MARK: Properties @IBOutlet weak var nameTextField: UITextField! @IBOutlet weak var mealNameLabel: UILabel! @IBOutlet weak var photoImageView: UIImageView! override func viewDidLoad() { super.viewDidLoad() nameTextField.delegate = self } // MARK: UITextFieldDelegate func textFieldShouldReturn(_ textField: UITextField) -> Bool { // Hide the keyboard textField.resignFirstResponder() return true } func textFieldDidEndEditing(_ textField: UITextField) { mealNameLabel.text = textField.text } // MARK: UIImageControllerDelegate func imagePickerControllerDidCancel(_ picker: UIImagePickerController) { dismiss(animated: true, completion: (nil)) } func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) { let selectedImage = info[UIImagePickerControllerOriginalImage] as! UIImage photoImageView.image = selectedImage dismiss(animated: true, completion: (nil)) } // MARK: Actions @IBAction func selectImageFromPhotoLibrary(_ sender: UITapGestureRecognizer) { nameTextField.resignFirstResponder() let imagePickerController = UIImagePickerController() imagePickerController.sourceType = .photoLibrary imagePickerController.delegate = self present(imagePickerController, animated: true, completion: nil) } @IBAction func setDefaultLabelText(_ sender: UIButton) { mealNameLabel.text = "Default Text" } }
You may need to make sure that your app has been granted permission. Though you may have added the info.plist string now, since you have run the app on your device already it may be holding on to the error. I would suggest doing a clean. Delete your derived data "Shortcut" Command + Option + Sift + k and delete the app form the device and build/run again. If that does not solve the problem you should look into if you actually have the ability to use that source. func pickPhoto() { if UIImagePickerController.isSourceTypeAvailable(.camera) { showPhotoMenu() } else { choosePhotoFromLibrary() } } Because if you are on a simulator you don't actually have a camera like you do on a real device. This would cause a crash. If that does not solve it you can just check the permissions for that media type. let status = AVCaptureDevice.authorizationStatus(forMediaType: AVMediaTypeVideo) if status == AVAuthorizationStatus.denied { let changeYourSettingsAlert = UIAlertController(title: "You do not have permissions enabled for this.", message: "Would you like to change them in settings?", preferredStyle: .alert) let okAction = UIAlertAction(title: "OK", style: .default, handler: { (UIAlertAction) -> Void in guard let url = URL(string: UIApplicationOpenSettingsURLString) else {return} UIApplication.shared.openURL(url) }) let cancelAction = UIAlertAction(title: "Cancel", style: .cancel, handler: nil) changeYourSettingsAlert.addAction(okAction) changeYourSettingsAlert.addAction(cancelAction) presentAlert(sender: changeYourSettingsAlert) } The other half is how to give them an option to open Settings for the user. I hope that helps good luck