Swift : Define a closure compatible with Objective-C block
<p>I tried to declare a closure matching the following Objective-C block: </p> <pre><code>typedef void(^TyphoonDefinitionBlock)(TyphoonDefinition *definition); </code></pre> <p>like this: </p> <pre><code>var config: TyphoonDefinitionBlock = { (definition: TyphoonDefinition) in definition.injectProperty("quest", with: nil) } </code></pre> <p>. . . and got the following error. (see image). </p> <p><img src="https://i.stack.imgur.com/hOHua.png" alt="enter image description here"></p> <p>What's the correct way to do this? </p>
<p>You need to declare <code>definition</code> as an <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Types.html#//apple_ref/doc/uid/TP40014097-CH31-XID_1014" rel="nofollow">ImplicitlyUnwrappedOptional</a> (<code>TyphoonDefinition!</code>) because in objective-C it is a pointer that can be nil.</p> <p>Normal variables (and constants) in swift cannot be nil. They must contain a value.</p>
<p>I'm using typealias, taken from <a href="http://berzniz.com/post/87924122326/notes-from-coding-in-swift" rel="nofollow">http://berzniz.com/post/87924122326/notes-from-coding-in-swift</a> typealias resultBlock = (success: Bool, result: AnyObject!) -> Void</p>
<p>Like to explain it in details,start with your piece of code</p> <p>Objective C <code>typedef void(^TyphoonDefinitionBlock)(TyphoonDefinition *definition);</code></p> <p>In Swift you make it like this <code>typealias TyphoonDefinitionBlock = (definition:TyphoonDefinition?)-&gt;Void</code></p> <p>If you want to intimate to caller object after particular moment you need to make a property. <code>var typhoonDefinitionCompletion:BlockTyphoonDefinitionBlock?</code></p> <p>you can use <code>typhoonDefinitionCompletion</code>and you can raise the callback message like this. <code>self.typhoonDefinitionCompletion!(definition:passyourtyphoneDefinition)</code></p>