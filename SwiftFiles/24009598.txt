Does swift playground support UIKit?
<p>I tried to create a <code>UILabel</code> in playground but failed. Does playground only support <strong>OS X</strong> development for now?</p>
<p>Press Option+Cmd+1 and choose iOS in the Platform setting. Then you can import UIKit and play~</p>
<p>Edited@2014-11-13: It seems the new xcode 6 had fixed this.</p> <p>NO, It doesn't. But it's worth noting that you <em>can</em> import UIKit.</p> <p>If you want to import UIKit you cound follow this:</p> <ol> <li>View -> Utilities -> Show File Inspector (opt + cmd + 1)</li> <li>On the right side of Xcode Change “Playground Settings -> Platform” from OS X to iOS</li> </ol> <p>then you could import UIKit or some module for iOS</p> <p>ps. I try to create a UIImageView but it doesn't show the correct image on the right side. It seem worthless to import UIKit </p>
<p>Yeah looks like it doesn't support UIkit yet.</p> <p>Edit: Actually above answer is incorrect. </p> <p>You can create iOS project and add new .playground file inside that project. Then you can import Uikit or another iOS specific framework.</p>
<p>I found I could add a new playground file in IOS project, and in that file I can import UIKit.</p>
<p>Press CMD+Option+1 and change the platform to iOS, this will allow you to import UIKit.</p>
<p>YES, it does!</p> <p>File: New > File... > iOS > Source > Playground</p> <pre><code>import UIKit let lbl = UILabel(frame: CGRectMake(0, 0, 300, 100)) lbl.text = "Hello StackOverflow!" </code></pre> <p>Then, <strong><em>save</em></strong> the file. This will trigger the Playground to interpret UI related things. Sometimes you may need to toss in a trailing newline and save again -- its a beta. At this point, the word "UILabel" should appear on the right-hand side.</p> <p><img src="https://i.stack.imgur.com/MhWzu.png" alt="ios playground quickview"> </p> <p>Now, to actually view what you've done, you've got to click on the "Quick View" eye on the right, or the white circle to open it in Assistant Editor:</p> <p>Here's a screenshot of some basic things with UIImage working, etc. <img src="https://i.stack.imgur.com/oUxsi.png" alt="ios playground example"></p>
<p>please use <code>Command (⌘) + Option(⌥) + 1</code> combination to switch to iOS platform from OSX in playground to use UIKit .</p>
<p>In Xcode7, now you cannot use the <code>Quick Look</code> to see the appearance of a UIView.</p> <p>Instead, use the Assistant Editor and:</p> <pre><code>XCPlaygroundPage.currentPage.liveView = sampleView </code></pre> <p>Like this:</p> <p>import XCPlayground import UIKit</p> <pre><code>XCPlaygroundPage.currentPage.needsIndefiniteExecution = true // Simulate User Interaction, not available in Xcode 7.2 func delay(delay:Double, closure:()-&gt;()) { dispatch_after( dispatch_time( DISPATCH_TIME_NOW, Int64(delay * Double(NSEC_PER_SEC)) ), dispatch_get_main_queue(), closure) } let color = UIColor(red: 1, green: 1, blue: 0, alpha: 1) let leftMargin = 20 let view = UIView(frame: CGRect(x: 0, y: 0, width: 375, height: 667)) // iPhone 6 proportions view.backgroundColor = UIColor.grayColor() // LABEL let label = UILabel(frame: CGRect(x: leftMargin, y: 5, width: 300, height: 44)) label.text = "Hello, playground" label.textColor = UIColor.whiteColor() view.addSubview(label) // TEXTFIELD let textField = UITextField(frame: CGRect(x: leftMargin, y: 60, width: 300, height: 44)) textField.placeholder = "Edit me…" textField.backgroundColor = UIColor(white: 1, alpha: 0.5) textField.textColor = UIColor.whiteColor() textField.userInteractionEnabled = true view.addSubview(textField) XCPlaygroundPage.currentPage.liveView = view delay(1.0) { () -&gt; () in textField.text = "New text!" } </code></pre>
<p>In Xcode 8 <code>XCPlaygroundPage.currentPage.liveView</code> is deprecated. Instead, use</p> <pre><code>import PlaygroundSupport PlaygroundPage.current.liveView = view </code></pre>