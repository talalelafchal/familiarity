Tree in Swift programming language
<p>I tried to make a tree with swift using fonctionnal way</p> <p>here is my code: </p> <pre><code>//this code works struct testArbre { var racine: Int? } let a0 = testArbre(racine:nil) //this code stuck on error struct arbre { var racine: Int? var feuilleGauche: arbre? var feuilleDroite : arbre? } let a1 = arbre(racine: 10, feuilleGauche: nil, feuilleDroite: nil) let a2 = arbre(racine:5, feuilleGauche:nil, feuilleDroite:nil) let a3 = arbre(racine:1, feuilleGauche: a1, feuilleDroite: a2); </code></pre> <p>and here is the error when running this code:</p> <pre><code>&lt;unknown&gt;:0: error: unable to execute command: Segmentation fault: 11 &lt;unknown&gt;:0: error: swift frontend command failed due to signal (use -v to see invocation) Command /Applications/Xcode6-Beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift failed with exit code 254 </code></pre>
<p>Structs are value types. Imagine how the struct would be initialized: You have a struct arbre, so the system will allocate memory for its members, which are an Int and a struct arbre, so the system will allocate memory for its members (an int and a struct arbre), so the system will allocate memory for its members (an int and a struct arbre) . . . -> crash</p> <p>You need to make it a class.</p> <p>If you want a struct containing a reference to the same type that is easily done with pointers in C. </p> <p><a href="http://stackoverflow.com/questions/7474774/typedef-a-struct-containing-a-pointer-to-same-type">Typedef a struct containing a pointer to same type</a></p>