Direction's route distance doesn't calculating
I have an app, that shows the list of organisations as main list. each organisation have the coordinates and distance parameter: class CW { var cwLatCoord: String { if _cwLatCoord == nil { _cwLatCoord = "" } return _cwLatCoord } var cwLonCoord: String { if _cwLonCoord == nil { _cwLonCoord = "" } return _cwLonCoord } var cwDistance: Double { if _cwDistance == nil { _cwDistance = 999.999 } return _cwDistance } ... } When the main list appears, I initialise each organisation with lots of other parameters to an array. And I have filters to arrange those organisations by different parameters. And one of them - it's a distance. But I can't handle an issue that appear in next function of the class: class CW { ... // bunch of code... ... func nearestCW(_ userLocation: CLLocation) -> Double { let request = MKDirectionsRequest() request.source = MKMapItem(placemark: MKPlacemark(coordinate: CLLocationCoordinate2D(latitude: userLocation.coordinate.latitude, longitude: userLocation.coordinate.longitude), addressDictionary: nil)) print(request.source!) request.destination = MKMapItem(placemark: MKPlacemark(coordinate: CLLocationCoordinate2D(latitude: CLLocationDegrees(_cwLatCoord)!, longitude: CLLocationDegrees(_cwLonCoord)!), addressDictionary: nil)) print(request.destination!) request.requestsAlternateRoutes = true request.transportType = .automobile let directions = MKDirections(request: request) print(directions) var distance: CLLocationDistance? directions.calculate { response, error in // SOMEHOW IT'S NOT DIVING IN COMPLETION HANDLER print(response!) distance = response!.routes.first?.distance self._cwDistance = distance } return distance! } } This function called when I choose this filter: case CarwashFilters.nearest.rawValue: manager.startUpdatingHeading() let sortedArray = cwArray.sorted { $0.nearestCW(userLocation) < $1.nearestCW(userLocation) } returnSortedArray(array: sortedArray) But for some reason the compiler doesn't step in this line of function: directions.calculate { response, error in... Can someone explain me why? thanks!