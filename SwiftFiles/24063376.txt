Error: Class Methods may only be declared on a type
<p>Hi I had written some code (using swift):</p> <pre><code>import UIKit import Foundation func timerFireMethod(timer1: NSTimer) { } class ViewController: UIViewController { func timerFireMethod(timer1: NSTimer) { } var greytitle : UIImage = UIImage(named:"AppTitle.png") var redtitle : UIImage = UIImage(named:"AppTitleRed.png") @IBOutlet var maintitle: UIImageView override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib class func scheduledTimerWithTimeInterval(_ seconds: NSTimeInterval = 0.1, target timer1m: AnyObject!, selector timer1: Selector, userInfo nil: AnyObject!, repeats true: Bool) -&gt; NSTimer! maintitle.image = greytitle } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } } </code></pre> <p>And where it says class func I get a error </p> <pre><code>"Class Methods may only be declared on a type" </code></pre> <p>I know it's a pretty novice question but if anyone could explain what I'm doing wrong it would be greatly appreciated! Also I noticed 4 lines are highleted as code but they are code.</p>
<p>Your problem is that you are trying to write a method (<code>timerWithInterval</code>)inside another method (<code>viewDidLoad</code>). You also aren't creating a timer in the right way. I see you declared a class function to do this so I will use that as an example. Do this:</p> <pre><code>override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib } class func scheduledTimerWithTimeInterval(_ seconds: NSTimeInterval = 0.1, target timer1m: AnyObject!, selector timer1: Selector, userInfo nil: AnyObject!, repeats doesRepeat: Bool) -&gt; NSTimer!{ //maintitle.image = greytitle var timer = NSTimer.scheduledTimerWithTimeInterval(seconds, target: timer1m, selector: timer1, userInfo: nil, repeats:doesRepeat) (NSRunLoop.currentRunLoop()).addTimer(timer, forMode:NSDefaultRunLoopMode) } </code></pre>
<p>To create a timer you should use</p> <pre><code>var timer = NSTimer.scheduledTimerWithTimeInterval(0.1, target: self, selector: "someFunction", userInfo: nil, repeats: false) </code></pre>