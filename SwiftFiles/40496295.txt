Firebase + Swift: Grab only the latest change for a child node
I have a locations-orders table that looks like this: I want to only grab the latest order that is added to the record (not all the other orders that are already inside it). This is what I have, which doesn't work (fyi I hardcoded the location-orders key):  static func observeOrders(lId: String, f: @escaping (AppState.Order) -> () ) { FIRDatabase.database().reference(withPath: "locations-orders/5P9TF215PZ3ZV") .child("orders") .queryEnding(atValue: nil) .queryLimited(toLast: 1) .observe(.childAdded, with: { firebaseSnapshot in let orderObject = firebaseSnapshot.value as! [String: AnyObject] print("orderObject") print(orderObject) // <-------------------- only prints once, never prints again let order = AppState.Order( title: orderObject["name"] as! String, subtitle: orderObject["item_variation_name"] as! String, createdAt: Date(timeIntervalSince1970: TimeInterval(orderObject["created_at"] as! Int / 1000)), name: "name", status: AppState.Order.Status.Pending ) f(order) }) } What's wrong with my query??
Let's simplify. If you want to get the last item added and then any new items added, how about this: let ref = "your orders path" ref.queryLimited(toLast: 1) .observe(.childAdded, with: { snapshot in print(snapshot?.value) })