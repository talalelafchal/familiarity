How do I convert an NSString value to NSData?
<p>How do I convert an <code>NSString</code> value to <code>NSData</code>?</p>
<pre><code>NSString* str = @"teststring"; NSData* data = [str dataUsingEncoding:NSUTF8StringEncoding]; </code></pre>
<p>Converting <code>NSString</code> like so will force a trailing <code>\0</code> byte, which means <code>NSJSONSerialization:JSONObjectWithData</code> and others will fail unless you remove it.</p> <p>I.e. do </p> <pre><code>NSData* data = [yourString dataUsingEncoding:NSUTF8StringEncoding]; </code></pre> <p>and then </p> <pre><code>data = [data subdataWithRange:NSMakeRange(0, [data length] - 1)]; </code></pre> <p>then feel free to proceed with <code>NSJSONSerialization:JSONObjectWithData</code>.</p>
<p>First off, you should use <code>dataUsingEncoding:</code> instead of going through <code>UTF8String</code>. You only use <code>UTF8String</code> when you need a <code>C</code> string in that encoding.</p> <p>Then, for <code>UTF-16</code>, just pass <code>NSUnicodeStringEncoding</code> instead of <code>NSUTF8StringEncoding</code> in your <code>dataUsingEncoding:</code> message.</p>
<p>In case of Swift Developer coming here,</p> <p>to convert from NSString / String to NSData</p> <pre><code>var _nsdata = _nsstring.dataUsingEncoding(NSUTF8StringEncoding) </code></pre>
<pre><code>NSString *str = @"helowrld"; // This converts the string to an NSData object NSData *data = [str dataUsingEncoding:NSUTF8StringEncoding]; </code></pre> <p>you can take reference from this <a href="http://albertech.blogspot.in/2011/08/convert-nsstring-to-nsdata-and-back.html">link</a></p>
<pre><code>NSString *str = @"hello"; NSData *data = [NSData dataWithBytes:str.UTF8String length:str.length]; </code></pre>
<p><strong>Objective-C:</strong></p> <pre><code>NSString *str = @"test string"; NSData *data = [NSKeyedArchiver archivedDataWithRootObject:str]; NSString *thatStr = [NSKeyedUnarchiver unarchiveObjectWithData:data]; </code></pre> <p><strong>Swift:</strong></p> <pre><code>let str = "test string" let data = NSKeyedArchiver.archivedDataWithRootObject(str) let thatStr = NSKeyedUnarchiver.unarchiveObjectWithData(data) as! String </code></pre>
<p>For Swift 3, you will mostly be converting from <code>String</code> to <code>Data</code>.</p> <pre><code>let myString = "test" let myData = myString.data(using: .utf8) print(myData) // Optional(Data) </code></pre>