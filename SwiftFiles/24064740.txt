Create a button programmatically and set a background image
<p>When I try creating a button and setting a background image in Swift:</p> <pre><code>let button = UIButton.buttonWithType(UIButtonType.System) as UIButton button.frame = CGRectMake(100, 100, 100, 100) button.setImage(IMAGE, forState: UIControlState.Normal) button.addTarget(self, action: "btnTouched:", forControlEvents: UIControlEvents.TouchUpInside) self.view.addSubview(button) </code></pre> <p>I always get an error: "<strong>Cannot convert the expression's type 'Void' to type 'UIImage'</strong>".</p>
<p>Your code should look like below</p> <pre><code>let image = UIImage(named: "name") as UIImage? let button = UIButton(type: UIButtonType.Custom) as UIButton button.frame = CGRectMake(100, 100, 100, 100) button.setImage(image, forState: .Normal) button.addTarget(self, action: "btnTouched:", forControlEvents:.TouchUpInside) self.view.addSubview(button) </code></pre>
<p>Try below:</p> <pre><code>let image = UIImage(named: "ImageName.png") as UIImage var button = UIButton.buttonWithType(UIButtonType.System) as UIButton button.frame = CGRectMake(100, 100, 100, 100) button .setBackgroundImage(image, forState: UIControlState.Normal) button.addTarget(self, action: "Action:", forControlEvents:UIControlEvents.TouchUpInside) menuView.addSubview(button) </code></pre> <p>Let me know whether if it works or not?</p>
<p>You need check for image is not nil before assign it to button.</p> <p>Example:</p> <pre><code>let button = UIButton.buttonWithType(UIButtonType.System) as UIButton button.frame = CGRectMake(100, 100, 100, 100) if let image = UIImage(named: "imagename.png") { button.setImage(image, forState: .Normal) } button.addTarget(self, action: "btnTouched:", forControlEvents:.TouchUpInside) self.view.addSubview(button) </code></pre>
<pre><code>let btnRight=UIButton.buttonWithType(UIButtonType.Custom) as UIButton btnRight.frame=CGRectMake(0, 0, 35, 35) btnRight.setBackgroundImage(UIImage(named: "menu.png"), forState: UIControlState.Normal) btnRight.setTitle("Right", forState: UIControlState.Normal) btnRight.tintColor=UIColor.blackColor() </code></pre>
<p>This is how you can create a beautiful button with a bezel and rounded edges:</p> <pre><code>loginButton = UIButton(frame: CGRectMake(self.view.bounds.origin.x + (self.view.bounds.width * 0.325), self.view.bounds.origin.y + (self.view.bounds.height * 0.8), self.view.bounds.origin.x + (self.view.bounds.width * 0.35), self.view.bounds.origin.y + (self.view.bounds.height * 0.05))) loginButton.layer.cornerRadius = 18.0 loginButton.layer.borderWidth = 2.0 loginButton.backgroundColor = UIColor.whiteColor() loginButton.layer.borderColor = UIColor.whiteColor().CGColor loginButton.setTitle("Login", forState: UIControlState.Normal) loginButton.setTitleColor(UIColor(red: 24.0/100, green: 116.0/255, blue: 205.0/205, alpha: 1.0), forState: UIControlState.Normal) </code></pre>
<p>Swift: Ui Button create programmatically</p> <pre><code>let myButton = UIButton() myButton.titleLabel!.frame = CGRectMake(15, 54, 300, 500) myButton.titleLabel!.text = "Button Label" myButton.titleLabel!.textColor = UIColor.redColor() myButton.titleLabel!.textAlignment = .Center myButton.addTarget(self,action:"Action:",forControlEvents:UIControlEvent.TouchUpInside) self.view.addSubview(myButton) </code></pre>
<blockquote> <p>The convenience initializer for UIButton has changed for swift 2.0 (iOS9, Xcode 7)</p> </blockquote> <pre><code>convenience init(type buttonType: UIButtonType) </code></pre> <blockquote> <p>Create Button and add image as its background.</p> </blockquote> <pre><code> let image = UIImage(named: "name") as UIImage? let button = UIButton(type: UIButtonType.System) button.frame = CGRectMake(100, 100, 100, 100) button.setImage(image, forState: .Normal) button.addTarget(self, action: â€œbtnPressed:",forControlEvents:.TouchUpInside) self.view.addSubview(button) </code></pre>