Swift : Why is the class method struck out
<p>As long as a Swift class extends from NSObject we can pass it to the Objective-C runtime and ask it to introspect it for us. </p> <p>We have three options: </p> <ul> <li>class</li> <li>classForCoder</li> <li>classForKeyedArchiver</li> </ul> <p>. . however class is struck out. (See image). Why is this? </p> <p><img src="https://i.stack.imgur.com/60x8X.png" alt="enter image description here"></p>
<p>That's because <code>class</code> is a keyword in Swift, therefore any valid method cannot be named <code>class</code>. In the same way you cannot create a method named <code>for</code>, <code>while</code> or other keyword.</p> <p>I wasn't able to reproduce the strike-out with my methods, however, naming a method <code>var</code> (or other keyword) in obj-c makes it impossible to be called from Swift.</p> <p><b>Edit</b></p> <p>I was wrong. It's still possible to call <code>class</code> from Swift using</p> <pre><code>var clazz: AnyClass? = self.`class`() </code></pre> <p>However, then the compiler says:</p> <blockquote> <p>'Class' is unavailable: use 'dynamicType' instead</p> </blockquote> <p>So the answer by Edwin Vermeers is the correct one.</p>
<p>As you can see in the documentation, it's only available in Objective C and not in swift. See: <a href="https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSObject_Class/index.html#//apple_ref/occ/clm/NSObject/class">https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSObject_Class/index.html#//apple_ref/occ/clm/NSObject/class</a></p> <p>I think this is because the AnyObject gives you enough information (More than the NSObject) for instance you can do NSStringFromClass(BaseObject) in swift instead of the NSStringFromClass([BaseObject class]) that you do in Objective C</p>