Where did setHTTPMethod, setURL and setHTTPBody go in swift?
<p>I am tryting to implement HTTP requests.</p> <p>Here is the objective C implementation</p> <pre><code> NSMutableURLRequest *request = [[NSMutableURLRequest alloc] init]; [request setURL:url]; [request setHTTPMethod:@"POST"]; [request setValue:postLength forHTTPHeaderField:@"Content-Length"]; [request setValue:@"application/json" forHTTPHeaderField:@"Accept"]; [request setValue:@"application/x-www-form-urlencoded" forHTTPHeaderField:@"Content-Type"]; [request setHTTPBody:postData]; </code></pre> <p>I started by writing:</p> <pre><code> let request = NSMutableURLRequest() request .setValue(postLength, forHTTPHeaderField: "Content-Lenght") request .setValue(application/json, forHTTPHeaderField: Accept) </code></pre> <p>1.The json request is giving me an error.</p> <p>2.I cannot convert the setURL and SetHTTPBody from objective C to swift. I could not find the option for these.</p> <p>Any help would be appreciated. Thank you.</p>
<p>Here is how i do it in swift : </p> <blockquote> <p>var request : NSMutableURLRequest = NSMutableURLRequest()<br> request.URL = NSURL(string: url)</p> <p>request.HTTPMethod = "POST"</p> <p>request.setValue(postLength, forHTTPHeaderField: "Content-Length")</p> <p>request.setValue("application/json", forHTTPHeaderField: "Content-Type")</p> <p>request.HTTPBody = jsonData</p> </blockquote>
<p>They have become properties. Most setter methods with a single argument have become properties.</p> <p>The problem with your json line is you did not have quotes around "Accept."</p> <pre><code>let request = NSMutableURLRequest() request.url = url request.HTTPMethod = "POST" request.setValue(postLength, forHTTPHeaderField:"Content-Length") request.setValue("application/json", forHTTPHeaderField:"Accept") request.setValue("application/x-www-form-urlencoded", forHTTPHeaderField:"Content-Type") request.postBody = postData </code></pre>
<pre><code> var request: NSMutableURLRequest? let HTTPMethod: String = "POST" var timeoutInterval: NSTimeInterval = 60 var HTTPShouldHandleCookies: Bool = false request = NSMutableURLRequest(URL: url) request!.HTTPMethod = HTTPMethod request!.timeoutInterval = timeoutInterval request!.HTTPShouldHandleCookies = HTTPShouldHandleCookies let boundary = "----------SwIfTeRhTtPrEqUeStBoUnDaRy" let contentType = "multipart/form-data; boundary=\(boundary)" request!.setValue(contentType, forHTTPHeaderField:"Content-Type") var body = NSMutableData(); let tempData = NSMutableData() let fileName = filenames + ".jpg" //"prueba.jpg" let parameterName = "userfile" let mimeType = "application/octet-stream" tempData.appendData("--\(boundary)\r\n".dataUsingEncoding(NSUTF8StringEncoding)!) let fileNameContentDisposition = fileName != nil ? "filename=\"\(fileName)\"" : "" let contentDisposition = "Content-Disposition: form-data; name=\"\(parameterName)\"; \(fileNameContentDisposition)\r\n" tempData.appendData(contentDisposition.dataUsingEncoding(NSUTF8StringEncoding)!) tempData.appendData("Content-Type: \(mimeType)\r\n\r\n".dataUsingEncoding(NSUTF8StringEncoding)!) tempData.appendData(imageData) tempData.appendData("\r\n".dataUsingEncoding(NSUTF8StringEncoding)!) body.appendData(tempData) body.appendData("\r\n--\(boundary)--\r\n".dataUsingEncoding(NSUTF8StringEncoding)!) request!.setValue("\(body.length)", forHTTPHeaderField: "Content-Length") request!.HTTPBody = body var vl_error :NSErrorPointer = nil var responseData = NSURLConnection.sendSynchronousRequest(request,returningResponse: nil, error:vl_error) var results = NSString(data:responseData, encoding:NSUTF8StringEncoding) println("finish \(results)") </code></pre>
<pre><code>I am calling the json on login button click @IBAction func loginClicked(sender : AnyObject){ var request = NSMutableURLRequest(URL: NSURL(string: kLoginURL)) // Here, kLogin contains the Login API. var session = NSURLSession.sharedSession() request.HTTPMethod = "POST" var err: NSError? request.HTTPBody = NSJSONSerialization.dataWithJSONObject(self.criteriaDic(), options: nil, error: &amp;err) // This Line fills the web service with required parameters. request.addValue("application/json", forHTTPHeaderField: "Content-Type") request.addValue("application/json", forHTTPHeaderField: "Accept") var task = session.dataTaskWithRequest(request, completionHandler: {data, response, error -&gt; Void in var strData = NSString(data: data, encoding: NSUTF8StringEncoding) println("Body: \(strData)") var err1: NSError? var json2 = NSJSONSerialization.JSONObjectWithData(strData.dataUsingEncoding(NSUTF8StringEncoding), options: .MutableLeaves, error:&amp;err1 ) as NSDictionary if(err) { println(err!.localizedDescription) } else { var success = json2["success"] as? Int println("Succes: \(success)") } }) task.resume() } Here, I have made a seperate dictionary for the parameters. var params = ["format":"json", "MobileType":"IOS","MIN":"f8d16d98ad12acdbbe1de647414495ec","UserName":emailTxtField.text,"PWD":passwordTxtField.text,"SigninVia":"SH"] as NSDictionary return params } </code></pre>