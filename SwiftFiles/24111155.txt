How to change default embedded string for custom structs and classes in Swift
<p>Say I have a code struct of:</p> <pre><code>struct Point { var x = 0.0 var y = 0.0 } var p = Point(x: 5.0, y: 3.0) println("\(p)") </code></pre> <p>I will get:</p> <pre><code>V6&lt;AppName&gt;8Point (has 2 children) </code></pre> <p>Is there anyway to convert this into something custom? In Objective-C I believe this was covered with the <code>description()</code> method, but that isn't working here.</p>
<p>Yes, you can! Check out the <a href="https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/SwiftStandardLibraryReference/Printable.html" rel="nofollow">Apple docs on the Printable protocol</a>.</p> <p>Example code from the docs:</p> <pre><code>struct MyType: Printable { var name = "Untitled" var description: String { return "MyType: \(name)" } } let value = MyType() println("Created a \(value)") // prints "Created a MyType: Untitled" </code></pre>
<p>You'll want to implement the <a href="https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/SwiftStandardLibraryReference/Printable.html" rel="nofollow">Printable</a> protocol. Just make your class implement the protocol and add this property:</p> <pre><code>var description: String { get } </code></pre>
<p>For anyone coming to this recently (Swift 2.0), the Printable protocol has been renamed to CustomStringConvertible</p>