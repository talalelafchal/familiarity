Multiple (Device-specific) storyboards in in iOS 7.0 Swift projects
<p>Has anyone gotten Swift to play nice enough with iOS 7 to handle multiple storyboards? </p> <p>At the very least, has anyone gotten device suffixes to work properly? Whenever I rename Main.storyboard in the Master-Detail example project to Main~iPad and/or Main~iPhone, I seem to get load errors. </p> <p>I think it has something to do with device suffixes, because the following will do what I want : </p> <pre><code> var window: UIWindow? var storyboard: UIStoryboard? func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: NSDictionary?) -&gt; Bool { //device suffixes ~iPad and ~iPhone don't work right now, in fact, a lot of .storyboard stuff is borked self.window = UIWindow() //window doesn't have an init with frame class, so we need to set that to the screen bounds in order to have touch self.window!.frame = UIScreen.mainScreen().bounds //Since I'm targeting iOS 7 and later, we can't use UISplitViewController everywhere (it becomes universal in iOS 8) if UIDevice.currentDevice().userInterfaceIdiom == .Pad { self.storyboard = UIStoryboard(name: "Main~iPad", bundle: nil) self.window!.rootViewController = self.storyboard!.instantiateInitialViewController() as UIViewController //iPad-specific initialization let splitViewController = self.window!.rootViewController as UISplitViewController let navigationController = splitViewController.viewControllers[splitViewController.viewControllers.endIndex-1] as UINavigationController splitViewController.delegate = navigationController.topViewController as DetailViewController }else{ //iPhone / iPod self.storyboard = UIStoryboard(name: "Main~iPhone", bundle: nil) self.window!.rootViewController = self.storyboard!.instantiateInitialViewController() as UINavigationController //iPhones should just have a navigation controller as their root view } self.window!.makeKeyAndVisible() //got to manually key since we're initializing our window by hand //at this point we have the iPad storyboard or the iPhone storyboard loaded return true } </code></pre> <p>I know that it looks like we're going to be moving away from device-specific tags, but answering this will be important for people that need to keep supporting iOS 7. </p>
<p>The device specific stuff and orientation is changing soon. Swift source compatibility for iOS 7 and Mavericks isn't guaranteed but binary compatibility is. Maybe you're running up against the limits of the compatibility.</p>