Use unresolved identifier when declaring variable in if-statement
<p>Why in <code>then</code> clause <code>name</code> is resolved as variable, but in <code>else</code> clause I get error : </p> <p><code>Use unresolved identifier 'name'</code></p> <p>The code:</p> <pre><code> var optionalName: String? = "Peter" var greeting = "Hello!" if let name = optionalName { greeting = "Hello, \(name)" } else { greeting = "Hello, \(name)" } </code></pre>
<p>Because it's how optional binding works.</p> <p><code>name</code> gets initialized and assigned only if <code>optionalName</code> is not empty.</p> <p>In case <code>optionalName</code> is <code>nil</code>, you get into the <code>else</code> branch and you already know that <code>optionalName</code> is empty.</p> <p>From the official book:</p> <blockquote> <p>If the optional value is <code>nil</code>, the conditional is false and the code in braces is skipped. Otherwise, the optional value is unwrapped and assigned to the constant after <code>let</code>, which makes the unwrapped value available inside the block of code.</p> </blockquote>
<p>Name is only defined as a constant if optional name is not nil. If optional name is nil, why would you want name to be assigned to that value?</p>