How do I save and restore a graphics context in Swift on iOS?
<p>I am porting a Mac app to iOS (and from Objective-C to Swift) and in Xcode I get several errors in the console stating that I'm using an invalid graphics context: </p> <p>: CGContextSetFillColorWithColor: invalid context 0x0. </p> <p>: CGContextSetStrokeColorWithColor: invalid context 0x0. </p> <p>: CGContextGetCompositeOperation: invalid context 0x0. </p> <p>: CGContextSetCompositeOperation: invalid context 0x0.</p> <p>: CGContextFillRects: invalid context 0x0.</p> <p>However, even after removed the code where I was dropping down into Core Graphics and only using UIColor and UIBezierPath, the errors remain.</p> <p>The only code where I'd used Core Graphics directly was to set shadows, but I strongly suspect my code for saving and restoring the graphics context in Swift is wrong:</p> <pre><code>if let context: CGContext! = UIGraphicsGetCurrentContext() { CGContextSaveGState(context) let shadowColor = UIColor(white:0, alpha:0.75).CGColor CGContextSetShadowWithColor(context, offset, blurRadius, shadowColor) } // Do drawing here... if let context: CGContext! = UIGraphicsGetCurrentContext() { CGContextSetShadowWithColor(context, CGSizeMake(0.0, 0.0), CGFloat(0.0), nil) CGContextRestoreGState(context) } </code></pre> <p>Would two different values for context be used here? Is that the problem with this code? Thanks for your help.</p>
<p>Here's what I'm using to save and restore context in Swift:</p> <pre><code>// Save the graphics context let currentContext = UIGraphicsGetCurrentContext() CGContextSaveGState(currentContext) ... your graphics operations here ... // Restore the previously saved context CGContextRestoreGState(currentContext) </code></pre>
<p><strong>Updated Swift-3 Code to save and restore Graphic Context</strong> :-</p> <pre><code>//To save current Context let context = UIGraphicsGetCurrentContext() context!.saveGState() //To restore context!.restoreGState() </code></pre>