What's the proper way to use an Objective-C category within Swift?
<p>I'm trying to import some category methods into my Swift file without any luck.</p> <p><strong>ios-Bridging-Header.h:</strong></p> <pre><code>#import "UIColor+Hex.h" </code></pre> <p><strong>UIColor+Hex.h</strong></p> <pre><code>#import &lt;UIKit/UIKit.h&gt; @interface UIColor (Hex) + (UIColor *)colorWithHex:(NSUInteger)hexInt; + (UIColor *)colorWithHexString:(NSString *)hexString; @end </code></pre> <p>I would expect the autocomplete to reveal <code>UIColor(hexInt: NSUInteger)</code> and <code>UIColor(hexString: String)</code></p>
<p>Actually, your category is transtlated to Swift as follows:</p> <pre><code>extension UIColor { init(hex hexInt: Int) -&gt; UIColor init(hexString: String) -&gt; UIColor } </code></pre> <p>And because of that, you should be using:</p> <pre><code>let color = UIColor(hex: 0xffffff) // instead of hexInt: let color = UIColor(hexString: "ffffff") </code></pre> <p>Autocompletion may still be buggy in the beta software, though.</p>
<p>You can use Objective-C categories directly in Swift. This gets really interesting for some of the bridged classes, like String. Extend NSString with a category in Objective-C, and then you can access it from Swift (directly on String!)</p> <p>The way to do this is by creating a "bridging header" in your Swift project.</p> <p>Full instructions <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html">here</a>.</p> <p>The short of it is:</p> <ol> <li>Make a .h header file (in Objective-C) with all the other <code>#import</code> statements in it</li> <li>Put the path to that file in <code>Objective-C Bridging Header</code> in your Build Settings</li> <li>No need to import the bridging header in your Swift file. It's already there</li> </ol>