Understand deinitialization and inheritance in swift language
<p>Let's say I have two classes: Base class and sub class like this:</p> <pre><code>class Base{ var name: String? init() { name = "The base class" } deinit { println("call Deinitialization in base class") name = nil } } class Sub: Base{ var subName: String? init() { super.init() subName = "The sub class" } deinit { println("call Deinitialization in sub class") subName = nil // does it really call super.deinit() ? // or assign name = nil ? } } </code></pre> <p>When the deinitializer of sub class is called, does it call <code>super.deinit()</code> to assign <code>name</code> variable to nil? Or I have to assign by hand in deinitializer of subclass?</p>
<blockquote> <p>Superclass deinitializers are inherited by their subclasses, and the superclass deinitializer is called automatically at the end of a subclass deinitializer implementation. Superclass deinitializers are always called, even if a subclass does not provide its own deinitializer.</p> </blockquote> <p>Excerpt From: Apple Inc. “The Swift Programming Language.” iBooks. <a href="https://itun.es/us/jEUH0.l" rel="nofollow">https://itun.es/us/jEUH0.l</a></p>
<p>You can optionally have a <code>deinit</code> inside your subclass.</p> <p>If you do</p> <pre><code> let x = Sub() </code></pre> <p>you'll see that first the <code>deinit</code> called is the one inside <code>Sub()</code> then after, <code>base</code> <code>deinit</code> is called. So yes the <code>super.deinit()</code> is called but after the subclass.</p> <p>Also the book says (page 286):</p> <blockquote> <p>You are not allowed to call a deinitializer yourself. Superclass deinitializers are inherited by their subclasses, and the superclass deinitializer is called automatically at the end of a subclass deinitializer implementation. Superclass deinitializers are always called, even if a subclass does not provide its own deinitializer.</p> </blockquote> <p>Excerpt From: Apple Inc. “The Swift Programming Language.” iBooks. <a href="https://itun.es/us/jEUH0.l">https://itun.es/us/jEUH0.l</a></p>