Importing Swift classes within a Objective-C Framework
<p>I have a custom Framework that has a bunch of Objective-C Classes. Within the Framework, I'd like to add more classes using Swift. However, when trying to expose the Swift classes to the Objective-C code using: <code>MyProduct-Swift.h</code>, it comes up as "<code>MyProduct-Swift.h</code> file not found".</p> <p>I've tried this in a single view template and it works fine. Is it not possible to import Swift within a framework?</p> <p>I've also verified that I have set the Defines Module setting and the Module Name. I've tried it with and without these settings.</p>
<p>Ok, I found what the problem is.</p> <p>Make sure that in Build Settings - > Packaging you have Define Module set to YES and Product Module Name is set as well. Then in the storyboard file the name for the Module should be the same and match what you have in your Build Settings. Then in your Obj-C file write include "-Swift.h"</p> <p>That did the trick for me. </p>
<p>I found some additional steps to make it all work. In addition to setting 'Define Module' to YES and 'Product Module Name' (usually these are set correct by default if you create new touch Framework in Xcode 6) you also need: </p> <ol> <li>add 'public' keyword to all Swift classes you need in Objective C</li> <li>you need to add 'public' keyword even to all the methods and properties within the class that you want to access from Objective C</li> <li>You need to import Swift header in a 'long' way like this:</li> </ol> <p><code>#import &lt;ProjectName/ModuleName-Swift.h&gt;</code> </p>