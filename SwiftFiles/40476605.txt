Ambiguous reference to member '+'
I have an array of floats, I want to find the index of the max 3 floats and average this. For example [20,0,9,17,31], the 3 highest are [31,20,17] and correspond to the index [4,0,3] the average of this is 3.5 My code:  func calcAvgIndex(initialArray:[Float]) -> Float { var ammendedMaxArray = initialArray.dropFirst(2).sorted().reversed() let maxThreeValues = Array(ammendedMaxArray.prefix(3)) let indexMaxThreeValues = Array(ammendedMaxArray.prefix(3).indices) could it be the above line ".indicies" that I am not using correctly?  var avgIndexMaxThreeValues = indexMaxThreeValues.reduce(0, +)/3 above line corresponds gives error Ambiguous reference to member '+'
If you use the Array enumerated() function to create an array of tuples that associates the index with the value, you can sort that array by the value and then use map to extract the indices of the maximum three values. func calcAvgIndex(initialArray:[Float]) -> Float { let ammendedMaxArray = Array(initialArray.dropFirst(2).enumerated().sorted(by: {$0.1 < $1.1})) let indexMaxThreeValues = ammendedMaxArray.suffix(3).map { Float($0.0) } let avgIndexMaxThreeValues = indexMaxThreeValues.reduce(0, +) / 3 return avgIndexMaxThreeValues } let values: [Float] = [99, 98, 20, 0, 9, 17, 31] print(calcAvgIndex(initialArray: values)) // 2.33333
This works, although it needs a for loop. var floats: [Float] = [20,0,9,17,31] let n = 3 var tupleArray = [(Int, Float)]() for i in 0..<floats.count { tupleArray.append((i, floats[i])) } let indices = tupleArray.sorted { return $0.1 > $1.1 }.prefix(n).map { Float($0.0) } // [4,0,3] let average = indices.reduce(0, +) / Float(n) // 2.33333
So you have an array of Float(s) let nums: [Float] = [20, 0, 9, 17, 31] Best indexes You can extract the indexes for the 3 max values writing if nums.count >= 3 { let bestIndexes = nums .enumerated() .sorted { $0.1 > $1.1 } .map { $0.0 }[0...2] } Average of best values Of course once you have the best indexes, you can get the average of the associated values. Here's the full code if nums.count >= 3 { let bestIndexes = nums .enumerated() .sorted { $0.1 > $1.1 } .map { $0.0 }[0...2] let bestValues = bestIndexes.map { nums[$0] } let bestAverage = bestValues.reduce(0, +) / Float(bestValues.count) print(bestAverage) // 22.6667 }