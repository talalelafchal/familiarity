Error showing a UIAlertView in swift
<p>Im trying to show a UIAlertView in my swift App</p> <pre><code> alert = UIAlertView(title: "", message: "bla", delegate: self, cancelButtonTitle: "OK") alert!.show() </code></pre> <p>=> BAD_ACESS error in: -[_UIAlertViewAlertControllerShim initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] ()</p> <p>so I suspected self. I set it to nil</p> <pre><code> alert = UIAlertView(title: "", message: "bla", delegate: nil, cancelButtonTitle: "OK") alert!.show() </code></pre> <p>=> ARM_DA_ALIGN error in: -[_UIAlertViewAlertControllerShim initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:] ()</p> <hr> <p>the full code</p> <pre><code>import UIKit @UIApplicationMain class AppDelegate: UIResponder, UIApplicationDelegate, UIAlertViewDelegate { @lazy var window = UIWindow(frame: UIScreen.mainScreen().bounds) @lazy var locationManager = CLLocationManager() var alert: UIAlertView? = nil func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: NSDictionary?) -&gt; Bool { //setup dummy window self.window.backgroundColor = UIColor.whiteColor() self.window.rootViewController = UIViewController() self.window.makeKeyAndVisible() alert = UIAlertView(title: "", message: "bla", delegate: nil, cancelButtonTitle: "OK") alert!.show() return true } } </code></pre> <p>How to do it right? :)</p>
<p>You should do it this way:</p> <pre><code>let alert = UIAlertController(title: "Title", message: "Message", preferredStyle: UIAlertControllerStyle.Alert) alert.addAction(UIAlertAction(title: "Button", style: UIAlertActionStyle.Default, handler: nil)) self.presentViewController(alert, animated: true, completion: nil) </code></pre>
<p>Even though <code>UIAlertView</code> is depreciated in iOS8, you can get away with using it but not through it's init function. For example:</p> <pre><code> var alert = UIAlertView() alert.title = "Title" alert.message = "message" alert.show() </code></pre> <p>Atleast this is the only way so far I've been able to successfully use an <code>UIAlertView</code>. I'm unsure on how safe this is though.</p>
<p>This is what I have used to make an alert popup in swift.</p> <pre><code>let myAlert = UIAlertView(title: "Invalid Login", message: "Please enter valid user name", delegate: nil, cancelButtonTitle: "Try Again") myAlert.show() </code></pre>
<pre><code>var alert = UIAlertController(title: "Alert", message: "Message", preferredStyle: UIAlertControllerStyle.Alert) alert.addAction(UIAlertAction(title: "Click", style: UIAlertActionStyle.Default, handler: nil)) self.presentViewController(alert, animated: true, completion: nil) </code></pre> <p>To handle actions:</p> <pre><code>alert.addAction(UIAlertAction(title: "Ok", style: .Default, handler: { action in switch action.style { case .Default: println("default") case .Cancel: println("cancel") case .Destructive: println("destructive") } })) </code></pre>
<p>I was successfully able to show a UIAlertView using this code:</p> <pre><code>var alert = UIAlertView() alert.title = "Title" alert.message = "Message" alert.addButtonWithTitle("Understood") alert.show() </code></pre> <p>The code "alert.addButtonWithTitle("Understood")" adds a button for the user to push after they have read the error message.</p> <p>Hope this helps you.</p>