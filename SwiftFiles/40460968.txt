unwanted duplications with addChild
First time coder and I thought I would start with a game with Spritekit (Swift 3). I've run across an issue where when I am adding a sprite node to the scene it duplicates it. I should also mention I'm doing this as a reoccurring function where I randomly create one of four obstacles. I have a timing mechanism set up to make the func run periodically. The func then generates a random number from 0-3 and then uses a switch/case method that should only create 1 of the four options except it always creates 2(still random so it could be 2 duplicates or 2 separate options overlapped). I have also tried a "if, else if..." statement with the same result. I've already tested this without the timer and without the random number generation and neither of them were the problem leading me to believe its either the "choosing" (switch or else if) method or I'm using addChild wrong. Any ideas as to what the issue may be, or alternative solutions to randomly generate sprites? Thanks in advance! There was a lot more to this code but I've stripped it down to the bear essentials, yet I'm still getting duplicates. let movementAmount = arc4random() % UInt32(self.frame.height / 2) let wallOffset = CGFloat(movementAmount) - self.frame.height / 4 let xCoordinate = self.frame.midX let yCoordinate = self.frame.midY + (self.frame.height / 2) + wallOffset wallTop1 = SKSpriteNode(texture: wallTop1Tex) wallTop1.scale(to: CGSize(width: wallTop1Tex.size().width / 2, height: wallTop1Tex.size().height / 2)) wallTop1.position = CGPoint(x: xCoordinate, y: yCoordinate) wallTop1.zPosition = objectZPos addChild(wallTop1) Update: I've done more testing and it turns out, according to the node count at least, even when no randomness is involved, two nodes are being created with each addChild func pass. Meaning this code  let xCoordinate = self.frame.midX let yCoordinate = self.frame.midY objectTex = SKSpriteTexture(imageNamed: "object") object = SKSpriteNode(texture: objectTex) object.position = CGPoint(x: xCoordinate, y: yCoordinate) self.addChild(object) creates two nodes in my version of sprite kit, which I can only assume is a glitch unless I have some unknown setting set wrong?? If so I would love to hear what it is if not is there some type of deglitching/debugging I can run to fix what seems to be a problem with SpriteKit itself?
The code above seems fine, you find a start position and then add a new child node, no problem there as far as I can see. Now...you say: except it always creates 2 So, will the above code add two childNodes?...it shouldn't :) Maybe, and I'm guessing now, your problem is, that this code is run more than once? Remember that each time you call addChild(), it adds a new child node, no matter if there is a childNode already or not. So it could be that you invoke the above code more than once and add a new childNode on top of an existing child node. Removing a Child Node If that is the case, and if you intend there to be only one childNode, then you could remove your wallTop1 from its parent before you add it again (I know, removing children from parents, programming is cruel sometimes ;)). A SKNode has the method removeFromParent() which you can use, so you could do something like: ... if wallTop1 != nil && wallTop1.parent != nil { wallTop1.removeFromParent() } //And then your "add new node code" wallTop1 = SKSpriteNode(texture: wallTop1Tex) wallTop1.scale(to: CGSize(width: wallTop1Tex.size().width / 2, height:wallTop1Tex.size().height / 2)) wallTop1.position = CGPoint(x: xCoordinate, y: yCoordinate) ... Or...if you don't want any childNodes at all, you can use removeAllChildren(), so...something like: removeAllChildren() //And then your "add new node code" wallTop1 = SKSpriteNode(texture: wallTop1Tex) wallTop1.scale(to: CGSize(width: wallTop1Tex.size().width / 2, height:wallTop1Tex.size().height / 2)) wallTop1.position = CGPoint(x: xCoordinate, y: yCoordinate) ... Or, you could give your wallTop1 a name and then filter through your childNodes and find that node again: let childNodeName = "somethingCleverHere" let existingChildren = children.filter { $0.name == childNodeName} if existingChildren.count > 0 { removeChildrenIn(existingChildren!) } //And then your "add new node code" wallTop1 = SKSpriteNode(texture: wallTop1Tex) wallTop1.scale(to: CGSize(width: wallTop1Tex.size().width / 2, height:wallTop1Tex.size().height / 2)) wallTop1.position = CGPoint(x: xCoordinate, y: yCoordinate) wallTop1.zPosition = objectZPos //Remember to give it a name wallTop1.name = childNodeName addChild(wallTop1) Hope that makes sense and helps you, good luck :)