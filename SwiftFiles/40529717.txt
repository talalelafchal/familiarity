Keep aspect ratio for UIbuttons background image
I've been looking for hours and all I find is old answers saying that it cannot be done. I have a button where I'd like the background image to be as large as it can be, while keeping its aspect ratio. The background image keeps getting streched no matter what I do. I've tried.  var bluecircle = #imageLiteral(resourceName: "BLUE.png") monBreak.contentMode = UIViewContentMode.scaleAspectFit monBreak.setBackgroundImage(bluecircle, for: UIControlState.normal) Do I really need to make an imageview and put an invisible button over it? That seems like welcoming A LOT of new things that could go wrong. I tried @IBOutlet weak var monBreak: UIButton! override func viewDidLoad() { super.viewDidLoad() var bluecircle = #imageLiteral(resourceName: "BLUE.png") let theimagebehindmonBreak = UIImageView(image: bluecircle) theimagebehindmonBreak.frame = CGRectFromString( "{{0,0},{40,40}}") monBreak.contentMode = UIViewContentMode.scaleAspectFit monBreak.addSubview(theimagebehindmonBreak) theimagebehindmonBreak.image=bluecircle theimagebehindmonBreak.contentMode = UIViewContentMode.scaleAspectFit This gets the aspect ratio right, but since I want the layout to be dynamic setting its size to fixed values won't work, plus it's not centered. At first I tired simply applying the constraints of the button like so  var dacontraints = NSLayoutConstraint(monBreak.constraints) But at this point I get the error "Cannot invoke initializer for type 'NSLayoutConstraint' with an argument list of type '{[NSLayoutconstraints]}' This is killing me
Sounds like a solution where subclassing fits. Subclass UIButton, add an ImageView in the init, size it to the frame, and set the contentMode properly.