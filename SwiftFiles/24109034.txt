Swift and Boolean
<p>The function AUGraphIsInitialized is defined like this:</p> <pre><code>func AUGraphIsInitialized(inGraph: AUGraph, outIsInitialized: CMutablePointer&lt;Boolean&gt;) -&gt; OSStatus </code></pre> <p>So, you call it like this:</p> <pre><code>var status : OSStatus = OSStatus(noErr) var outIsInitialized:Boolean = 0 status = AUGraphIsInitialized(self.processingGraph, &amp;outIsInitialized) </code></pre> <p>That works. But how do you check it?</p> <p>Boolean is defined as an CUnsignedChar (in MacTypes.h)</p> <p>So, you cannot do this:</p> <pre><code>if outIsInitialized { // whatever } </code></pre> <p>And you cannot cast it (could not find an overload...)</p> <pre><code>var b:Bool = Bool(outIsInitialized) </code></pre> <p>or with Swift's "as"</p> <pre><code>var b:Bool = outIsInitialized as Bool </code></pre> <p>So, my question is: how do you use Boolean in Swift?</p>
<p>C represents the Boolean value true with a nonzero value and false with a zero value, so you can just test <code>outIsInitialized</code> against <code>0</code>:</p> <pre><code>if outIsInitialized != 0 { // outIsInitialized is true } </code></pre>