Swift compile error when subclassing NSObject and using generics
<p>The following Swift code generates a compile error at build time:</p> <pre><code>import Foundation class Wrapper&lt;T&gt; : NSObject { let obj : T init(x : T) { self.obj = x } } </code></pre> <p>Am I doing something wrong or is this a compiler bug? </p> <p>If so, what could I do to work around it?</p> <p>The error log:</p> <pre><code>CompileSwift normal i386 com.apple.xcode.tools.swift.compiler cd /Users/hermespique/workspace/HanekeSwift export PATH="/Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode6-Beta.app/Contents/Developer/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin" /Applications/Xcode6-Beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -target i386-apple-ios8.0 -module-name HanekeTests -O0 -sdk /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk -g -module-cache-path /Users/hermespique/Library/Developer/Xcode/DerivedData/ModuleCache -I /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Products/Debug-iphonesimulator -F /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Products/Debug-iphonesimulator -F /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/Developer/Library/Frameworks -F /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -F /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/Developer/Library/Frameworks -c -j4 /Users/hermespique/workspace/HanekeSwift/HanekeTests/XCTestCase+Assert.swift /Users/hermespique/workspace/HanekeSwift/HanekeTests/Cache.swift /Users/hermespique/workspace/HanekeSwift/HanekeTests/Wrapper.swift -output-file-map /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/HanekeTests-OutputFileMap.json -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/HanekeTests.swiftmodule -Xcc -iquote -Xcc /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/HanekeTests-generated-files.hmap -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/HanekeTests-own-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/HanekeTests-project-headers.hmap -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Products/Debug-iphonesimulator/include -Xcc -I/Applications/Xcode6-Beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/DerivedSources/i386 -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -DDEBUG=1 -emit-objc-header -emit-objc-header-path /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/HanekeTests-Swift.h 0 swift 0x000000010a889608 llvm::sys::PrintStackTrace(__sFILE*) + 40 1 swift 0x000000010a889af4 SignalHandler(int) + 452 2 libsystem_platform.dylib 0x00007fff88e185aa _sigtramp + 26 3 libsystem_platform.dylib 0x00007fff55fb0334 _sigtramp + 3440999844 4 swift 0x0000000109c87395 swift::irgen::IRGenFunction::emitTypeMetadataRef(swift::CanType) + 21 5 swift 0x0000000109cbcfb8 (anonymous namespace)::OpaqueArchetypeTypeInfo::destroy(swift::irgen::IRGenFunction&amp;, swift::irgen::Address, swift::CanType) const + 24 6 swift 0x0000000109cf467b swift::SILVisitor&lt;(anonymous namespace)::IRGenSILFunction, void&gt;::visit(swift::ValueBase*) + 23579 7 swift 0x0000000109cee266 swift::irgen::IRGenModule::emitSILFunction(swift::SILFunction*) + 8678 8 swift 0x0000000109c6f6f8 swift::irgen::IRGenModule::emitGlobalTopLevel() + 184 9 swift 0x0000000109cdb6e3 performIRGeneration(swift::IRGenOptions&amp;, swift::Module*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&amp;, swift::SourceFile*, unsigned int) + 1859 10 swift 0x0000000109cdc033 swift::performIRGeneration(swift::IRGenOptions&amp;, swift::SourceFile&amp;, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&amp;, unsigned int) + 51 11 swift 0x0000000109c4e65a frontend_main(llvm::ArrayRef&lt;char const*&gt;, char const*, void*) + 4842 12 swift 0x0000000109c4d35d main + 1533 13 libdyld.dylib 0x00007fff8ddbb5fd start + 1 14 libdyld.dylib 0x0000000000000040 start + 1914980932 Stack dump: 0. Program arguments: /Applications/Xcode6-Beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c /Users/hermespique/workspace/HanekeSwift/HanekeTests/XCTestCase+Assert.swift /Users/hermespique/workspace/HanekeSwift/HanekeTests/Cache.swift -primary-file /Users/hermespique/workspace/HanekeSwift/HanekeTests/Wrapper.swift -enable-objc-attr-requires-objc-module -target i386-apple-ios8.0 -module-name HanekeTests -sdk /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk -I /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Products/Debug-iphonesimulator -F /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Products/Debug-iphonesimulator -F /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/Developer/Library/Frameworks -F /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -F /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.0.sdk/Developer/Library/Frameworks -g -module-cache-path /Users/hermespique/Library/Developer/Xcode/DerivedData/ModuleCache -Xcc -iquote -Xcc /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/HanekeTests-generated-files.hmap -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/HanekeTests-own-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/HanekeTests-project-headers.hmap -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Products/Debug-iphonesimulator/include -Xcc -I/Applications/Xcode6-Beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/DerivedSources/i386 -Xcc -I/Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -DDEBUG=1 -emit-module-doc-path /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/Wrapper~partial.swiftdoc -O0 -emit-module-path /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/Wrapper~partial.swiftmodule -serialize-diagnostics-path /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/Wrapper.dia -emit-dependencies-path /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/Wrapper.d -o /Users/hermespique/Library/Developer/Xcode/DerivedData/Haneke-dsgqpxenngbaqpctbkhhwtqbiorj/Build/Intermediates/Haneke.build/Debug-iphonesimulator/HanekeTests.build/Objects-normal/i386/Wrapper.o 1. While emitting IR SIL function @_TToFC11HanekeTests7WrapperE for 'deinit' at /Users/hermespique/workspace/HanekeSwift/HanekeTests/Wrapper.swift:11:7 &lt;unknown&gt;:0: error: unable to execute command: Segmentation fault: 11 &lt;unknown&gt;:0: error: swift frontend command failed due to signal (use -v to see invocation) Command /Applications/Xcode6-Beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift failed with exit code 254 </code></pre>
<p>I fiddled with your interesting (+1) snippet of code, and here's the closest code I could get while avoiding the compiler error:</p> <pre><code>struct Wrapper&lt;T&gt; { var obj : T init(_ x : T) { obj = x } } </code></pre> <p>So, if you don't really need Wrapper to be a class, then you'll be able to move on... until next release of Xcode ;)</p>
<p>I found a workaround to this problem</p> <pre><code>class Wrapper&lt;T&gt; { let _val: T[] init(_ v: T) { _val = [v] } var val : T { get { return _val[0] } set { _val[0] = newValue } } } </code></pre> <p>Since <code>Array</code> is a reference type (even though it is struct), the size of <code>Wrapper</code> class is now fixed and compiler can handle it.</p>
<p>I think its an X-code bug with generics and NSObject</p> <pre><code>class Foo&lt;T&gt;:NSObject{ let _foo:T? init(foo:T){ _foo = foo } } </code></pre> <p>gives <strong>swiftc failed with exit code 254</strong></p> <p>Removing the NSObject Works OK. ie:</p> <pre><code>class Foo&lt;T&gt;{ let _foo:T? init(foo:T){ _foo = foo } } </code></pre> <p>Or adding a constraint to the generic seems to work. ie:</p> <pre><code>class Foo&lt;T:AnyObject&gt;:NSObject{ let _foo:T? init(foo:T){ _foo = foo } } </code></pre>
<p>As I see it, generics do not like NSObjects types, only AnyObject ones..</p> <p>NSObject does not conform to AnyObject (they are different by nature and functionality) .. meaning you cannot use Array instead of NSArray if you need to create a generic method. I think this is the reason they left NSArray in swift .. because they still have NS.. things left behind .. The most important one is CoreData. I was trying to make a generic NSManagedObject class to derive from, that would use this powerful feature (generics).. I couldn't do it.</p>
<p>This little code snippet (another +1 from me) still causes a compiler crash in Xcode 7 beta 1, I guess it is intended that the code is not a valid class definition. A polite error message instead of a crash would be appreciated if anyone at Cupertino listens in to this thread.</p> <p>I resolved it by constraining the generic parameter to implement <code>NSObjectProtocol</code></p> <pre><code>class Wrapper&lt;T:NSObjectProtocol&gt; : NSObject { let obj : T init(x : T) { self.obj = x } } </code></pre> <p>This was useful for me when constructing a function that matches <code>Wrapper&lt;T&gt;</code> whenever <code>T</code> is a subclass of <code>NSManagedObject</code>.</p>
<h2>For Swift 2.0. This issue is no longer valid.</h2> <p>You can have a class like this and the compiler will not complain.</p> <pre><code>class Wrapper&lt;T&gt; : NSObject { let obj : T init(x : T) { self.obj = x } } </code></pre>