Function callback from C to Swift
<p>I have this C function that simply calls back another function passed as a parameter</p> <pre><code>void call_my_function(void (*callback_function)()) { callback_function(); } </code></pre> <p>This is C test code:</p> <pre><code>void func_to_call() // a simple test function passed in as a callback { printf("function correctly called"); } void test() // entry point { void (*foo)(); foo = &amp;func_to_call; call_my_function(foo); // pass the address of "func_to_call()" to "call_my_function()" } </code></pre> <p>Essentially, from <code>test()</code>, I call <code>call_my_function()</code> passing in the address of <code>func_to_call()</code>, and then <code>call_my_function()</code> calls back <code>func_to_call()</code>.</p> <p>From swift I see correctly the functions <code>test()</code> and <code>func_to_call()</code>, but it seems that</p> <pre><code>void call_my_function(void (*callback_function)()) </code></pre> <p>is not recognized (use of unresolved identifier) If I remove the parameter <code>void (*callback_function)()</code> then the function is recognized again.</p> <p>What can I do to pass a Swift function address to C and have it called back? Is it possible? Thanks</p>
<p>Apple confirmed me, on the dev forum, that it is not supported now, and requested me to fill a new request on the bugreporter.</p> <p>Moreover, I give to the readers another detail:</p> <p>It seems that in the compiled binary the symbols for all swift functions are already available and bridged to be accessible from C (even in a swift-only app)</p> <p>I made an app called FunctionTest, iPhone App with this function in a swift file</p> <p>func thisIsATestFunction() { println("test") }</p> <p>compiled, and then from Terminal:</p> <p>nc /Users/xxx/Library/Developer/Xcode/DerivedData/FunctionTest-hhrbtzsuyrdoftfnbakosvenaiak/Build/Products/Debug-iphonesimulator/FunctionTest.app/FunctionTest</p> <pre><code> U _NSStringFromClass U _OBJC_CLASS_$_NSString U _OBJC_CLASS_$_UIResponder U _OBJC_CLASS_$_UIViewController U _OBJC_CLASS_$_UIWindow 000088c8 S _OBJC_CLASS_$__TtC12FunctionTest11AppDelegate 00008888 S _OBJC_CLASS_$__TtC12FunctionTest14ViewController ......... ......... 00003840 T __TF12FunctionTest19thisIsATestFunctionFT_T_ &lt;--- this is my test function </code></pre> <p>Calling from c the address 00003840 executed the function</p> <pre><code>void (* func)() = 0x00003840; func(); // the swift function is executed </code></pre> <p>So I think that this is already work-in-progress...hoping that they will implement this functionality in the next releases :-)</p>