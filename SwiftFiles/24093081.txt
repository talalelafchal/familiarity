Compare two objects in Swift
<p>How can I compare two generic objects. Below is sample code of doing a comparison and this line elem > value throws an error saying <code>Could not find overload for '&gt;' that accepts the supplied arguments</code></p> <pre><code>func index&lt;T : Equatable&gt;(array: T[], value: T) -&gt; Int { for (index, elem) in enumerate(array) { if elem &gt; value { return index } } return array.count } </code></pre>
<p>You want Comparable, not Equatable. Equatable only has <code>==</code>.</p>
<p>From the Swift Reference:</p> <blockquote> <p>The Equatable protocol makes it possible to determine whether two values of the same type are considered to be equal.</p> <p>There is one required operator overload defined in the protocol: ==.</p> </blockquote> <p>There is no guarantee that <code>Equatable</code> objects have to implement the <code>&gt;</code> operator, which explains your error.</p> <p>Take a look at <a href="https://developer.apple.com/library/prerelease/ios/documentation/General/Reference/SwiftStandardLibraryReference/Comparable.html#//apple_ref/doc/uid/TP40014608-CH16-SW1"><code>Comparable</code></a> however. Notice that comparable only needs to overload the <code>&lt;</code> and <code>==</code> operators.</p> <p>However, if not <code>a &lt; b</code> nor is <code>a == b</code>, you can assume that <code>a &gt; b</code>.</p>