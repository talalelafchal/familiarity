Typealias with structs
<p>Is it possible to use <code>typealias</code> in <code>structs</code> or <code>classes</code>? For example:</p> <pre><code>struct Foo { typealias type = Int } </code></pre> <p>This compiles without error. However, when I use this struct:</p> <pre><code>let f = new Foo let bar: f.type </code></pre> <p>This gives me a:</p> <blockquote> <p>Use of undeclared type 'f'</p> </blockquote> <p>How can you retrieve this stored type?</p> <p>This would be useful with generic structs, for example:</p> <pre><code>struct TypeHolder&lt;T&gt; { typealias type = T } let type1 = new TypeHolder&lt;Int&gt; let fooint: type1.type </code></pre>
<p>Yes, you can do that.</p> <p>You're making two small mistakes:</p> <ul> <li>Don't use <code>new</code>.</li> <li>Access the type using the class name, not the instance.</li> </ul> <h3>Example:</h3> <pre><code>struct Foo { typealias type = Int } let f = Foo() let bar: Foo.type = 5 </code></pre>