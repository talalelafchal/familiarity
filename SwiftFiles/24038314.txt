Authenticate GameKit local player using swift
<p>Im looking to migrate a game over to swift, the only trouble I am having is with blocks/closures. It's the syntax I just don't understand, whereas in Objective C I would use:</p> <pre><code>GKLocalPlayer *localPlayer = [GKLocalPlayer localPlayer]; localPlayer.authenticateHandler = ^(UIViewController *viewController, NSError *error){ if (viewController != nil) { [self presentViewController:viewController animated:YES completion:nil]; } } </code></pre> <p>etc.etc. but I'm not sure how to go about doing the same in Swift. I know it's simple but I just can't get it to work, even after reading the Swift book and googling answers myself. I'm only a hobbyist programmer so I'm far from perfect at all this. </p> <p>Any Help would be appreciated.</p>
<p>This is how you would do it in Swift:</p> <pre><code>var localPlayer = CGLocalPlayer.localPlayer() localPlayer.authenticateHandler = {(viewController : UIViewController!, error : NSError!) -&gt; Void in //handle authentication } </code></pre> <p>The documentation for closures can be found <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html#//apple_ref/doc/uid/TP40014097-CH11-XID_117">here</a>.</p>
<p>This is how you authenticate in Swift using Xcode 6.1 +:</p> <pre><code> var localPlayer = GKLocalPlayer.localPlayer() localPlayer.authenticateHandler = {(viewController : UIViewController!, error : NSError!) -&gt; Void in if ((viewController) != nil) { self.presentViewController(viewController, animated: true, completion: nil) }else{ println((GKLocalPlayer.localPlayer().authenticated)) } } </code></pre>