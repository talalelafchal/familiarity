IIFE in Swift Language
<p>In javascript we use IIFEs a lot. Something like</p> <pre><code>(function() { ...do stuff to avoid dirtying scope. }()); </code></pre> <p>There are closures in Swift, and functions are first class objects. My question is: are there equivalent IIFEs in Swift?</p>
<p>You can achieve a similar effect using closures, sure:</p> <pre><code>func iife( f : () -&gt; () ) { f() } </code></pre> <p>And then say</p> <pre><code>iffe { // my code here } </code></pre> <p>If all you truly need is a scope, while Swift does not support the use of {..} as a "scoping operator", you can always do</p> <pre><code>if 1 == 1 { // oh, look, a scope :-) } </code></pre> <p>as a less fancy way to achieve the same effect. If you're trying to use RAII patterns, you will need to either rely on ARC to cleanup for you, or use a closure though</p>
<p>I have found uses for immediately invoked closures in swift when I want one-time execution of code to initialize a property. For instance:</p> <pre><code>myClass { //One time initialization of managedObjectContext property lazy var managedObjectContext: NSManagedObjectContext = { () -&gt; NSManagedObjectContext in let context = NSManagedObjectContext() //do all the initial setup, etc... return context }() //more stuff... } </code></pre> <p>There are other ways to achieve the same thing, but I found this to be a nice pattern.</p>
<p>The accepted answer here is misleadingâ€”there's an easier and more elegant manner in which to create an immediately-invoked closure expression (IICE). </p> <p>For all of the details and variances of syntax, see the <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html#//apple_ref/doc/uid/TP40014097-CH11-ID97" rel="nofollow noreferrer">Apple Swift Documentation for closures</a>. For a simple demo, see this:</p> <pre><code>let dateString: NSString = { date in let timestampFormatter = NSDateFormatter() timestampFormatter.dateStyle = .MediumStyle timestampFormatter.timeStyle = .MediumStyle return timestampFormatter.stringFromDate(date) }(NSDate()) </code></pre> <p><a href="https://i.stack.imgur.com/szSHU.png" rel="nofollow noreferrer"><img src="https://i.stack.imgur.com/szSHU.png" alt="enter image description here"></a></p>