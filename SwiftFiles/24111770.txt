Make a simple fade in animation in Swift?
<p>I am trying to make a simple animation in Swift. It is a fade in.</p> <p><strong>I attempted:</strong></p> <pre><code>self.myFirstLabel.alpha = 0 self.myFirstButton.alpha = 0 self.mySecondButton.alpha = 0 </code></pre> <p>Then, I have:</p> <pre><code>self.view.addSubview(myFirstLabel) self.view.addSubview(myFirstButton) self.view.addSubview(mySecondButton) </code></pre> <p>And then:</p> <pre><code>UIView.animateWithDuration(1.5, animations: { self.myFirstLabel.alpha = 1.0 self.myFirstButton.alpha = 1.0 self.mySecondButton.alpha = 1.0 }) </code></pre> <p><strong>I have all of this in my viewDidLoad function.</strong></p> <p>How do I make this work? </p>
<p>The problem is that you're trying start the animation too early in the view controller's lifecycle. In viewDidLoad, the view has just been created, and hasn't yet been added to the view hierarchy, so attempting to animate one of its subviews at this point produces bad results.</p> <p>What you really should be doing is continuing to set the alpha of the view in viewDidLoad (or where you create your views), and then waiting for the viewDidAppear: method to be called. At this point, you can start your animations without any issue.</p> <pre><code>override func viewDidAppear(animated: Bool) { super.viewDidAppear(animated) UIView.animateWithDuration(1.5, animations: { self.myFirstLabel.alpha = 1.0 self.myFirstButton.alpha = 1.0 self.mySecondButton.alpha = 1.0 }) } </code></pre>
<p><strong>0x7ffffff</strong>'s answer is ok and definitely exhaustive. </p> <p>As a plus, I suggest you to make an UIView extension, in this way: </p> <pre><code>public extension UIView { /** Fade in a view with a duration - parameter duration: custom animation duration */ func fadeIn(duration duration: NSTimeInterval = 1.0) { UIView.animateWithDuration(duration, animations: { self.alpha = 1.0 }) } /** Fade out a view with a duration - parameter duration: custom animation duration */ func fadeOut(duration duration: NSTimeInterval = 1.0) { UIView.animateWithDuration(duration, animations: { self.alpha = 0.0 }) } } </code></pre> <p>Swift-3</p> <pre><code>/** Fade in a view with a duration - parameter duration: custom animation duration */ func fadeIn(withDuration duration: TimeInterval = 1.0) { UIView.animate(withDuration: duration, animations: { self.alpha = 1.0 }) } /** Fade out a view with a duration - parameter duration: custom animation duration */ func fadeOut(withDuration duration: TimeInterval = 1.0) { UIView.animate(withDuration: duration, animations: { self.alpha = 0.0 }) } </code></pre> <p>In this way you, wherever in your code, you can:</p> <pre><code>let newImage = UIImage(named: "") newImage.alpha = 0 // or newImage.fadeOut(duration: 0.0) self.view.addSubview(newImage) ... newImage.fadeIn() </code></pre> <p>Code reuse is important!</p>