How can use CGFloat in Swift?
<pre><code>var posinonY:Float = Float(y) + Float(pipeDown.size.height) + Float(verticalPipeGap) pipeDown.position = CGPointMake(0.0, Float(posinonY)) </code></pre> <p>I get this error:</p> <blockquote> <p>"NSNumber' is not a subtype of 'CGFloat'"</p> </blockquote> <p>Why?</p> <hr> <h3>Edit:</h3> <p>CGFLoat need double type</p> <pre><code>pipeDown.position = CGPointMake(0.0, Double(posinonY)) </code></pre> <p>this is ok.</p>
<p>Use <code>CGFloat(number)</code> instead of <code>Float(number)</code></p> <pre><code>pipeDown.position = CGPointMake(0.0, CGFloat(posinonY)) </code></pre>
<p>Since CGFloat is not a Double on 32bit, it becomes hard to use CGGeometry and frameworks like CoreGraphics or SpriteKit. This library makes it a little easier and hopefully Apple takes care of it soon.</p> <p>I wrote this to help out <a href="https://github.com/seivan/ScalarArithmetic">https://github.com/seivan/ScalarArithmetic</a></p> <p>But if you want to just make it work without dependencies use var myFloat:CGFloat explicitly, and make sure to cast any Double (numbers that are type inferred) to CGFloat 2.0 is inferred to be a Double and won't play along with the CG-Structs on 32bit.</p>