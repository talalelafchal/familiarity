Swift build fails: target might include it's own product
<p>Has anyone run into this issue? I was experimenting with porting an existing obj-c app to Swift, and after quite a few successful builds the project will no longer build and immediately gives the error: Unable to run command 'CompileSwift normal' - this target might include its own product. Along with many other 'target might include it's own product errors'. </p> <p><strong>What I've Tried:</strong></p> <ul> <li>Checking Target Dependencies: There is nothing listed as a target dependency in Build Phases.</li> <li>I've tried completely deleting the product folders, and have went through all the files multiple times but with no luck. </li> <li>If I simply replace the Swift files with the old obj-c files it builds fine, no errors at all. </li> <li>Restoring to a snapshot prior to any Swift modifications results in building as normal, but even if I add a brand new Swift boilerplate file and bridging header, then click build, it fails with the same errors.</li> </ul>
<p>I had the same issue. I couldn't work out exactly what was causing it, but realised the same code would build find on a different Xcode 6 install on a different machine.</p> <p>I solved it by deleting my cached builds, etc, in <code>~/Library/Developer/Xcode</code>, while Xcode is not running. "Clean" alone from within Xcode didn't do it.</p> <p>You should find that when you re-launch Xcode your app will build fine.</p>
<p>I could reproduce the problem. In the objc-to-swift bridge header I imported a header of an objc class, <em>which</em> also imports swift-to-objc header. There was a cycle of imports and this could be the reason Xcode complaint.</p> <p>I think for now it is best to avoid such <em>cyclic</em> importing between swift and objc. You might want to check that out.</p>