MapKit in iOS 8 and Swift
<p>I'm trying to use MapKit on iOS 8 and I keep getting the error: </p> <pre><code>Trying to start MapKit location updates without prompting for location authorization. Must call -[CLLocationManager requestWhenInUseAuthorization] or -[CLLocationManager requestAlwaysAuthorization] first. </code></pre> <p>Looking it up here, I found that I had to implement <code>NSLocationWhenInUsageDescription</code> in my plist and also make a call to <code>locationManager.requestWhenInUseAuthorization()</code> but nothing happens and I still get that error in the console. What am I doing wrong?</p>
<p>In my application delegate I made an optional var for the locationManager outside the class and then set</p> <pre><code>locManager = CLLocationManager() locManager!.requestWhenInUseAuthorization() </code></pre> <p>This causes the alert view to pop up with your NSLocationWhenInUseUsageDescription or NSLocationAlwaysUsageDescription if you change it appropriately.</p> <p>Then in the view controller file I made another var outside the class to hold a local CLLocationManager. I then set</p> <pre><code>if locManager { locMan = locManager! locMan!.delegate = self } </code></pre> <p>Then you can use the delegate method</p> <pre><code>func locationManager(_manager: CLLocationManager!,didChangeAuthorizationStatus status: CLAuthorizationStatus) </code></pre> <p>which gets called when the authorisation status changes, which it does when the user responds to the pop up. Inside this you can use this bit of code to put the user location on the map</p> <pre><code>if status == CLAuthorizationStatus.AuthorizedWhenInUse { map.showsUserLocation = true } </code></pre> <p>will add the users location to the map only if you are authorised for when in use.</p>
<p>I have been bothered by that one as well, until I realized that the <code>info.plist</code> key has changed. If you had <code>NSLocationUsageDescription</code> in, you will need to change to either <code>ï¿¼NSLocationAlwaysUsageDescription</code> or <code>NSLocationWhenInUseUsageDescription</code> (set at least one to <code>YES</code>), it is now mandatory in iOS8.</p> <p>And then, Robert's code works, as it should (thanks for sharing).</p>
<p>It is NSLocationWhenInUseUsageDescription, not NSLocationWhenInUsageDescription. Most places online have the wrong key</p>