Swift Dictionary with Array Values
<p>If I declare a class property as:</p> <pre><code>var list = Dictionary&lt;String, StructType[]&gt;() </code></pre> <p>and then try to add a value from within a class method with:</p> <pre><code>var structType = StructType() list[ "A" ] = [ structType ] </code></pre> <p>I get a runtime EXC_BAD_INSTRUCTION error. However, if I declare the dictionary within the class method and add a value there is no error.</p> <p>It has something to do with the dictionary having values which are arrays. If I change the declaration to something simpler, like:</p> <pre><code>var list = Dictionary&lt;String, String&gt;() </code></pre> <p>then within the class method:</p> <pre><code>list["A"] = "some string" </code></pre> <p>works without any issues.</p> <p>Any ideas?</p> <p>UPDATE:</p> <p>I've also tried declaring:</p> <pre><code>var list = Dictionary&lt;String, String[]&gt;() </code></pre> <p>and there is no issue referencing the list within a class method.</p> <pre><code>list[ "A" ] = [ "String1", String2" ] </code></pre> <p>Also the class declaration:</p> <pre><code>var list = Dictionary&lt;String, SomeStruct&gt;() </code></pre> <p>can be referenced within a class method.</p> <p>UPDATE 2:</p> <p>The struct is defined as:</p> <pre><code>struct Firm { var name = "" } </code></pre>
<p>If you create your list and class in the following way it should work fine:</p> <pre><code>struct StructType { var myInt = 0; } class MyClass { var list = Dictionary&lt;String, StructType[]&gt;() func myFunc () { var structType = StructType() list[ "A" ] = [ structType ] } } var a = MyClass() a.myFunc() </code></pre>
<p>The following code appears to work for me in a playground.</p> <pre><code>struct StructType { } var list = [String:[StructType]]() var structType = StructType() list["A"] = [structType] </code></pre>