Passing variable length parameters into function Swift
<p>I am reading the iBook apple released with their new language. One of the experiments suggests to write a function to find the average of a set of numbers.</p> <p>Here is what I have been trying, but getting no feedback from playground.</p> <pre><code>func sumOf(numbers: Int...) -&gt; Int { var sum = 0 for number in numbers { sum += number } return sum } func calculateAverage(numbers: Int...) -&gt; Int { var sum = sumOf(numbers) return sum / numbers.count } calculateAverage(33, 44, 66, 132) </code></pre> <p>On the line <code>var sum = sumOf(numbers)</code> I get the error:</p> <p><code>Could not find an overload for supplied arguments</code> </p> <p>I am having a hard time understanding why I cannot pass the <code>numbers</code> parameter of type <code>Int...</code> into a method which takes a <code>Int...</code></p> <p>Does anyone know how I could do something similar to this?</p>
<p>The <code>numbers: Int...</code> parameter in <code>sumOf</code> is called a <em>variadic parameter</em>. That means you can pass in a variable number of that type of parameter, and everything you pass in is converted to an array of that type for you to use within the function.</p> <p>Because of that, the <code>numbers</code> parameter inside <code>calculateAverage</code> is an array, not a group of parameters like <code>sumOf</code> is expecting.</p> <p>You might want to overload <code>sumOf</code> to accept either one, like this, so your averaging function can call the appropriate version:</p> <pre><code>func sumOf(numbers: Int[]) -&gt; Int { var sum = 0 for number in numbers { sum += number } return sum } func sumOf(numbers: Int...) -&gt; Int { return sumOf(numbers) } </code></pre>
<p>Change </p> <pre><code>func sumOf(numbers: Int...) </code></pre> <p>to </p> <pre><code>func sumOf(numbers: Int[]) </code></pre> <p>You are parsing an Array when it expects a single Int</p>