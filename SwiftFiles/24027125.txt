How do I create an importable module in Swift?
<p>I have read through Apple's documentation for Swift and can find nothing about how to create modules or how to define class or stucture members as private or public. </p> <p>There are references to the import statement in the syntax but I can find no information on what it does or how to use it.</p> <p>Does anyone know where I can find this?</p>
<p>In Swift, "Modules" refers to Frameworks. Xcode now has a template for creating a framework project for both iOS and OS X.</p> <p>There is currently no way to declare methods or properties public / protected. If you would like to see this added as a feature, you can make a feature request on <a href="http://bugreport.apple.com">Apple's bug reporter</a>. It should also be noted that Apple has stated that the language could change with each release of Xcode, so it is possible that member access levels could be added before the public release.</p>
<p>Apple mentioned that private methods don't exist yet but they are in the process of being implemented. Remember that this is a newborn language and it is still being build up.</p>
<p>Also, there is a way to make a module by yourself, but it's a bit harder way.</p> <p>If you'll look at <code>xcrun swift -help</code> you may see a few options, and there are <code>-emit-module</code>, <code>-emit-library</code> and <code>-emit-object</code> which might be useful, but, probably, you should prefer official way and distribute modules via Frameworks.</p> <p>If you still want to make module on your own, you can read <a href="http://railsware.com/blog/2014/06/26/creation-of-pure-swift-module/">this guide</a> with some explanation</p>
<p>The latest Xcode 6 beta update (beta 4) bring access control to swift</p> <blockquote> <p><strong>Swift Enables Access Control</strong></p> <p>Swift access control has three access levels:</p> <ul> <li><strong>private</strong> entities can only be accessed from within the source file where they are defined. </li> <li><strong>internal</strong> entities can be accessed anywhere within the target where they are defined.!</li> <li><strong>public</strong> entities can be accessed from anywhere within the target and from any other context that imports the current target’s module.</li> </ul> </blockquote>
<p>The wording by the time of Swift 2.2 in <a href="https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html" rel="nofollow">Apple's Book</a> was:</p> <blockquote> <p>A <em>module</em> is a single unit of code distribution—a framework or application that is built and shipped as a single unit and that can be imported by another module with Swift’s import keyword.</p> <p>Each build target (such as an app bundle or framework) in Xcode is treated as a separate module in Swift. If you group together aspects of your app’s code as a stand-alone framework—perhaps to encapsulate and reuse that code across multiple applications—then everything you define within that framework will be part of a separate module when it is imported and used within an app, or when it is used within another framework.</p> </blockquote>