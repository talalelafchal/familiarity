Fatal error: use of unimplemented initializer 'init(coder:)' for class
<p>I decided to continue my remaining project with swift-language.When I added the custom class (.swift class which sub class to UIViewcontroller) in my storyboard viewcontroller and loaded the project the app crash suddenly with following error:</p> <pre><code>fatal error: use of unimplemented initializer 'init(coder:)' for class </code></pre> <p><strong>This is a code :</strong></p> <pre><code>import UIKit class TestViewController: UIViewController { init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: NSBundle?) { super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil) // Custom initialization } override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } /* // #pragma mark - Navigation // In a storyboard-based application, you will often want to do a little preparation before navigation override func prepareForSegue(segue: UIStoryboardSegue?, sender: AnyObject?) { // Get the new view controller using [segue destinationViewController]. // Pass the selected object to the new view controller. } */ } </code></pre> <p>Please suggest something,</p>
<h1>Issue</h1> <p>This is caused by the absence of the initializer <code>init(coder aDecoder: NSCoder!)</code> on the target <code>UIViewController</code>. That method is required because instantiating a <code>UIViewController</code> from a <code>UIStoryboard</code> calls it. </p> <p>To see how we initialize a <code>UIViewController</code> from a <code>UIStoryboard</code>, please take a look <a href="http://stackoverflow.com/q/24035984/2664437">here</a></p> <h3>Why is this not a problem with Objective-C?</h3> <p>Because <strong>Objective-C</strong> automatically inherits all the required <code>UIViewController</code> initializers.</p> <h3>Why doesn't Swift automatically inherit the initializers?</h3> <p><strong>Swift</strong> by default does not inherit the initializers due to safety. But it will inherit all the initializers from the superclass if all the properties have a value (or optional) and the subclass has not defined any designated initializers.</p> <hr> <h1>Solution</h1> <h2>1. First method</h2> <p>Manually implementing <code>init(coder aDecoder: NSCoder!)</code> on the target <code>UIViewController</code></p> <pre><code>init(coder aDecoder: NSCoder!) { super.init(coder: aDecoder) } </code></pre> <hr> <h2>2. Second method</h2> <p>Removing <code>init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: NSBundle?)</code> on your target <code>UIViewController</code> will inherit all of the required initializers from the superclass as <strong>Dave Wood</strong> pointed on his <a href="http://stackoverflow.com/a/24077074/2664437">answer</a> below</p> <hr>
<p>For people having the same issue with swift <code>UICollectionViewCells</code>, add the code that @3r1d suggested to your custom <code>UICollectionViewCell</code> class and not to the View Controller: </p> <pre><code>init(coder aDecoder: NSCoder!) { super.init(coder: aDecoder) } </code></pre>
<p>Another option besides @3r1d's is to instead remove the following init method from your class:</p> <pre><code>init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: NSBundle?) { super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil) // Custom initialization } </code></pre> <p>Including that init method, prevents the sub class from inheriting the <code>init(coder aDecoder: NSCoder!)</code> from its super class. By not including it, your class will inherit both.</p> <p>Note: See WWDC 2014 Session 403 "Intermediate Swift" at about the 33:50 mark for more details.</p>
<p>Rather than adding some methods for making internal mechanism work fine, i would go with defining my attributes as @lazy and initialise them right in the class scope. </p>
<p>For those needing the code in Swift:</p> <pre><code>required init(coder aDecoder: NSCoder) { super.init(coder: aDecoder) } </code></pre> <p>[Edit] This was for an older version of Swift. Possibly doesn't work anymore.</p>