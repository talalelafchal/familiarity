Swift: Downcasting to Generic Type in Function Failing
<p>I have a generic function that takes a value of any object and an in-out parameter with type T. I want to set the in-out parameter to the value of the any object by downcasting the value to type T.</p> <pre><code>func genericFunction&lt;T&gt;(value:AnyObject, inout object:T) { if let castedValue = value as? T { object = castedValue } } </code></pre> <p>When I call my function, object's value is not set because the downcast fails.</p> <pre><code>var object:String = "oldValue" var newValue:String = "newValue" genericFunction(newValue, &amp;object) println(object) // prints oldValue </code></pre>
<p>Solved by changing AnyObject to "Reflectable". Also worked with "Any". String did not actually conform to AnyObject.</p> <pre><code>func genericFunction&lt;T&gt;(value:Any, inout object:T) { if let castedValue = value as? T { object = castedValue } } </code></pre> <p>edit: Any is the type I want to use because Reflectable is meant to be used for Reflection and String happened to conform to it.</p>