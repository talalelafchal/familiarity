Getting error message when returning a boolean in Swift
<p>I have this function:</p> <pre><code>func isDrawRadiusEnough(let point: CGPoint) -&gt; Bool { let distance = sqrtf(powf(point.x-lastPointDrawn.x, 2)+powf(point.y-lastPointDrawn.y, 2)) return distance &gt; drawRadius // Error: Could not find an overload for '&gt;' that accepts the supplied arguments } </code></pre> <p><code>drawRadius</code> is an <code>Int</code> and is a property in the same class as the function. <code>lastPointDrawn</code> is a <code>CGPoint</code> and is also a property.</p> <p>When I set the <code>drawRadius</code> as a Float the error disappears, but I don't want it to be a float. In Obj-C this was valid but it is not in Swift. Anyone know a workaround?</p>
<p><code>sqrtf</code> returns a Float value.</p> <p>Since <code>drawRadius</code> is an <code>Int</code>, you need to convert it to a <code>Float</code> prior to performing the compare operation.</p> <p>Try <code>return distance &gt; Float(drawRadius)</code></p> <p>This is due to Swift's implementation of type safety. No implicit type conversions are performed.</p>