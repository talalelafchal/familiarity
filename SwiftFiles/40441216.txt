How can I do an HTTP Post before reading the JSON?
I am reading JSON from a URL and that has been working correctly. This is my code: @IBOutlet weak var ProfilesCell: UITableView! let cellspacing: CGFloat = 50 var names = [String]() var posts = [String]() var locations = [String]() var votes = [String]() var comments = [String]() override func viewDidLoad() { super.viewDidLoad() ProfilesCell.dataSource = self let url:URL = URL(string: "http://"+Connection_String+":8000/profile_view")! URLSession.shared.dataTask(with:url, completionHandler: {(data, response, error) in if error != nil { print(error) } else { do { let parsedData = try JSONSerialization.jsonObject(with: data!, options: .allowFragments) as! [String:Any] if let Profile = parsedData["Profile"] as! [AnyObject]? { for Stream in Profile { if let fullname = Stream["fullname"] as? String { self.names.append(fullname) } if let post = Stream["post"] as? String { self.posts.append(post) } if let location = Stream["location"] as? String { self.locations.append(location) } if let vote = Stream["votes"] as? String { self.votes.append(vote.appending(" Votes")) } if let comment = Stream["comments"] as? String { self.comments.append(comment.appending(" Comments")) } DispatchQueue.main.async { self.ProfilesCell.reloadData() } } } } catch let error as NSError { print(error) } } }).resume() } That code above correctly parses the JSON and the data is returned to the TableView. I now want to do an HTTP Post before reading that JSON and the parameter name is profile_id and I know that is something wrong in my code because if I do an HTML form with the parameter, things work correctly. This is the new code that I now have: @IBOutlet weak var ProfilesCell: UITableView! let cellspacing: CGFloat = 50 var names = [String]() var posts = [String]() var locations = [String]() var votes = [String]() var comments = [String]() override func viewDidLoad() { super.viewDidLoad() ProfilesCell.dataSource = self let url:URL = URL(string: "http://"+Connection_String+":8000/profile_view")! let ss = "32" var request = URLRequest(url:url) let paramString = "profile_id=\(ss)" request.httpMethod = "POST" request.cachePolicy = NSURLRequest.CachePolicy.reloadIgnoringCacheData request.httpBody = paramString.data(using: .utf8) URLSession.shared.dataTask(with:url, completionHandler: {(data, response, error) in if error != nil { print(error) } else { do { let parsedData = try JSONSerialization.jsonObject(with: data!, options: .allowFragments) as! [String:Any] if let Profile = parsedData["Profile"] as! [AnyObject]? { for Stream in Profile { if let fullname = Stream["fullname"] as? String { self.names.append(fullname) } if let post = Stream["post"] as? String { self.posts.append(post) } if let location = Stream["location"] as? String { self.locations.append(location) } if let vote = Stream["votes"] as? String { self.votes.append(vote.appending(" Votes")) } if let comment = Stream["comments"] as? String { self.comments.append(comment.appending(" Comments")) } DispatchQueue.main.async { self.ProfilesCell.reloadData() } } } } catch let error as NSError { print(error) } } }).resume() } Now with this extra code the URL is still being hit but profile_id is showing null even though I have hardcoded the number 32. I also get this message displayed: Error Domain=NSCocoaErrorDomain Code=3840 "No value." UserInfo={NSDebugDescription=No value.}