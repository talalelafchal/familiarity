How to write extensions for collection types
<pre><code>extension Array { func sum() -&gt; Int { var sum = 0 for num in self { sum += num } return sum } } [1,2,3].sum() </code></pre> <p>This code shows what I would like to do. Though i get an error on the this line: <code>sum += num</code>. The error i get is: <code>Could not find an overload for '+=' that accepts the supplied arguments</code>.</p> <p>I assume the error has something to do with the fact that Array can contain lots of different types, not just Int, so it's bugging out. But how to fix? </p>
<p>There isn't currently a way to extend only a particular type of <code>Array</code> (<code>Array&lt;Int&gt;</code> in this case). That'd be a great request to file at bugreport.apple.com</p> <p>In the meantime you can do this (not in an extension):</p> <pre><code>func sum(ints:Int[]) -&gt; Int { return ints.reduce(0, +) } </code></pre>
<p>All that's needed is an explicit cast to <code>Int</code>:</p> <pre><code>extension Array { func Sum() -&gt; Int { var sum = 0 for num in self { sum += (num as Int) } return sum } } println([1,2,3].Sum()) //6 </code></pre>