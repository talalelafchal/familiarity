How to use NSURLSessionDataTask in Swift
<p>Can someone help me? I can't find a good example for the completion syntax.</p> <pre><code>var url : NSURL = NSURL.URLWithString("https://itunes.apple.com/search?term=\(searchTerm)&amp;media=software") var request: NSURLRequest = NSURLRequest(URL:url) let config = NSURLSessionConfiguration.defaultSessionConfiguration() let session = NSURLSession.sessionWithConfiguration(config) NSURLSessionDataTask(session.dataTaskWithRequest(request, completionHandler: ((NSData!, NSURLResponse!, NSError!) -&gt; Void)?) </code></pre> <p>Thanks!</p>
<p>It's <strong>unclear what you're asking</strong>, but I noticed that you have a couple of errors in the code:</p> <ol> <li><p>You should create your <code>session</code> using <code>NSURLSession(configuration: config)</code></p></li> <li><p><code>session.dataTaskWithRequest</code> returns a <code>NSURLSessionDataTask</code>, so there's no need to wrap it inside <code>NSURLSessionDataTask()</code> (a.k.a instantiating a new <code>NSURLSessionDataTask</code> object).</p></li> <li><p>The completion handler is a closure and here's how you create that particular clousure:</p> <pre><code>{(data : NSData!, response : NSURLResponse!, error : NSError!) in // your code } </code></pre></li> </ol> <p>Here's the updated code:</p> <pre><code>let url = NSURL(string: "https://itunes.apple.com/search?term=\(searchTerm)&amp;media=software") let request = NSURLRequest(URL: url) let config = NSURLSessionConfiguration.defaultSessionConfiguration() let session = NSURLSession(configuration: config) let task = session.dataTaskWithRequest(request, completionHandler: {(data, response, error) in // notice that I can omit the types of data, response and error // your code }); // do whatever you need with the task e.g. run task.resume() </code></pre>
<p>If you have problems with completion syntax, you can create function for completion before calling dataTaskWithRequest(..) to make it clearer</p> <pre><code>func handler (data: NSData!, response: NSURLResponse!, error: NSError!) { //handle what you need } session.dataTaskWithRequest(request, completionHandler: handler) </code></pre>
<pre><code>session.dataTaskWithRequest(request, completionHandler: {(data: NSData!, response: NSURLResponse!, error: NSError!) in //code )} </code></pre> <p>Hopefully Xcode will be updated to support auto-complete for these, cause the syntax is kind of tricky, and Swift doesn't appear to support declaring the return type yet when used like this.</p>
<p>You can also use it simply by :-</p> <pre><code>let url = "api url" let nsURL = NSURL let task = NSURLSession.sharedSession().dataTaskWithURL(nsURL) { (data, response, error) in // your condition on success and failure } task.resume() </code></pre>
<p>Updated @duemonk's code for Swift 3:</p> <pre><code>do { var request = URLRequest(url: URL(string: "https://www.example.com/api/v1")!, cachePolicy: .useProtocolCachePolicy, timeoutInterval: 10.0) let config = URLSessionConfiguration.default let session = URLSession(configuration: config) let task = session.dataTask(with: request, completionHandler: {(data, response, error) in if error != nil { print(error!.localizedDescription) } else { print(response) } }) task.resume() } catch { // handle the error } </code></pre>