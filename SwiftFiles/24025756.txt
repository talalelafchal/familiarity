Set a default value for a property with defined getter and setter
<p>I have a very simple class</p> <pre><code>class SimpleClass { var simpleDescription: String { get { return self.simpleDescription } set { self.simpleDescription = newValue } } } </code></pre> <p>What is the correct way to define a default value for the <code>simpleDescription</code> variable?</p>
<p>In Swift, getters and setters are used for <em>computed properties</em> - there is no storage for the property and thus, in your case, <code>simpleDescription</code> can't be set in a setter.</p> <p>If you need a default value, use:</p> <pre><code>class SimpleClass { var simpleDescription: String = "default description" } </code></pre> <p>if you want to initialize use:</p> <pre><code>class SimpleClass { var simpleDescription: String init (desc: String) { simpleDescription = desc } } </code></pre>
<p>If what you want is to perform an action each time a variable is set or just to check if the value is correct you can use <code>Property Observers</code><br> From docs:</p> <blockquote> <p>Property observers observe and respond to changes in a property’s value. Property observers are called every time a property’s value is set, even if the new value is the same as the property’s current value.</p> </blockquote> <p>You can use them like this:</p> <pre><code>class StepCounter { var totalSteps: Int = 0 { willSet(newTotalSteps) { print("About to set totalSteps to \(newTotalSteps)") } didSet { if totalSteps &gt; oldValue { print("Added \(totalSteps - oldValue) steps") } } } } </code></pre> <p><strong>EDIT</strong> </p> <p>Looks like this doesn't work when overriding inherited properties. Here is an example of what you <strong>can't</strong> do:</p> <pre><code>class StepWihtoutCounter { var totalSteps: Int = 0 } class StepCounter: StepWihtoutCounter { override var totalSteps: Int = 0 { willSet(newTotalSteps) { print("About to set totalSteps to \(newTotalSteps)") } didSet { if totalSteps &gt; oldValue { print("Added \(totalSteps - oldValue) steps") } } } </code></pre>