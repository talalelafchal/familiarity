What's the difference between unshare() and copy()?
<p>Both <code>unshare()</code> and <code>copy()</code> are used for copying an array, but I can't see the difference.</p>
<h1>Unshare</h1> <p>As it says on <a href="https://developer.apple.com/library/prerelease/ios/documentation/swift/conceptual/swift_programming_language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-XID_109" rel="nofollow">Apple documentation</a> <code>unshare</code> is to <strong>ensure that the copy of the array is unique</strong>, so when you call <code>unshare</code> you get non shared copy of the array, that could be the same array if that was the only reference to the array.</p> <h1>Copy</h1> <p>On the other hand <code>copy</code> forces the copy of the array and returns <strong>a new array containing the copied items</strong>.</p> <p>So if you want to have 2 independent copies of the array you should use <code>copy</code> on other case you can use <code>unsare</code> to ensure the array has no other references. </p>
<p><code>unshare()</code> will do nothing if the callee is already not shared. <code>copy()</code> will copy it regardless.</p>
<p>From the <a href="https://developer.apple.com/library/prerelease/ios/documentation/swift/conceptual/swift_programming_language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-XID_109" rel="nofollow">documentation</a>:</p> <blockquote> <p>If you simply need to be sure that your reference to an array’s contents is the only reference in existence, call the unshare method, not the copy method. The unshare method does not make a copy of the array unless it is necessary to do so. The copy method always copies the array, even if it is already unshared.</p> </blockquote> <p>Basically, unshare won't do anything if it's the only reference. Copy will do it either way.</p>
<p>Per the Swift Programming Guide (pg 298):</p> <blockquote> <p>“If you simply need to be sure that your reference to an array’s contents is the only reference in existence, call the unshare method, not the copy method. The unshare method does not make a copy of the array unless it is necessary to do so. The copy method always copies the array, even if it is already unshared.”</p> </blockquote> <p>Excerpt From: Apple Inc. “The Swift Programming Language.” iBooks. <a href="https://itun.es/us/jEUH0.l" rel="nofollow">https://itun.es/us/jEUH0.l</a></p>
<p>This has changed with Beta 3. unshare() and copy() have both been removed from Array. Arrays are now copy-on-write with the default behavior being much like always calling unshare().</p> <p><a href="http://blog.human-friendly.com/swift-arrays-beta-3-hooray" rel="nofollow">http://blog.human-friendly.com/swift-arrays-beta-3-hooray</a></p>