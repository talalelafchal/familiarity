UITableView - scroll to the top
<p>In my table view I have to scroll to the top. But I cannot guarantee that the first object is going to be section 0, row 0. May be that my table view will start from section number 5.</p> <p>So I get an exception, when I call:</p> <pre><code>[mainTableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0] atScrollPosition:UITableViewScrollPositionTop animated:NO]; </code></pre> <p>Is there another way to scroll to the top of table view?</p>
<p>UITableView is a subclass of UIScrollView, so you can also use:</p> <pre><code>[mainTableView scrollRectToVisible:CGRectMake(0, 0, 1, 1) animated:YES]; </code></pre> <p>Or</p> <pre><code>[mainTableView setContentOffset:CGPointZero animated:YES]; </code></pre> <p>And in Swift:</p> <pre><code>mainTableView.setContentOffset(CGPointZero, animated:true) </code></pre> <p>And in Swift 3:</p> <pre><code>mainTableView.setContentOffset(CGPoint.zero, animated: true) </code></pre>
<p>I prefer</p> <pre><code>[mainTableView setContentOffset:CGPointZero animated:YES]; </code></pre> <p>If you have a top inset on your table view, you have to subtract it:</p> <pre><code>[mainTableView setContentOffset:CGPointMake(0.0f, -mainTableView.contentInset.top) animated:YES]; </code></pre>
<p>This code helps you to make section to scroll to top</p> <pre><code>CGRect cellRect = [tableinstance rectForSection:section]; CGPoint origin=[tableinstacne convertPoint:cellRect.origin fromView: &lt;tableistance&gt;]; [tableinstance setContentOffset:CGPointMake(0, origin.y)]; </code></pre>
<p>It's better to not use NSIndexPath (empty table), nor assume that top point is CGPointZero (content insets), that's what I use -</p> <pre><code>[tableView setContentOffset:CGPointMake(0.0f, -tableView.contentInset.top) animated:YES]; </code></pre> <p>Hope this helps.</p>
<p>If you i would like move scroll animation in the table, use this code. The scroll move to top with animation in .5 seconds.</p> <pre><code>[UIView beginAnimations:nil context:nil]; [UIView setAnimationDuration:0.5]; [UIView setAnimationCurve:UIViewAnimationCurveEaseOut]; [_tableContent scrollRectToVisible:CGRectMake(0, 0, 1, 1) animated:YES]; [UIView commitAnimations]; </code></pre>
<p>If you don't want scrolling, you can start and stop the scrolling animation as soon as you start it.</p> <pre><code> $('document').ready(function() { $("html, body").animate({ scrollTop: 0 }, 500); return true; }); </code></pre> <p>Also, to animate put values for 'x' and 'y', passing in 0,0 will scroll the page to the top left instantly.</p> <pre><code>window.scrollTo(x, y); </code></pre>
<p>Swift:</p> <pre><code>tableView.setContentOffset(CGPointZero, animated: true) </code></pre>
<p>Swift : </p> <p>if you don't have tableView header :</p> <pre><code>tableView.setContentOffset(CGPointMake(0, UIApplication.sharedApplication().statusBarFrame.height ), animated: true) </code></pre> <p>if so :</p> <pre><code>tableView.setContentOffset(CGPointMake(0, -tableViewheader.frame.height + UIApplication.sharedApplication().statusBarFrame.height ), animated: true) </code></pre>
<p>For tables that have a <code>contentInset</code>, setting the content offset to <code>CGPointZero</code> will not work. It'll scroll to the content top vs. scrolling to the table top.</p> <p>Taking content inset into account produces this instead:</p> <pre><code>[tableView setContentOffset:CGPointMake(0, -tableView.contentInset.top) animated:NO]; </code></pre>
<p>in swift </p> <p>your row = selectioncellRowNumber your section if you have = selectionNumber if you dont have set is to zero</p> <p>//UITableViewScrollPosition.Middle or Bottom or Top</p> <pre><code>var lastIndex = NSIndexPath(forRow: selectioncellRowNumber, inSection: selectionNumber) self.tableView.scrollToRowAtIndexPath(lastIndex, atScrollPosition: UITableViewScrollPosition.Middle, animated: true) </code></pre>
<p>Adding on to what's already been said, you can create a extension (Swift) or category (Objective C) to make this easier in the future:</p> <p>Swift:</p> <pre><code>extension UITableView { func scrollToTop(animated: Bool) { setContentOffset(CGPointZero, animated: animated) } } </code></pre> <p>Any time you want to scroll any given tableView to the top you can call the following code:</p> <pre><code>tableView.scrollToTop(true) </code></pre>
<p>I had to add the multiply by <code>-1 *</code> to the sum of the status bar and the navigation bar, because it was going that height off the screen,</p> <pre><code>self.tableView.setContentOffset(CGPointMake(0 , -1 * (self.navigationController!.navigationBar.height + UIApplication.sharedApplication().statusBarFrame.height) ), animated:true) </code></pre>
<p><strong>Possible Actions:</strong> </p> <p>1 </p> <pre><code>func scrollToFirstRow() { let indexPath = NSIndexPath(forRow: 0, inSection: 0) self.tableView.scrollToRowAtIndexPath(indexPath, atScrollPosition: .Top, animated: true) } </code></pre> <p>2 </p> <pre><code>func scrollToLastRow() { let indexPath = NSIndexPath(forRow: objects.count - 1, inSection: 0) self.tableView.scrollToRowAtIndexPath(indexPath, atScrollPosition: .Bottom, animated: true) } </code></pre> <p>3 </p> <pre><code>func scrollToSelectedRow() { let selectedRows = self.tableView.indexPathsForSelectedRows if let selectedRow = selectedRows?[0] as? NSIndexPath { self.tableView.scrollToRowAtIndexPath(selectedRow, atScrollPosition: .Middle, animated: true) } } </code></pre> <p>4 </p> <pre><code>func scrollToHeader() { self.tableView.scrollRectToVisible(CGRect(x: 0, y: 0, width: 1, height: 1), animated: true) } </code></pre> <p>5 </p> <pre><code>func scrollToTop(){ self.tableView.setContentOffset(CGPointMake(0, UIApplication.sharedApplication().statusBarFrame.height ), animated: true) } </code></pre> <p>Disable Scroll To Top:</p> <pre><code>func disableScrollsToTopPropertyOnAllSubviewsOf(view: UIView) { for subview in view.subviews { if let scrollView = subview as? UIScrollView { (scrollView as UIScrollView).scrollsToTop = false } self.disableScrollsToTopPropertyOnAllSubviewsOf(subview as UIView) } } </code></pre> <p>Modify and use it as per requirement.</p>