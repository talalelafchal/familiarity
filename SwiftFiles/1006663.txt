How can I set a UITableView to grouped style
<p>I have a <code>UITableViewController</code> subclass with sections. The sections are showing with the default style (no rounded corners). How can I set the TableView style to grouped in the code? I'm not using Interface Builder for this, so I need something like</p> <pre><code>[self.tableView setGroupedStyle] </code></pre> <p>I searched on Stack Overflow, but couldn't come up with an answer.</p>
<pre><code>self.tableView.style = UITableViewStyleGrouped </code></pre> <p>EDIT:</p> <p>Had assumed this was a read/write property. In that case, you can either follow Dimitris advice and set the style when you instantiate the controller, or (if you're using a XIB), you can set it via IB.</p>
<p>If i understand what you mean, you have to initialize your controller with that style. Something like:</p> <pre><code>myTVContoller = [[UITableViewController alloc] initWithStyle:UITableViewStyleGrouped]; </code></pre>
<p>You can do the following:</p> <pre><code>UITableView *myTable = [[UITableView alloc] initWithFrame:CGRectZero style:UITableViewStyleGrouped]; </code></pre>
<p>You can also try to make the separator line color clear which could give the grouped style effect:</p> <pre><code>[myTVContoller.tableView setSeparatorColor:[UIColor clearColor]]; </code></pre>
<p>I give you my solution, I am working in "XIB mode", here the code of a subclass of a UITableViewController :</p> <pre><code>-(id)initWithCoder:(NSCoder *)aDecoder { self = [super initWithStyle:UITableViewStyleGrouped]; return self; } </code></pre>
<p>You can use:</p> <pre><code>(instancetype)init { return [[YourSubclassOfTableView alloc] initWithStyle:UITableViewStyleGrouped]; } </code></pre>
<p>Below code Worked for me, I am also using UITableview class</p> <pre><code>- (id)initWithStyle:(UITableViewStyle)style { self = [super initWithStyle:UITableViewStyleGrouped]; if (self) { } return self; } </code></pre>
<p>For set grouped style in ui itself:-Select the TableView then change the "style"(in attribute inspector)) from plain to Grouped.</p>
<p><strong>Swift 2.1:</strong></p> <pre><code>let myTableViewController = UITableViewController(style: UITableViewStyle.Grouped) </code></pre>
<p>You can also do this if you want to use it on a subclass you've already created in a separate swift file (probably not 100% correct but works)</p> <pre><code>override init(style: UITableViewStyle) { super.init(style: style) UITableViewStyle.Grouped } required init?(coder aDecoder: NSCoder) { fatalError("init(coder:) has not been implemented") } </code></pre> <p>Now in you appdelegate.swift you can call:</p> <pre><code>let settingsController = SettingsViewController(style: .Grouped) </code></pre>
<p>If you have one TableView for more tables, and one of this tables is grouped and the another one plain, than you can simulate the plain style with the function from UITableViewDelegate:</p> <pre><code>override func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -&gt; CGFloat { return CGFloat.min } </code></pre>
<p>You can do this with using storyboard/XIB also</p> <ol> <li>Go To storyboard -> Select your viewController -> Select your table</li> <li>Select the "Style" property in interface-builder</li> <li>Select the "Grouped"</li> <li>Done</li> </ol>