Two table views in one view controller swift with didSelectRowAtIndexPath in swift2.0
I have two table views in one view controller. Let's assume the tables as table1 and table2. When I'm selecting a row in table1 I want to change the data in table2. How do I do that? (I cannot use segue identifiers because these tables are in one window) My Code is as follows.And In my table1 i have lessons1 array.In table2 i have Lessons2 array. So Now i want to click on the second row of table1 and display the data in resources array in table2.likewise. Can u please help me with the code.I tried as follows.But I know it's totally wrong  let Resources = ["Word Doc on Probability", "Extra Sums", "Homework","",""] let lessons1 = ["Term1", "Term2"," Term3"] let Lessons2 = ["Create a set theory", "Draw Ven Diagrams", "iOS Developer Tips"] func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int { // Return the number of items in the sample data structure. var count:Int? if tableView.tag == 3 { count = lessons1.count } else if tableView.tag == 4 { count = Lessons2.count } return count! } func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell { var cell:UITableViewCell? if tableView.tag == 3 { cell = tableView.dequeueReusableCellWithIdentifier("TextCell3", forIndexPath: indexPath) let row = indexPath.row cell!.textLabel!.text = lessons1[row] } else if tableView.tag == 4 { cell = tableView.dequeueReusableCellWithIdentifier("TextCell4", forIndexPath: indexPath) let row = indexPath.row cell!.textLabel!.text = Lessons2[row] } return cell! } func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) { tableView.deselectRowAtIndexPath(indexPath, animated: true) ////this code is wrong///// let row = indexPath.row if tableView.tag == 3 { if indexPath.row == 1 { let cell = tableView.dequeueReusableCellWithIdentifier("TextCell4", forIndexPath: indexPath) cell.textLabel!.text = Objectives[row] lessons.reloadData() } }
A tableView reflects the data that is stored in your model. When a row is selected in table1, update the data in the model for table2 and then call table2.reloadData(). @IBOutlet tableView1: UITableView! @IBOutlet tableView2: UITableView! let Resources = ["Word Doc on Probability", "Extra Sums", "Homework","",""] let lessons1 = ["Term1", "Term2"," Term3"] let Lessons2 = ["Create a set theory", "Draw Ven Diagrams", "iOS Developer Tips"] var dataForTable1 = [String]() var dataForTable2 = [String]() override func viewDidLoad() { super.viewDidLoad() dataForTable1 = lessons1 dataForTable2 = Lessons2 } func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int { // Return the number of items in the sample data structure. var count = 0 if tableView.tag == 3 { count = dataForTable1.count } else if tableView.tag == 4 { count = dataForTable2.count } return count } func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell { var cell:UITableViewCell? if tableView.tag == 3 { cell = tableView.dequeueReusableCellWithIdentifier("TextCell3", forIndexPath: indexPath) let row = indexPath.row cell!.textLabel!.text = dataForTable1[row] } else if tableView.tag == 4 { cell = tableView.dequeueReusableCellWithIdentifier("TextCell4", forIndexPath: indexPath) let row = indexPath.row cell!.textLabel!.text = dataForTable2[row] } return cell! } func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) { tableView.deselectRowAtIndexPath(indexPath, animated: true) let row = indexPath.row if tableView.tag == 3 { if indexPath.row == 1 { dataForTable2 = Resources tableView2.reloadData() } } }
func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) { tableView.deselectRowAtIndexPath(indexPath, animated: true) if tableView.tag == 3 { if indexPath.row == 1 { Lessons2 = Resources lessons.reloadData() //table2 is data reload } } }