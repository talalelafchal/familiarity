When should I use deinit?
<p>I came across a function called <code>deinit()</code> while reading the programming guide, but I'm still wondering why and when do we need to implement it since the we don't really need to manage memory.</p> <p>Regards.</p>
<p>It's not required that you implement that method, but you can use it if you need to do some action or cleanup before deallocating the object.</p> <p>The <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Deinitialization.html#//apple_ref/doc/uid/TP40014097-CH19-XID_182">Apple docs</a> include an example:</p> <pre><code>struct Bank { static var coinsInBank = 10_000 static func vendCoins(var numberOfCoinsToVend: Int) -&gt; Int { numberOfCoinsToVend = min(numberOfCoinsToVend, coinsInBank) coinsInBank -= numberOfCoinsToVend return numberOfCoinsToVend } static func receiveCoins(coins: Int) { coinsInBank += coins } } class Player { var coinsInPurse: Int init(coins: Int) { coinsInPurse = Bank.vendCoins(coins) } func winCoins(coins: Int) { coinsInPurse += Bank.vendCoins(coins) } deinit { Bank.receiveCoins(coinsInPurse) } } </code></pre> <p>So whenever the player is removed from the game, its coins are returned to the bank.</p>
<p>If your class manages a file handle or a different resource you can close that handle in deinit to ensure that it doesn't live on after the object has been freed.</p>
<p>A deinitilizer is called immediately before a class instance is deallocated ,and it is helpful when you are working with your own resources .For Example If you creat a custom class to open a file and write some data to it ,you might need close the file before the class instance is deallocated .Most important is Class definition can have at most one deintilizer per class</p>
<p>If you are creating much of operations in some object which needs to be deallocated at your pace, you can do that in <code>deinit</code></p>