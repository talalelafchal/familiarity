Can we integrate the code of swift in applications having deployment target less than iOS 7?
<p>As Swift supports the mix-match with objective c , then can we use it for building the applications having deployment target less than iOS 7. </p> <p>from <a href="https://developer.apple.com/library/prerelease/ios/documentation/swift/conceptual/buildingcocoaapps/BuildingCocoaApps.pdf">Swift Prerelease Documentation</a> Under the Basic Setup Section what i read is :</p> <pre><code>Swift is designed to provide seamless compatibility with Cocoa and Objective-C. You can use Objective-C APIs (ranging from system frameworksto your own custom code) in Swift, and you can use Swift APIsin Objective-C. This compatibility makes Swift an easy, convenient, and powerful tool to integrate into your Cocoa app development workflow. This guide covers three important aspects of this compatibility that you can use to your advantage when developing Cocoa apps: ● Interoperability lets you interface between Swift and Objective-C code, allowing you to use Swift classes in Objective-C and to take advantage of familiar Cocoa classes, patterns, and practices when writing Swift code. ● Mix and match allows you to create mixed-language apps containing both Swift and Objective-C files that can communicate with each other. ● Migration from existing Objective-C code to Swift is made easy with interoperability and mix and match, making it possible to replace parts of your Objective-C apps with the latest Swift features. </code></pre> <p><strong>So after reading this the questions arrises in my mind are</strong></p> <ol> <li>Can we use swift for the applications we are currently working on. </li> <li>If the answer is no then it will be contradict to the above explanation.</li> </ol>
<h3>Update - As per Xcode 6 Beta 4</h3> <blockquote> <h3>iOS 7 and OS X 10.9 minimum deployment target</h3> <p>The Swift compiler and Xcode now enforce a minimum deployment target of iOS 7 or OS X Mavericks. Setting an earlier deployment target results in a build failure. </p> </blockquote> <p><a href="http://adcdownload.apple.com//Developer_Tools/xcode_6_beta_4_o2p8fz/xcode_6_beta_4_release_notes.pdf" rel="nofollow">From Xcode 6 release note</a> </p> <p><strong>So my previous answer(Shown below) will not be applicable to any further swift development. Swift will no longer available for iOS6 and below</strong> </p> <hr> <p><strong>Yes you can</strong> . I have tested a simple app written completely in <code>Swift</code> in my <code>iOS6 device</code>, it works perfectly fine. As apple says Swift code is binary compatible to ObjectiveC code. It uses the same compiler and runtime to create the binary.</p> <p>So if you are not using any new APIs added as part of the iOS8 SDK or some swift specific api's (corresponding api is not available for ObjectiveC) your app will seamlessly work on <em><strong>iOS6+(Tested and working)</strong></em> even iOS5(not tested). Most of the APIs in the <code>swift</code> are just the replacement of the existing ObjectiveC api's. In fact they are same in binary. </p> <hr>
<p>No, only iOS 7+ and OS X 10.9+.</p>
<p>I am not sure but <strong>YES</strong> swift support lower version of ios in to <strong>Xcode Beta</strong> if you are check in to <code>Project--&gt;Target--&gt;General--&gt;Deplyment Info</code> for select deployment target there is drop-down with <strong>6.0,6.1,7.0,7.1 and 8.0</strong></p> <p><img src="https://i.stack.imgur.com/mtJAt.png" alt="enter image description here"></p> <p><img src="https://i.stack.imgur.com/VgDt3.png" alt="enter image description here"></p> <p>So i think yes swift support lower version. </p> <blockquote> <p>I just test the demo that created in Xcode6 with swift language select. then i open this project in to Xcode5 with deployment target 6 and that runs it means that working with lower version too.</p> </blockquote> <p>Here it is a screenshot of swift project runs in xcode5 with ios6.1 simulator:</p> <p><img src="https://i.stack.imgur.com/WxWhK.png" alt="enter image description here"></p> <p>HERE IT IS DEMO AS WELL <a href="http://www.filedropper.com/demo_5" rel="nofollow noreferrer">http://www.filedropper.com/demo_5</a></p>
<p>You can import and run swift code from Objective-C like this:</p> <pre><code>#import “ProductModuleName-Swift.h” MySwiftClass *swiftObject = [[MySwiftClass alloc] init]; [swiftObject swiftMethod]; </code></pre> <p>You can check the iOS version number with <a href="https://gist.github.com/alex-cellcity/998472" rel="nofollow">this gist</a> and only run the swift code if the version is >= 7.0. </p>
<p>Yes you can. Its not important in which language you are writing the code. Finally what matters is compiler and architecture. So, you should definitely able to deploy them to OS version less than 7.0</p>
<p>Yes, the minimum deployment target for Xcode 6 with Swift language is iOS 6.0</p>
<p>Yes you can . I have tested a simple app written completely in Swift in my iOS6 device, it works perfectly fine. As apple says Swift code is binary compatible to ObjectiveC code. It uses the same compiler and runtime to create the binary.</p> <p>So if you are not using any new APIs added as part of the iOS8 SDK or some swift specific api's (corresponding api is not available for ObjectiveC) your app will seamlessly work on iOS6+(Tested and working) even iOS5(not tested). Most of the APIs in the swift are just the replacement of the existing ObjectiveC api's. In fact they are same in binary.</p>