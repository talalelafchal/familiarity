Can Swift playgrounds see other source files in the same project?
<p>I created the most simple custom class in a separate Swift file in my project:</p> <pre><code>class Foo { init() { println("I made a foo.") } } </code></pre> <p>Then, in a playground within the same project, I tried</p> <pre><code>var x = Foo() </code></pre> <p>Xcode didn't seem to like this, and told me that 'Foo' is an unresolved identifier. I'm somewhat confused about how playgrounds fit into the rest of the project structure, since any other Swift file in my project can resolve 'Foo' without issue.</p> <p>How can I make my playground able to use custom classes I define in other Swift files in my project? I have tried naming the product module for the build target and importing that into the playground, with no success: the playground doesn't recognize the name of the product module.</p> <p>Thanks in advance for the assistance. I know it is something simple.</p>
<p>They cannot. Playgrounds are self-contained. This will hopefully change in the future.</p> <p>Edit: As of Xcode 6.3, Playgrounds can now contain supporting code. They still cannot see other code in the same project, but code can be added to the support folder of a Playground that can be used from within the playground. See <a href="https://developer.apple.com/swift/blog/?id=26" rel="nofollow">the Swift blog</a> for more info.</p>
<p>There's two ways to use your project's code in a Playground</p> <p><strong>Playground's Sources Folder</strong></p> <p>Yes, in Xcode 6.3 Beta 3 (and hopefully, into the future):</p> <blockquote> <p>Playgrounds are now represented within Xcode as a bundle with a disclosure triangle that reveals Resources and Sources folders when clicked. These folders contain additional content that is easily accessible from your playgroundâ€™s main Swift code. To see these folders, choose View > Navigators > Show Project Navigator (or just hit Command-1).</p> </blockquote> <p>Open up a new playground and hit cmd + 1 to see the left pane, then drag files into the <code>source</code> folder to use within the playground.</p> <p>Note:</p> <p>The files in the source folder are compiled to a framework which means if you want classes, functions, etc. to be accessible in the playground, they must be explicitly marked as <code>public</code>.</p> <pre><code>public class VisibleClass { } class InvisibleClass { } </code></pre> <p>Source: <a href="https://developer.apple.com/swift/blog/?id=26">release blog</a></p> <p><strong>Compile Project Into Framework</strong></p> <ol> <li>Move project to workspace if it isn't already. (File -> Save as Workspace) will do the trick</li> <li>Add framework target to your project</li> <li>Build framework</li> <li>Make sure files you want to access are added to your framework target</li> <li>Add Playground to <strong>workspace</strong> (NOT the project)</li> <li>Use <code>@testable import YourFrameworkName</code></li> <li>Access code in playground</li> </ol> <p>I made a write up here that goes into a bit more detail if you want to <a href="https://medium.com/@LogMaestro/adding-playgrounds-to-your-xcode-project-79d5ea0c7087">check it out</a>.</p>
<p>Yes. I started by just adding a class file in the Sources directory. I made everything public:</p> <ul> <li>class </li> <li>init </li> <li>members</li> </ul> <p>After much trying, nothing worked. The XCode crashed and after reopening it all worked like a charm.</p> <p><img src="https://i.stack.imgur.com/VHgPX.png" alt="Using Sources/Dna.swift in Playground"></p>