Is it double refresh call in this sample?
I am working on Start Developing iOS Apps (Swift) - Implement of Custom Control - https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/Lesson5.html#//apple_ref/doc/uid/TP40015214-CH19-SW1 I cannot post all the course here, but I will try to explain what I am wondering about with this section:  import UIKit class RatingControl: UIView { // MARK: Properties var rating = 0 { didSet { setNeedsLayout() print("didset") } } var ratingButtons = [UIButton]() let spacing = 5 let starCount = 5 // MARK: Initialization required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) let filledStarImage = UIImage(named: "filledStar") let emptyStarImage = UIImage(named: "emptyStar") for _ in 0..<starCount { let button = UIButton() button.setImage(emptyStarImage, for: UIControlState.normal) button.setImage(filledStarImage, for: .selected) button.setImage(filledStarImage, for: [.highlighted, .selected]) button.adjustsImageWhenHighlighted = false button.addTarget(self, action: #selector(RatingControl.ratingButtonTapped(_:)), for: .touchDown) ratingButtons += [button] addSubview(button) } } override func layoutSubviews() { // Set the button's width and height to a square the size of the frame's height. let buttonSize = Int(frame.size.height) var buttonFrame = CGRect(x: 0, y: 0, width: buttonSize, height: buttonSize) // Offset each button's origin by the length of the button plus spacing. for (index, button) in ratingButtons.enumerated() { buttonFrame.origin.x = CGFloat(index * (buttonSize + spacing)) button.frame = buttonFrame } updateButtonSelectionStates("layoutSubviews") } override public var intrinsicContentSize: CGSize { let buttonSize = Int(frame.size.height) let width = (buttonSize * starCount) + (spacing * (starCount - 1)) return CGSize(width: width, height: buttonSize) } // MARK: Button Action func ratingButtonTapped(_ button: UIButton) { rating = ratingButtons.index(of: button)! + 1 updateButtonSelectionStates("tap") } func updateButtonSelectionStates(_ whence: String) { print(whence) for (index, button) in ratingButtons.enumerated() { // If the index of a button is less than the rating, that button should be selected. button.isSelected = index < rating } } } There are buttons. And the action connected to the buttons. When someone tap on button - ratingButtonTapped is changing "rating" and calling updateButtonSelectionStates. But in same time there is a trigger "didset" that call layoutSubviews (through setNeedsLayout) and updateButtonSelectionStates also every time "rating" changed. And once I tap on button I get this: didset tap layoutSubviews As I undestand - there is double refreshing. First when we call updateButtonSelectionStates in ratingButtonTapped (we change isSelected status). Second we refresh all the buttons in layoutSubviews when rating trigger works. Is it right code? I delete rating trigger (there is no more setNeedsLayout) but it still works, updateButtonSelectionStates calls only one time. What for I need didSet trigger?