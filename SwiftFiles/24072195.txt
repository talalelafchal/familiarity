Declare a variable or constant that conforms to a protocol in Swift
<p>In Swift how do you declare a variable (or constant) that conforms to a protocol?</p> <p>I've tried</p> <pre><code>let whatever: protocol &lt;myProtocol&gt; </code></pre> <p>and</p> <pre><code>let whatever: myProtocol </code></pre> <p>But when setting it I get the error</p> <pre><code>Cannot convert the expression's type '()' to type 'myProtocol' </code></pre>
<p><a href="https://developer.apple.com/library/prerelease/ios/documentation/swift/conceptual/swift_programming_language/Declarations.html" rel="nofollow">From the docs</a>:</p> <blockquote> <p>Protocols are named types, and thus they can appear in all the same places in your code as other named types, as discussed in Protocols as Types. However, <strong>you canâ€™t construct an instance of a protocol, because protocols do not actually provide the implementations for the requirements they specify.</strong></p> </blockquote>
<p>There is no such necessary to do such thing, because when you declare the type of your variable (or constant), it should be known if it is conforming a protocol or not. But in case sometimes you are using legacy objc id, you may get an <code>AnyObject</code>. In that situation, you can just do a downcast to convert it as a protocol type and use it.</p> <pre><code>let whatever: AnyObject = someObj let conformProtocol = whatever as myProtocol conformProtocol.callMethod() </code></pre> <p>Or you may want to use <code>as?</code> for a safer converting.</p>