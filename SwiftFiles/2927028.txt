How do I get hour and minutes from NSDate?
<p>In my application I need to get the hour and minute separately:</p> <pre><code>NSString *currentHour=[string1 substringWithRange: NSMakeRange(0,2)]; int currentHourInNumber=[currentHour intValue]; </code></pre> <p>Consider <code>string1</code> contains <code>11:59:13 AM</code> which is coming from datepicker.</p> <p>Here if I use above code, it's okay to get hour if it's greater than 9. Else I need to change <code>NSMakeRange(0,1)</code> to get hour between 1 to 9.</p> <p>Are there any methods to get the hour, minutes, etc?</p> <p>Thanks in advance, please provide me sample code.</p>
<p><code>NSDateComponents</code>, All you need can be found here: <a href="http://developer.apple.com/mac/library/documentation/cocoa/Conceptual/DatesAndTimes/Articles/dtCalendars.html" rel="nofollow noreferrer">http://developer.apple.com/mac/library/documentation/cocoa/Conceptual/DatesAndTimes/Articles/dtCalendars.html</a></p>
<p>Use an <a href="http://developer.apple.com/iphone/library/documentation/Cocoa/Reference/Foundation/Classes/NSDateFormatter_Class/Reference/Reference.html" rel="nofollow noreferrer">NSDateFormatter</a> to convert <code>string1</code> into an <code>NSDate</code>, then get the required <a href="http://developer.apple.com/iphone/library/documentation/Cocoa/Reference/Foundation/Classes/NSDateComponents_Class/Reference/Reference.html" rel="nofollow noreferrer">NSDateComponents</a>:</p> <p>Obj-C:</p> <pre><code>NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init]; [dateFormatter setDateFormat:@"&lt;your date format goes here"]; NSDate *date = [dateFormatter dateFromString:string1]; NSCalendar *calendar = [NSCalendar currentCalendar]; NSDateComponents *components = [calendar components:(NSCalendarUnitHour | NSCalendarUnitMinute) fromDate:date]; NSInteger hour = [components hour]; NSInteger minute = [components minute]; </code></pre> <p>Swift:</p> <pre><code>let dateFormatter = NSDateFormatter() dateFormatter.dateFormat = "Your date Format" let date = dateFormatter.dateFromString(string1) let calendar = NSCalendar.currentCalendar() let comp = calendar.components([.Hour, .Minute], fromDate: date) let hour = comp.hour let minute = comp.minute </code></pre> <p>More about the <a href="http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns" rel="nofollow noreferrer">dateformat</a> is on the official unicode site</p>
<p>If you only need it for presenting as a string the following code is much easier</p> <pre><code> NSDateFormatter *formatter = [[NSDateFormatter alloc] init]; [formatter setDateFormat:@"HH:mm"]; NSString *startTimeString = [formatter stringFromDate:startTimePicker.date]; </code></pre>
<p>This seems to me to be what the question is after, no need for formatters:</p> <pre><code>NSDate *date = [NSDate date]; NSCalendar *calendar = [NSCalendar currentCalendar]; NSDateComponents *components = [calendar components:(NSCalendarUnitHour | NSCalendarUnitMinute) fromDate:date]; NSInteger hour = [components hour]; NSInteger minute = [components minute]; </code></pre>
<p>If you were to use the C library then this could be done:</p> <pre><code>time_t t; struct tm * timeinfo; time (&amp;t); timeinfo = localtime (&amp;t); NSLog(@"Hour: %d Minutes: %d", timeinfo-&gt;tm_hour, timeinfo-&gt;tm_min); </code></pre> <p>And using Swift:</p> <pre><code>var t = time_t() time(&amp;t) let x = localtime(&amp;t) println("Hour: \(x.memory.tm_hour) Minutes: \(x.memory.tm_min)") </code></pre> <p>For further guidance see: <a href="http://www.cplusplus.com/reference/ctime/localtime/" rel="nofollow">http://www.cplusplus.com/reference/ctime/localtime/</a></p>
<p>Swift 2.0 </p> <pre><code> let dateNow = NSDate() let calendar = NSCalendar.currentCalendar() let hour = calendar.component(NSCalendarUnit.Hour, fromDate: dateNow) let minute = calendar.component(NSCalendarUnit.Minute, fromDate: dateNow) print(String(hour)) print(String(minute)) </code></pre> <p>Please do take note of the cast to String in the print statement, you can easily assign that value to variables, like this:</p> <pre><code>var hoursString = String(hour) var minutesString = String(minute) </code></pre> <p>Then you can concatenate values like this:</p> <pre><code>var compoundString = "\(hour):\(minute)" print(compoundString) </code></pre>
<p>With iOS 8, Apple introduced a helper method to retrieve the <code>hour</code>, <code>minute</code>, <code>second</code> and <code>nanosecond</code> from an NSDate object.</p> <p>Objective-C</p> <pre><code>NSDate *date = [NSDate currentDate]; NSInteger hour = 0; NSInteger minute = 0; NSCalendar *currentCalendar = [NSCalendar currentCalendar]; [currentCalendar getHour:&amp;hour minute:&amp;minute second:NULL nanosecond:NULL fromDate:date]; NSLog(@"the hour is %ld and minute is %ld", (long)hour, (long)minute); </code></pre> <p>Swift</p> <pre><code>let date = NSDate() var hour = 0 var minute = 0 let calendar = NSCalendar.currentCalendar() if #available(iOS 8.0, *) { calendar.getHour(&amp;hour, minute: &amp;minute, second: nil, nanosecond: nil, fromDate: date) print("the hour is \(hour) and minute is \(minute)") } </code></pre>
<p><strong>Swift 2.0</strong> </p> <p>You can do following thing to get hours and minute from a date :</p> <pre><code>let dateFromat = NSDateFormatter() dateFromat.dateFormat = "hh:mm a" let date = dateFromat.dateFromString(string1) // In your case its string1 print(date) // you will get - 11:59 AM </code></pre>