What does it mean when XCode auto-completes Swift properties as &quot;object.?.propertyName&quot;?
<p>I have a basic understanding of how optional types work in Swift, but I'm confused as to why XCode is auto completing my optional properties when they are defined as</p> <pre><code>class Test { var _pageViewController: UIPageViewController? = nil override func viewDidLoad() { super.viewDidLoad() _pageViewController.?.setViewControllers(...) // auto completes in xcode to _pageViewController.?.setViewControllers ... </code></pre> <p>I'm confused as what the purpose of the '?' property/method on the optional type is for? It doesn't really seem to serve any purpose as far as I can tell?</p>
<p>The two dots are a bug indeed. The purpose of the <code>?</code> in Swift in that case is to test AND unwrap your optional variable at the same time. It's the same thing as doing:</p> <pre><code>if let unwrappedPageViewController = _pageViewController { unwrappedPageViewController.setViewControllers(...) } </code></pre> <p>Which means: if the variable <code>_pageViewController</code> is not nil, unwrap it and apply the subsequent actions to it.</p> <p>Hope it helps,</p>