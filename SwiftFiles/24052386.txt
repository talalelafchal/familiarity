Does Swift compile to native code?
<p>Simple question really, however there doesn't seem to be a straight answer in the <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/index.html">current developer documentation</a>.</p> <p>Does Swift compile to machine language (i.e. assembly), or does it compile to some intermediary form that then runs on a virtual machine?</p> <p>(I suspect it does, but being unfamiliar with development in Apple's world it is not clear to me like it may be to someone who is.)</p>
<p>Swift, like Objective-C, is compiled to machine code that runs on the Objective-C runtime.</p>
<p>Swift, just like objective-c compiles to native code using <a href="http://www.llvm.org" rel="nofollow">llvm</a></p> <p>A good explanation can be found in <a href="http://appleinsider.com/articles/14/06/04/apples-top-secret-swift-language-grew-from-work-to-sustain-objective-c-which-it-now-aims-to-replace" rel="nofollow">Apple's top secret Swift language grew from work to sustain Objective C, which it now aims to replace</a></p> <p>From that article, talking about Swift</p> <blockquote> <p>The compiler is optimized for performance, and the language is optimized for development, without compromising on either.</p> </blockquote>
<p>Yes, it compiles to machine language by way of llvm bit-code and, as @connor said, runs on top of the Objective-C runtime.</p>
<p>Swift not only compiles to native machine code but it has also been <a href="https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20151207/001948.html" rel="nofollow">designed specifically for it</a>. Unlike e.g. Java which has been designed specifically as a JITed language. By that I mean Swift achieves best performance with ahead of time compilation while Java benefits most from JITing.</p> <p>There are many reasons for these design choices but among them is that Swift has a much bigger scope than managed languages like Java. It is supposed to work on both desktop computers and phones with more restricted hardware. You can use Swift as a systems programming language unlike say C#, Java or Python because it has little runtime requirements and allow fairly detailed control of memory. So in theory one should be able to build an OS kernel with Swift which would be difficult with say Java.</p>