Game Center not authenticating using Swift
<p>I'm trying to authenticate the local player using swift, but every time I get a false value for the .authenticated property. Here is the code I'm using, it is called by the main view controller when the app starts.</p> <pre><code>func authenticateLocalPlayer(){ var localPlayer = GKLocalPlayer() localPlayer.authenticateHandler = {(viewController, error) -&gt; Void in if viewController { self.presentViewController(viewController, animated: true, completion: nil) }else{ println((GKLocalPlayer().authenticated)) } } } </code></pre> <p>It brings up the log in view just fine, but when I enter a test account login, it just returns the <code>GKLocalPlayer().authenticated</code>as false. The bundle identifier in iTunes Connect and the info.plist are exactly the same, as is the version and the app name. Everything is enabled for Game Center on iTunes Connect and in Xcode, but I have a feeling it's not a coding error, it's a setup error in the app record somewhere but I can't for the life of me find where.</p> <p>After further tinkering, I'm getting this error:</p> <p>Error Domain=GKErrorDomain Code=15 "The requested operation could not be completed because this application is not recognized by Game Center." UserInfo=0x17006b300 {NSLocalizedDescription=The requested operation could not be completed because this application is not recognized by Game Center.}</p> <p>I have no idea why this is the case, the bundle ID, name and versions all match...</p> <p>Any help would be greatly appreciated.</p>
<p>This issue has been resolved by Apple - just call:</p> <pre><code>GKLocalPlayer.localPlayer() </code></pre> <p>Previously, the issue was that <code>GKLocalPlayer()</code> does not return the GKLocalPlayer singleton, but instead returns a new GKLocalPlayer instance.</p> <p>If you were on the Xcode 6 BETA, you could add a C function or Objective-C method that returns the real GKLocalPlayer singleton, then use this in Swift. This is the gist of my workaround (with bad naming conventions):</p> <p>In an Objective-C header:</p> <pre><code>GKLocalPlayer *getLocalPlayer(void); </code></pre> <p>In an Objective-C implementation:</p> <pre><code>GKLocalPlayer *getLocalPlayer(void) { return [GKLocalPlayer localPlayer]; } </code></pre> <p>In your bridging header:</p> <pre><code>#import "ThatHeader.h" </code></pre> <p>Then whenever you need to access the GKLocalPlayer singleton in Swift, you can just use <code>getLocalPlayer()</code> instead of <code>GKLocalPlayer()</code>. It's probably a better idea to stick that in an method of a GKLocalPlayer category.</p> <p>However, this is no longer necessary as detailed above.</p>
<p>Even with Xcode 6 Beta 6, on a device using iOS 8 beta 5, making GKLocalPlayer.localPlayer() available, I was still getting the error:</p> <blockquote> <p>"NSLocalizedDescription=The requested operation could not be completed because this application is not recognized by Game Centre"</p> </blockquote> <p>The <strong>solution</strong> (discovered through Apple's Dev forum) was to go to "Settings" on the device, and then into "Game Centre" and enable "Sandbox" under the developer section.</p>
<p>You can use that, I create a simple class for iOS game center in github <strong>Easy Class Game Center Swift</strong></p> <p><a href="https://github.com/DaRkD0G/Easy-Game-Center-Swift" rel="nofollow">https://github.com/DaRkD0G/Easy-Game-Center-Swift</a></p> <p>Message from France, Merry Christmas</p>