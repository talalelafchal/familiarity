Sending emails - MFMailComposeResult
<p>I'm trying to migrate one of my applications from Obj-C to Swift and I've a problem with the emails management.<br /> I searched by hours but I did not found how solve this problem.<br /> Basically, I'm trying to migrate the <code>func mailComposeController(controller: MFMailComposeViewController!, didFinishWithResult result: MFMailComposeResult, error: NSError!)</code> function.</p> <p>The problem is that no options, inside the switch, are valid.</p> <pre><code>func mailComposeController(controller: MFMailComposeViewController!, didFinishWithResult result: MFMailComposeResult, error: NSError!) { switch result.value { case CUnsignedInt(MFMailComposeResultCancelled): var alert = UIAlertController( title: NSLocalizedString("sendingStatus", tableName: "LocalizationFile", comment:"sendingStatus"), message: NSLocalizedString("emailCancelledByUser", tableName: "LocalizationFile", comment:"emailCancelledByUser"), preferredStyle: UIAlertControllerStyle.Alert) self.presentViewController(alert, animated: true, completion: nil) case MFMailComposeResult(MFMailComposeResultFailed): var alert = UIAlertController( title: NSLocalizedString("sendingStatus", tableName: "LocalizationFile", comment:"sendingStatus"), message: NSLocalizedString("emailSentFailed", tableName: "LocalizationFile", comment:"emailSentFailed"), preferredStyle: UIAlertControllerStyle.Alert) self.presentViewController(alert, animated: true, completion: nil) case MFMailComposeResultSaved: var alert = UIAlertController( title: NSLocalizedString("sendingStatus", tableName: "LocalizationFile", comment:"sendingStatus"), message: NSLocalizedString("emailSaved", tableName: "LocalizationFile", comment:"emailSaved"), preferredStyle: UIAlertControllerStyle.Alert) self.presentViewController(alert, animated: true, completion: nil) default: var alert = UIAlertController( title: NSLocalizedString("sendingStatus", tableName: "LocalizationFile", comment:"sendingStatus"), message: NSLocalizedString("emailNotSent", tableName: "LocalizationFile", comment:"emailNotSent"), preferredStyle: UIAlertControllerStyle.Alert) self.presentViewController(alert, animated: true, completion: nil) } } </code></pre> <p><img src="https://i.stack.imgur.com/5pr23.png" alt="enter image description here"></p>
<p>Don't forget that you can also use <code>.rawValue</code> (<code>.value</code> in older versions of Swift) on the specific result types you're comparing your variable result to:</p> <pre><code> var result:MFMailComposeResult = MFMailComposeResultCancelled switch(result.value) { // &lt;-- Here, note .value is being used case MFMailComposeResultCancelled.value: // &lt;-- And here as well! print("Cancelled") default: print("Default") } </code></pre>
<p><strong>Tested and works 100%</strong> In swift 3.0 this is changed and now you should make something like this:</p> <pre><code>func mailComposeController(controller: MFMailComposeViewController, didFinishWithResult result: MFMailComposeResult, error: NSError?) { switch result.rawValue { case MFMailComposeResult.Cancelled.rawValue: print("Mail cancelled") case MFMailComposeResult.Saved.rawValue: print("Mail saved") case MFMailComposeResult.Sent.rawValue: print("Mail sent") case MFMailComposeResult.Failed.rawValue: print("Mail sent failure: %@", [error!.localizedDescription]) default: break } // Dismiss the mail compose view controller. controller.dismissViewControllerAnimated(true, completion: nil) } </code></pre>