Can't unwrap Optional.None error in swift
<p>When the value is passed for UILabel the error appears : <pre>Can't unwrap Optional.None</pre></p> <p>source code: <pre> @IBOutlet var rowLabel : UILabel<br> var row: String? { didSet { // Update the view. println(row) rowLabel.text = row } } </pre> Also error appears in label in the template for UITable when I appropriate new meaning: <pre> let myCell : Cell = Cell(style: UITableViewCellStyle.Subtitle, reuseIdentifier: "cell") myCell.myLabel.text = "(indexPath.row)" </pre></p>
<p><code>row</code> is an <code>Optional</code> and it can be <code>nil</code>, i.e. <code>Optional.None</code>, so you need to unwrap it before assignment.</p> <p>If you don't, I guess the runtime will try to unwrap it anyway, but it will fail with that error whenever a <code>nil</code> value is encountered.</p> <p>Something like this should be safe</p> <pre><code>if let r = row { rowLabel.text = r } </code></pre> <p>If <code>row</code> is <code>nil</code>, it will never be assigned.</p>
<p>You must use newValue in willSet block, and oldValue in didSet block</p> <p>example:</p> <pre><code>class foo { var row: String? { willSet { println("will set value:") println(newValue) } didSet { println("did change value:") println(oldValue) } } } var bar = foo() println("First time setter called") bar.row = "First value" println("Second time setter called") bar.row = "Second value" </code></pre> <p>output: </p> <pre><code>First time setter called will set value: First value did change value: nil Second time setter called will set value: Second value did change value: First value </code></pre>