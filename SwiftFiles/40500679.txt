Zoom MapView to show annotations across 180th meridian
I have a MapView with <5 annotations. When the map loads, I want to zoom in to center the map on these annotations, like this. However, the linked method doesn't work when the annotations are spread across the 180th meridian (where longitude wraps from -180 to +180). How can I robustly zoom to the annotations even if they are clustered around the prime meridian? For example, if I have x(0,179) and y(0,-179) then I'd want a containing rect with a width of two degrees longitude, not 358.
MapKit for iOS actually has a built-in function in MKMapView which does this: showAnnotations(annotations: [MKAnnotation], animated: Bool) However, this function doesn't offer control over the zoom level, so I still had to make my own function. Here is the pseudocode: zoomToAnnotations(annotations, zoomLimit) { // calculate the midpoint as the average latitude and longitude average_latitude = mean(a.coordinate.latitude for a in annotations) average_longitude = atan2(mean(sin(a.coordinate.longitude) for a in annotations), mean(cos(a.coordinate.longitude) for a in annotations)) // be careful with degrees and radians in real code regular_midpoint = coordinate(average_latitude, average_longitude) // subtract 180 from longitude for the midpoint of the region crossing the meridian meridian_midpoint = coordinate(average_latitude, average_longitude - 180.0) if (meridian_midpoint.longitude < -180) { meridian_midpoint.longitude += 360.0 } // work out which region will be smaller and center map there meridian_sum = sum(a.coordinate.distance(meridian_midpoint) for a in annotations) regular_sum = sum(a.coordinate.distance(regular_midpoint) for a in annotations) regular_max_distance = max(a.coordinate.distance(regular_midpoint) for a in annotations) if meridian_sum < regular_sum { meridian_max_distance = max(a.coordinate.distance(meridian_midpoint) for a in annotations) centerMapWithRadius(meridian_midpoint, max(zoomLimit, meridian_max_distance)) } else { regular_max_distance = max(a.coordinate.distance(regular_midpoint) for a in annotations) centerMapWithRadius(regular_midpoint, max(zoomLimit, regular_max_distance)) } } This method isn't perfect , as it centers on the mean of the points instead of having the furthest points equal distances from the edge.