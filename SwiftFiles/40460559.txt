CLLocationManager in async request
I've searched, but actually didn't find any useful solution. My code is public func requestWithLocation(_ httpmethod: Alamofire.HTTPMethod, URL: String, parameters: [String: AnyObject]?, completionHandler: @escaping CompletionHandler) -> (){ var header: HTTPHeaders = [:] var location: [String: Double] = [:] if (CLLocationManager.authorizationStatus() == .authorizedWhenInUse || CLLocationManager.authorizationStatus() == .authorizedAlways) && CLLocationManager().location != nil { location = [ "lon" : CLLocationManager().location!.coordinate.longitude, "lat" : CLLocationManager().location!.coordinate.latitude ] } if defaults.value(forKey: "token") != nil { header["Authorization"] = defaults.string(forKey: "token")! } var parametersWithLocation = parameters ?? [:] parametersWithLocation["location"] = location as AnyObject Alamofire.request("\(serverAddress)/\(URL)", method: httpmethod, parameters: parametersWithLocation, encoding: JSONEncoding.default, headers: header).validate().responseJSON { response in var data: JSON? if response.result.value != nil { data = JSON(response.result.value!) } if defaults.value(forKey: "token") == nil { defaults.setValue(response.response?.allHeaderFields["Authorization"], forKey: "token") defaults.synchronize() } else { if let header = response.response?.allHeaderFields["Authorization"] as? String { if defaults.string(forKey: "token")! != header { defaults.setValue(header, forKey: "token") defaults.synchronize() } } } completionHandler(data, response.result.error as NSError?) } } I am getting the warning, that CLLocationManager isn't running in active thread, but in my case it shouldn't. How should I get rid of this warning? Maybe there is a way to get user's location without CLLocationManager?