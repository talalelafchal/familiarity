Types conforming to multiple protocols in swift
<p>I have an Objective-C variable that conforms to multiple protocols.</p> <pre><code>id &lt;NSObject, NSCopying, NSCoding&gt; identityToken; </code></pre> <p>How would I represent this type in Swift?</p>
<p>This should work:</p> <pre><code>var identityToken: NSObjectProtocol &amp; NSCopying &amp; NSCoding </code></pre> <p>Note you have to use NSObjectProtocol instead of NSObject in swift.</p> <p><strong>Here are some additional examples:</strong></p> <p>Array of objects conforming to multiple protocols:</p> <pre><code>var array: [NSObjectProtocol &amp; NSCopying &amp; NSCoding] </code></pre> <p>Function with a parameter that conforms to multiple protocols:</p> <pre><code>func foo(param: NSObjectProtocol &amp; NSCopying &amp; NSCoding) { } </code></pre> <p>For Swift version before 3.0, use:</p> <pre><code>var identityToken: protocol&lt;NSObjectProtocol, NSCopying, NSCoding&gt; </code></pre>
<p>The above answer from conner is correct, however you often should implement a separate protocol that itself inherits from the other protocols, and allows you more flexibility, should you want to add additional protocol methods later or change the top level protocols.</p> <pre><code>internal protocol MyOtherProtocol : NSObjectProtocol, NSCopying, NSCoding { func someOtherNecessaryMethod() } </code></pre> <p>Then utilized:</p> <pre><code>var identityToken : MyOtherProtocol </code></pre>
<p>Swift 3</p> <pre><code>var idToken: NSObjectProtocol &amp; NSCopying &amp; NSCoding func foo(_ delegateAndDataSource: UICollectionViewDelegate &amp; UICollectionViewDataSource) { ... } </code></pre>