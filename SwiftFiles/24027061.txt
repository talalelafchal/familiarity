Converting string to float in Apple Swift yields value not identical to module error
<p>I can print out my string <code>systemVersion</code> with <code>println</code> and I get:</p> <blockquote> <p>8.0</p> </blockquote> <p>But when I try to convert it using:</p> <pre><code>float(systemVersion) </code></pre> <p>I get two errors saying:</p> <blockquote> <p>Expected module member name after module name </p> </blockquote> <p>&amp;</p> <blockquote> <p>(@lvalue string) -> ST1 is not identical to module </p> </blockquote> <p>What could that possibly mean?</p>
<p>You should use <code>systemVersion.bridgeToObjectiveC().floatValue</code>, or <code>(systemVersion as NSString).floatValue</code></p>
<p>Being from a country where the decimal indicator is a "," and not a ".", I immediately smelled something.</p> <p>Here, if you do this in a playground:</p> <pre><code>let systemVersion = "8.0" Float(systemVersion) </code></pre> <p>you'll get a healthy float with the right value (notice the comma).</p> <p>However, if you do the same with a dot:</p> <pre><code>let systemVersion = "8,0" Float(systemVersion) </code></pre> <p>you'll get an error (could not find an overload for 'init' that accepts the supplied arguments). </p> <p>Could your problem be related to the decimal format in your country? Bye,</p>