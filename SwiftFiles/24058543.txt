Alert that can work on iOS 7 and iOS 8
<p>I'm getting dyld: Symbol not found: _OBJC_CLASS_$_UIAlertAction when I'm trying to get this monstrosity to run. </p> <p>How do I weaklink 8.0 stuff?</p> <pre><code>var device : UIDevice = UIDevice.currentDevice()!; var systemVersion = device.systemVersion; var iosVerion : Float = systemVersion.bridgeToObjectiveC().floatValue; if(iosVerion &lt; 8.0) { let alert = UIAlertView() alert.title = "Noop" alert.message = "Nothing to verify" alert.addButtonWithTitle("Click") alert.show() } else { var alert : UIAlertController? = UIAlertController(title: "Noop", message: "Nothing to verify", preferredStyle: UIAlertControllerStyle.Alert) if alert { let actionStyle : UIAlertActionStyle? = UIAlertActionStyle.Default; var alertAction : UIAlertAction? = UIAlertAction(title: "Click", style: actionStyle!, handler: nil) if(alertAction) { alert!.addAction(alertAction) self.presentViewController(alert, animated: true, completion: nil) } } } return; </code></pre> <p>Resolved: UIKit had to be marked Optional rather than Required. Simplified version is now:</p> <pre><code>var device : UIDevice = UIDevice.currentDevice()!; var systemVersion = device.systemVersion; var iosVerion : Float = systemVersion.bridgeToObjectiveC().floatValue; if(iosVerion &lt; 8.0) { let alert = UIAlertView() alert.title = "Noop" alert.message = "Nothing to verify" alert.addButtonWithTitle("Click") alert.show() } else { var alert : UIAlertController = UIAlertController(title: "Noop", message: "Nothing to verify", preferredStyle: UIAlertControllerStyle.Alert) alert.addAction(UIAlertAction(title: "Click", style:.Default, handler: nil)) self.presentViewController(alert, animated: true, completion: nil) } </code></pre>
<p>In Xcode 6 beta 5, there is nothing in Link Phases -> Link Binary With Libraries since Swift links frameworks implicitly. In this case you need to add it manually there and mark optional then.</p> <p>Also instead of checking for system version explicitly you can just check for UIAlertController availability </p> <pre><code>if nil != NSClassFromString("UIAlertController") { //show alertcontroller ... } else { //show alertview ... } </code></pre>
<ul> <li><p>Explicitly add UIKit in the "Link Binary With Libraries" section of your project's build phases.</p></li> <li><p>You can test for the existence of UIAlertController like this:</p> <pre><code>if NSClassFromString("UIAlertController") != nil { // Use it } else { // Fall back } </code></pre></li> <li><p>I wrote a wrapper that works on both iOS 7 and iOS 8. You can <a href="https://gist.github.com/Sidnicious/62ad92fda13daae8c081">find it here</a>. It takes a view controller followed by a bunch of optional arguments and any number of buttons:</p> <pre><code>showAlert(self, style: .ActionSheet, sourceView: cell, completion: { tableView.deselectRowAtIndexPath(indexPath, animated: true) }, (.Default, "Send clipboard", { if someCondition { // completion must be specified because of a Swift bug (rdar://18041904) showAlert(self, title: "Nothing to send", message: "The clipboard is empty.", completion: nil, (.Cancel, "OK", nil) ) } }), (.Cancel, "Cancel", nil) ) </code></pre></li> </ul>
<p>Try below code for Objective C. It works fine for both iOS 8 and below version.</p> <pre><code>if (IS_OS_8_OR_LATER) { UIAlertController *alertVC = [UIAlertController alertControllerWithTitle:title message:msg preferredStyle:UIAlertControllerStyleAlert]; UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleCancel handler:^(UIAlertAction *action) { }]; [alertVC addAction:cancelAction]; [[[[[UIApplication sharedApplication] windows] objectAtIndex:0] rootViewController] presentViewController:alertVC animated:YES completion:^{ }]; } else{ UIAlertView *alert = [[UIAlertView alloc] initWithTitle:title message:msg delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil]; [alert show]; } </code></pre>