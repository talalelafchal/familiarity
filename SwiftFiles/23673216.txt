'NSUnknownKeyException', reason: '[&lt;ViewController 0x8a45930&gt; setValue:forUndefinedKey:]:
<p>I am getting this error when I run my first "sqlite" app on iPhone simulator. xcode says no issue but when i am clicking on my app it throws error in debug window. i have placed all necessary code here please help me to connect "sqlite" and remove these errors.</p> <p>The error is as follows:</p> <pre><code>Terminating app due to uncaught exception 'NSUnknownKeyException', reason: '[&lt;ViewController 0x8a45930&gt; setValue:forUndefinedKey:]: this class is not key value coding-compliant for the key departmentbox.' *** First throw call stack: (0x2091012 0x119ee7e 0x2119fb1 0xc4b711 0xbccec8 0xbcc9b7 0xbf7428 0x3030cc 0x11b2663 0x208c45a 0x301bcf 0x1c6e37 0x1c7418 0x1c7648 0x1c7882 0x116a25 0x116dbf 0x116f55 0x11ff67 0xe3fcc 0xe4fab 0xf6315 0xf724b 0xe8cf8 0x1fecdf9 0x1fecad0 0x2006bf5 0x2006962 0x2037bb6 0x2036f44 0x2036e1b 0xe47da 0xe665c 0x233d 0x2265) libc++abi.dylib: terminate called throwing an exception (lldb) </code></pre> <p>DBManager.m:</p> <pre><code>// // DBManager.m // sqlite // // Created by Techinfiniti on 14/05/14. // Copyright (c) 2014 Techinfiniti. All rights reserved. // #import "DBManager.h" #import &lt;sqlite3.h&gt; static DBManager *sharedInstance = nil; static sqlite3 *database = nil; static sqlite3_stmt *statement = nil; @implementation DBManager +(DBManager*)getSharedInstance{ if(!sharedInstance){ sharedInstance = [[super allocWithZone:NULL]init]; [sharedInstance createDB]; } return sharedInstance; } -(BOOL)createDB{ NSString *docsDir; NSArray *dirPaths; dirPaths = NSSearchPathForDirectoriesInDomains(NSDocumentationDirectory, NSUserDomainMask, YES); docsDir = dirPaths[0]; databasePath = [[NSString alloc] initWithString:[docsDir stringByAppendingPathComponent:@"student.db"]]; BOOL isSuccess = YES; NSFileManager *filemgr = [NSFileManager defaultManager]; if([filemgr fileExistsAtPath:databasePath]== NO) { const char *dbpath = [databasePath UTF8String]; if(sqlite3_open(dbpath,&amp;database)== SQLITE_OK ) { char *errMsg; const char *sql_stmt = "create table if not exists studentsDetail (regno integer primary key, name text, department text, year text)"; if(sqlite3_exec(database,sql_stmt,NULL,NULL,&amp;errMsg)!= SQLITE_OK) { isSuccess = NO; NSLog(@"failed to open create table"); } sqlite3_close(database); return isSuccess; } else{ isSuccess = NO; NSLog(@"Failed to open/create database"); } }return isSuccess; } -(BOOL)saveData:(NSString*)registerNumber name:(NSString*)name department:(NSString *)department year:(NSString *)year; { const char *dbpath = [databasePath UTF8String]; if(sqlite3_open(dbpath,&amp;database)== SQLITE_OK ) { NSString *insertSQL = [NSString stringWithFormat:@"insert into studentDetail(regno,name,department,year)values(\"%d\",\"%@\",\"%@\",\"%@\")",[registerNumber integerValue],name,department,year]; const char *insert_stmt = [insertSQL UTF8String]; sqlite3_prepare_v2(database, insert_stmt,-1,&amp;statement,NULL); if(sqlite3_step(statement) == SQLITE_DONE) { return YES; } else{ return NO; } sqlite3_reset(statement); } return NO; } -(NSArray*) findByRegisterNumber:(NSString *)registerNumber { const char *dbpath = [databasePath UTF8String]; if(sqlite3_open(dbpath,&amp;database)== SQLITE_OK) { NSString *querySQL = [NSString stringWithFormat:@"select name, department,year from studentDetail where regno=\"%@\"",registerNumber]; const char *query_stmt = [querySQL UTF8String]; NSMutableArray *resultArray = [[NSMutableArray alloc]init]; if(sqlite3_prepare_v2(database,query_stmt,-1,&amp;statement,NULL)== SQLITE_OK) { if(sqlite3_step(statement) == SQLITE_ROW) { NSString *name = [[NSString alloc] initWithUTF8String:(const char *) sqlite3_column_text(statement, 0)]; [resultArray addObject:name]; NSString *department = [[NSString alloc]initWithUTF8String:(const char*) sqlite3_column_text(statement,1)]; [resultArray addObject:department]; return resultArray; NSString *year = [[NSString alloc]initWithUTF8String:(const char*) sqlite3_column_text(statement,2)]; [resultArray addObject:year]; return resultArray; } else{ NSLog(@"Not Found"); return nil; } sqlite3_reset(statement); } } return nil; } @end </code></pre> <p>ViewController.h:</p> <pre><code>// // ViewController.h // sqlite // // Created by Techinfiniti on 14/05/14. // Copyright (c) 2014 Techinfiniti. All rights reserved. // #import &lt;UIKit/UIKit.h&gt; #import "DBManager.h" @interface ViewController : UIViewController&lt;UITextFieldDelegate&gt; { IBOutlet UITextField *regNoTextField; IBOutlet UITextField *nameTextField; IBOutlet UITextField *departmentTextField; IBOutlet UITextField *yearTextField; IBOutlet UITextField *findByRegisterNumberTextField; IBOutlet UIScrollView *myScrollView; } -(IBAction)saveData:(id)sender; -(IBAction)findData:(id)sender; /* - (IBAction)find:(id)sender; - (IBAction)save:(id)sender; @property (weak, nonatomic) IBOutlet UITextField *findbox; @property (weak, nonatomic) IBOutlet UITextField *regnobox; @property (weak, nonatomic) IBOutlet UITextField *namebox; @property (weak, nonatomic) IBOutlet UITextField *departmentbox; @property (weak, nonatomic) IBOutlet UITextField *year; */ @end </code></pre> <p>ViewController.m:</p> <pre><code>// // ViewController.m // sqlite // // Created by Techinfiniti on 14/05/14. // Copyright (c) 2014 Techinfiniti. All rights reserved. // #import "ViewController.h" @interface ViewController () @end @implementation ViewController - (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil { self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]; if(self) { } return self; } - (void)viewDidLoad { [super viewDidLoad]; // Do any additional setup after loading the view, typically from a nib. } - (void)didReceiveMemoryWarning { [super didReceiveMemoryWarning]; // Dispose of any resources that can be recreated. } /* - (IBAction)find:(id)sender { } - (IBAction)save:(id)sender { } */ -(IBAction)saveData:(id)sender{ BOOL success = NO; NSString *alertString = @"Data Insertion falied"; if(regNoTextField.text.length&gt;0 &amp;&amp; yearTextField.text.length&gt;0 &amp;&amp; departmentTextField.text.length&gt;0 &amp;&amp; yearTextField.text.length&gt;0) { success = [[DBManager getSharedInstance]saveData:regNoTextField.text name:nameTextField.text department:departmentTextField.text year:yearTextField.text]; } else { alertString = @"Enter all fields"; } if(success == NO) { UIAlertView *alert = [[UIAlertView alloc]initWithTitle:alertString message:nil delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil]; [alert show]; } } -(IBAction)findData:(id)sender{ NSArray *data = [[DBManager getSharedInstance]findByRegisterNumber:findByRegisterNumberTextField.text]; if(data == nil) { UIAlertView *alert = [[UIAlertView alloc]initWithTitle: @"Data Not Found" message:nil delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil]; [alert show]; regNoTextField.text = @""; nameTextField.text = @""; departmentTextField.text = @""; yearTextField.text = @""; } else{ regNoTextField.text = findByRegisterNumberTextField.text; nameTextField.text = [data objectAtIndex:0]; departmentTextField.text = [data objectAtIndex:1]; yearTextField.text = [data objectAtIndex:2]; } } #pragma mark - Text field delegate -(void)textFieldDidBeginEditing:(UITextField *)textField{ [myScrollView setFrame:CGRectMake(10,50,300,200)]; } -(BOOL) textFieldShouldReturn:(UITextField *)textField { [textField resignFirstResponder]; return YES; } @end </code></pre>
<p>that's because you renamed you property <code>departmentbox</code> into <code>departmentTextField</code> on <code>ViewController</code> but apparently forgot to update storyboard</p> <p>Besides, there is no need to use ivars, declare private properties if you don't need to expose your outlets in <code>.h</code> file:</p> <p>in your <code>.m</code> declare</p> <pre><code>@interface UIViewController () @property (nonatomic, weak) IBOutlet UITextField *regNoTextField; // etc @end </code></pre>
<p>you unused the property <code>departmentbox</code> into <code>departmentTextField</code> on your <code>ViewController</code> but you didn't to remove the <code>departmentbox</code> from storyboard, </p> <p>go to your connection inspector and remove the unused key <code>department box</code>, and then build your app</p> <p><img src="https://i.stack.imgur.com/fOQvJ.png" alt="enter image description here"></p> <p>here the <code>department box</code> is shown in the <code>Reference Outlet</code> just removed the <code>department box</code> and build your app</p>
<p>This error often comes when an unknown property is associated in your xib file.</p> <p>It may happen if you rename a property after the xib association.</p> <p>Here, the associated property was <strong>departmentbox</strong>, but renamed as <strong>departmentTextField</strong></p>
<p>Perhaps you had declared an iVar named "departmentbox" in your view controller, created a connection in xib file to that iVar and later on you deleted/renamed this iVar but forgot to delete the connection created in xib file. Can you check the xib file of your view controller class and see if there is any connection to departmentBox. If you see that (with a little warning icon showing on the right of outlet connection in xib), just remove that connection and it should be fine.</p>
<p>You have connected the UITextField in IB with "departmentbox".</p> <pre><code>@property (weak, nonatomic) IBOutlet UITextField *departmentbox; </code></pre> <p>But later you have commented the above lines in your view controller.</p> <p>When you try to run the app,IB is looking for the "departmentbox" in viewcontroller. That causes the crash.</p> <p>disconnect the "departmentbox" in IB will resolve the issue.</p>