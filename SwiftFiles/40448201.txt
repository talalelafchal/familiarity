Getting only few properties of a table in CoreData ios swift3
I have coreData entities defined as In TTFinds @nonobjc public class func fetchRequest() -> NSFetchRequest<TTFinds> { return NSFetchRequest<TTFinds>(entityName: "TTFinds"); } I am trying to get TTFinds list as  let request: NSFetchRequest<TTFinds> = TTFinds.fetchRequest() do { let result = try appDel.persistentContainer.viewContext.fetch(request) As can be seen TTFinds gets its parent TTArea object. However i want to get only few columns. Let's say name and creationDate only.How can it be done? I have tried let request: NSFetchRequest<TTFinds> = TTFinds.fetchRequest() request.propertiesToFetch = NSArray.init(objects: "name", "creationDate", "image", "latitude", "longitude", "area.name") as? [Any]; However area.name gives errors.
Forget propertiesToFetch and just fetch the entire object. First, you can only retrieve selective attributes if you use a result type of dictionary. It will make your code more cumbersome and lengthy, without any gain in efficiency. Second, if you just fetch the objects, even if there are a lot of them, Core Data will do all kinds of optimizations "under the hood" and just fetch what it needs. This is triggered by simply accessing the properties you need. Thus, assuming your purpose for fetching only some properties is to conserve memory or reduce performance bottlenecks, don't worry about it until you actually hit those bottlenecks. NB: your relationships should have inverse relationships!