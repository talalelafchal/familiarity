Where can I find the &quot;math, strings, etc... libraries&quot; for Swift?
<p>I am looking at the Swift documentation, but I can't find reference to what there's in other languages...</p> <p>Examples: <code>sin()</code>, <code>cos()</code>, <code>abs()</code> for math, <code>uppercase()</code>, <code>lowercase()</code> for strings, <code>sort()</code>, <code>pop()</code>, <code>push()</code> for arrays etc...</p> <p>For strings I've found this <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-XID_368">in the docs</a>:</p> <blockquote> <p>Swift’s String type is bridged seamlessly to Foundation’s NSString class. If you are working with the Foundation framework in Cocoa or Cocoa Touch, the entire NSString API is available to call on any String value you create, in addition to the String features described in this chapter. You can also use a String value with any API that requires an NSString instance.</p> </blockquote> <p>Could you point me to some doc or where can I find those functions listed?</p>
<p><code>sin()</code>, <code>cos()</code>, <code>abs()</code> are C methods defined in math.h <a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man3/math.3.html">https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man3/math.3.html</a></p> <p><code>"str".uppercaseString()</code> and <code>"str".lowercaseString()</code> are NSString methods.</p> <p><code>sort()</code> is part of the Swift Standard Library, documented at <a href="https://developer.apple.com/library/prerelease/mac/documentation/General/Reference/SwiftStandardLibraryReference/Algorithms.html#//apple_ref/doc/uid/TP40014608-CH15-SW1">https://developer.apple.com/library/prerelease/mac/documentation/General/Reference/SwiftStandardLibraryReference/Algorithms.html#//apple_ref/doc/uid/TP40014608-CH15-SW1</a></p> <p><code>Array.append()</code> and <code>Array.removeLast()</code> are also defined in the Swift Standard Library, documented at <a href="https://developer.apple.com/library/prerelease/mac/documentation/General/Reference/SwiftStandardLibraryReference/Array.html">https://developer.apple.com/library/prerelease/mac/documentation/General/Reference/SwiftStandardLibraryReference/Array.html</a></p>
<p>Looks like this is working...</p> <pre><code>import Foundation var theCosOfZero: Double = Double(cos(0)) // theCosOfZero equals 1 </code></pre>
<p>The math functions are defined in the <strong>Darwin</strong> module, so as absolute minimum you have add this:</p> <pre><code>import Darwin </code></pre> <p>In most cases <code>import Foundation</code> or <code>import Cocoa</code> will suffice, since those modules import the <code>Darwin</code> module. If you need access to constants like <code>M_PI</code> or similar, navigate with cmd+click to the <code>Darwin</code> module and the to the <code>Darwin.C</code>. Here you would find the C API imports and the <code>Darwin.C.math</code> among them. This way you may examine what's available, already converted to Swift. Nevertheless, all that C API is available with <code>import Darwin</code>. </p> <p>You cannot issue <code>import Darwin.C.math</code> directly, because you will see the following runtime error (or similar if you're not in the playground):</p> <pre><code>Playground execution failed: Error in auto-import: failed to get module 'math' from AST context </code></pre> <p>Example playground code:</p> <pre><code>import Darwin func degToRad(degrees: Double) -&gt; Double { // M_PI is defined in Darwin.C.math return M_PI * 2.0 * degrees / 360.0 } for deg in 0..&lt;360 { sin(degToRad(Double(deg))) } </code></pre>