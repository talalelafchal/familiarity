Delete keychain items when an app is uninstalled
<p>I am using <a href="http://log.scifihifi.com/post/55837387/simple-iphone-keychain-code">idandersen's scifihifi-iphone</a> code for keychain and save password using</p> <pre><code>[SFHFKeychainUtils storeUsername:@"User" andPassword:@"123" forServiceName:@"TestService" updateExisting:YES error:&amp;error]; </code></pre> <p>When I delete the application from the device, the password remains in the keychain.</p> <p>I want to remove the password from the keychain when the user deletes the application from the device. How can I do this?</p>
<p>There is no trigger to perform code when the app is deleted from the device. Access to the keychain is dependant on the provisioning profile that is used to sign the application. Therefore no other applications would be able to access this information in the keychain. </p> <p>It does not help with you aim to remove the password in the keychain when the user deletes application from the device but it should give you some comfort that the password is not accessible (only from a re-install of the original application).</p>
<p>You can take advantage of the fact that <code>NSUserDefaults</code> <em>are</em> cleared by uninstallation of an app. For example:</p> <pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions { //Clear keychain on first run in case of reinstallation if (![[NSUserDefaults standardUserDefaults] objectForKey:@"FirstRun"]) { // Delete values from keychain here [[NSUserDefaults standardUserDefaults] setValue:@"1strun" forKey:@"FirstRun"]; [[NSUserDefaults standardUserDefaults] synchronize]; } //...Other stuff that usually happens in didFinishLaunching } </code></pre> <p>This checks for and sets a "FirstRun" key/value in <code>NSUserDefaults</code> on the first run of your app if it's not already set. There's a comment where you should put code to delete values from the keychain. Synchronize can be called to make sure the "FirstRun" key/value is immediately persisted in case the user kills the app manually before the system persists it.</p>
<p>Like other answers, I would suggest using NSUserDefaults.</p> <p>Pretty much everything was said, but for the sake of universal knowledge and wisdom, here's an alternative on clearing the keychain on first launch: generate a random string that you'll append to your bundle identifier, and store it in NSUserDefaults. That way, if the user reinstalls the app, old passwords will still be there but shouldn't be picked up by the app - as the service name will be different.</p> <p>But... really, just wipe everything on first launch and you should be fine.</p>
<p>Files will be deleted from your app's document directory when the user uninstalls the app. Knowing this, all you have to do is check whether a file exists as the first thing that happens in <code>application:didFinishLaunchingWithOptions:</code>. Afterwards, unconditionally create the file (even if it's just a dummy file). </p> <p>If the file did not exist at time of check, you know this is the first run since the latest install. If you need to know later in the app, save the boolean result to your app delegate member. </p>
<p>For those looking for a Swift version of @amro's answer:</p> <pre><code> let userDefaults = NSUserDefaults.standardUserDefaults() if userDefaults.boolForKey("hasRunBefore") == false { // remove keychain items here // update the flag indicator userDefaults.setBool(true, forKey: "hasRunBefore") userDefaults.synchronize() // forces the app to update the NSUserDefaults return } </code></pre>
<p>For users looking for a <strong>Swift 3.0</strong> version of @amro's answer:</p> <pre><code>let userDefaults = UserDefaults.standard if userDefaults.bool(forKey: "hasRunBefore") == false { // Remove Keychain items here // Update the flag indicator userDefaults.set(true, forKey: "hasRunBefore") userDefaults.synchronize() // Forces the app to update UserDefaults } </code></pre>