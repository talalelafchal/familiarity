swift case falling through
<p>Does swift have fall through statement? e.g if I do the following</p> <pre><code>var testVar = "hello" var result = 0 switch(testVal) { case "one": result = 1 case "two": result = 1 default: result = 3 } </code></pre> <p>is it possible to have the same code executed for case "one" and case "two"?</p>
<p>Yes. You can do so as follows:</p> <pre><code>var testVar = "hello" var result = 0 switch(testVal) { case "one", "two": result = 1 default: result = 3 } </code></pre> <p>Alternatively, you can use the <code>fallthrough</code> keyword:</p> <pre><code>var testVar = "hello" var result = 0 switch(testVal) { case "one": fallthrough case "two": result = 1 default: result = 3 } </code></pre>
<pre><code>case "one", "two": result = 1 </code></pre> <p>There are no break statements, but cases are a lot more flexible.</p> <p><strong>Addendum:</strong> As Analog File points out, there actually are <code>break</code> statements in Swift. They're still available for use in loops, though unnecessary in <code>switch</code> statements. However, you may want to use a <code>break</code> to fill in an otherwise empty <code>case</code>, because empty cases are not allowed. For example <code>default: break</code></p>
<p>The keyword <code>fallthrough</code> at the end of a case causes the fall-through behavior you're looking for, and multiple values can be checked in a single case.</p>
<pre><code>var testVar = "hello" switch(testVar) { case "hello": println("hello match number 1") fallthrough case "two": println("two in not hello however the above fallthrough automatically always picks the case following whether there is a match or not! To me this is wrong") default: println("Default") } </code></pre>