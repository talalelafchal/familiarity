Does Swift have something like &quot;ref&quot; keyword that forces parameter to be passed by reference?
<p>In Swift, structs and value types are passed by value by default, just like in C#. But C# also has a very usable ref keyword, that forces the parameter to be passed by reference, so that the same instance could be changed inside the function and accessed from the caller's scope afterwards. Is there a way to achieve the same result in Swift?</p>
<p>Use the <code>inout</code> qualifier for a function parameter.</p> <pre><code>func swapTwoInts(a: inout Int, b: inout Int) { let temporaryA = a a = b b = temporaryA } swapTwoInts(&amp;someInt, &amp;anotherInt) </code></pre> <p>See <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-XID_206" rel="nofollow">Function Parameters and Return Values</a> in the docs.</p>