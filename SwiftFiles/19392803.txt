Customizing navigationBar in iOS7 - title color not working
<p>I am trying to customize the navigationBar of a navigation controller in iOS7 and the title color is not changing. I am doing the following:</p> <pre><code> [navigationController.navigationBar setBarTintColor:[UIColor colorWithRed:46.0f/256.0f green:46.0f/256.0f blue:46.0f/256.0f alpha:1]]; [navigationController.navigationBar setTranslucent:NO]; [navigationController.navigationBar setTitleTextAttributes:@{[UIColor whiteColor]:UITextAttributeTextColor}]; [self presentViewController:navigationController animated:YES completion:nil]; </code></pre> <p>The navigationBar translucency gets turned off and it is dark, but the title also stays dark. I've also tried to create a custom label and set it as the title view with not much luck.</p> <p>How can the title color be changed?</p>
<pre><code>[navigationController.navigationBar setBarStyle:UIBarStyleBlack]; </code></pre>
<p>Not working for me. Using UINavigation as a modal view controller.</p> <p>Apparently title colour needs to be set uiapplication level</p> <p>Edit:</p> <p>Best way is to change the navigation title in each VC context:</p> <pre><code>[self.navigationController.navigationBar setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor whiteColor], NSForegroundColorAttributeName,nil]]; </code></pre>
<p>actually looks like a bug. Try </p> <pre><code>myViewcontroller.title = @""; navigationController.navigationBar.barStyle = UIBarStyleBlack; myViewcontroller.title = @"TITLE"; </code></pre> <p>works.</p>
<p>The appearance api continues to evolve, and UITextAttributeTextColor is now replaced with NSForegroundColorAttributeName. </p> <pre><code>[navigationController.navigationBar setTitleTextAttributes:@{NSForegroundColorAttributeName : [UIColor whiteColor]}]; </code></pre> <p>I'll add two things:<br> The key comes first, then the object.</p> <p>If you want to globally change your nav controller's title attributes, use the appearance api:</p> <pre><code>[[UINavigationBar appearance] setTitleTextAttributes:@{NSForegroundColorAttributeName: [UIColor whiteColor]}]; </code></pre> <p>I'd put that appearance api call in your app delegate's didFinishLaunchingWithOptions method.</p> <p>UPDATE: Might as well post the Swift equivalents.<p> To update the navigationBar for an individual view controller, one can use:</p> <pre><code>self.navigationController.navigationBar.titleTextAttributes = [NSForegroundColorAttributeName:UIColor.whiteColor()] </code></pre> <p>To change the navigation bar's appearance throughout an entire app, one can use:</p> <pre><code>UINavigationBar.appearance().titleTextAttributes = [NSForegroundColorAttributeName:UIColor.whiteColor()] </code></pre>
<p>The problem in the OP's code is this line:</p> <pre><code>[navigationController.navigationBar setTitleTextAttributes:@{[UIColor whiteColor]:UITextAttributeTextColor}]; </code></pre> <p>The text color attribute name and value are mixed up. It should be</p> <pre><code>[navigationController.navigationBar setTitleTextAttributes:@{UITextAttributeTextColor:[UIColor whiteColor]}]; </code></pre>
<p>In swift you'll do the following:</p> <pre><code>self.navigationController.navigationBar.titleTextAttributes = [ NSForegroundColorAttributeName : UIColor.redColor(), NSFontAttributeName : UIFont.systemFontOfSize(20) ] </code></pre>
<p>Swift + UIAppearance version:</p> <pre><code> UINavigationBar.appearance().barTintColor = .blackColor() UINavigationBar.appearance().barStyle = .Black </code></pre>