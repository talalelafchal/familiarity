super.init() couldn't be called in swift3
When super.init() is called, it shows the error: Must call a designated initializer of the superclass 'UICollectionViewCell'. It did work perfectly when I used it in swift version 2.2. But once I upgraded Xcode version to 8.0, I have been using Swift version 3.0 and super.init() doesn't work for me.
As of swift3 they have removed init() for a UICollectionViewCell. So you have to do use super.init(frame: CGRect) instead of normal init().
You can use super.init(frame: CGRectZero)
You can use convenience initializer instead of designated initializer Swift has three rules as to how designated and convenience initializers relate to each other. Instead of trying to paraphrase them, I’m just going to quote Apple’s iBook directly: 1) A designated initializer must call a designated initializer from its immediate superclass. 2) A convenience initializer must call another initializer from the same class. 3) A convenience initializer must ultimately call a designated initializer. Excerpt From: Apple Inc. “The Swift Programming Language.” iBooks. https://itun.es/us/jEUH0.l Instead of init() { super.init() } you can use convenience init() { self.init() }
You just need to call the designated initializer as described in the error message. The designated initializer is public init(style: UITableViewCellStyle, reuseIdentifier: String?): // Designated initializer. If the cell can be reused, you must pass in a reuse identifier. You should use the same reuse identifier for all cells of the same form. @available(iOS 3.0, *) public init(style: UITableViewCellStyle, reuseIdentifier: String?) so you need to call something like: self.init(style: UITableViewCellStyle.default, reuseIdentifier: "myIdentifier") or super.init(style: UITableViewCellStyle.default, reuseIdentifier: "myIdentifier") instead of super.init()