Question mark(?) after data type
<p>These two statements make me confused</p> <pre><code>var optionalString: String? = "Hello" </code></pre> <p>Instead we could write it</p> <pre><code>var optionalString: String = "Hello" </code></pre> <p>What's the difference between these two?</p> <p>We can also do this without optional values. </p> <pre><code>var str: String = nil str = "Hello" </code></pre> <p>Please clarify.</p>
<p>The question mark signifies that it may contain either a value, or no value at all. Without it, it cannot ever be <code>nil</code>.</p> <pre><code>var str: String = "Hello" str = nil // Error </code></pre>
<p>The Question Mark (?) marks <strong>optional values</strong>. In Swift only optional values allowed to potentially be <code>nil</code>.</p> <p>The advantage of this feature is that it isn't necessary to check against <code>nil</code> for all non optional values.</p>
<p>Question mark (?) is way to mark a value optional, </p> <pre><code>var optionalString: String? = "Hello" </code></pre> <p>Mean optionalString could contain a value or it could be nil. </p> <p>Following is from Swift programming language book. </p> <blockquote> <p>In an if statement, the conditional must be a Boolean expression</p> <p>You can use if and let together to work with values that might be missing. These values are represented as optionals. An optional value either contains a value or contains nil to indicate that the value is missing. Write a question mark (?) after the type of a value to mark the value as optional.</p> </blockquote>